

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 10 12:39:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0xCA0,32
    37                           	dabs	1,0xC20,80
    38                           	dabs	1,0xBA0,80
    39                           	dabs	1,0xB20,80
    40                           	dabs	1,0xAA0,80
    41                           	dabs	1,0xA20,80
    42                           	dabs	1,0x9A0,80
    43                           	dabs	1,0x620,48
    44                           	dabs	1,0x5A0,80
    45                           	dabs	1,0x520,80
    46                           	dabs	1,0x4A0,80
    47                           	dabs	1,0x420,80
    48                           	dabs	1,0x3A0,80
    49                           	dabs	1,0x330,64
    50                           	dabs	1,0x25F0,0,_GLBL_WriteBuffer
    51                           	dabs	1,0x21F0,0,_GLBL_ReadBuffer
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1778 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0113                     	;# 
   146  0114                     	;# 
   147  0115                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  0118                     	;# 
   151  0119                     	;# 
   152  011A                     	;# 
   153  011B                     	;# 
   154  011C                     	;# 
   155  011D                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  0191                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0194                     	;# 
   165  0195                     	;# 
   166  0196                     	;# 
   167  0197                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  0210                     	;# 
   197  0211                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0213                     	;# 
   203  0214                     	;# 
   204  0214                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021E                     	;# 
   217  021F                     	;# 
   218  028C                     	;# 
   219  028D                     	;# 
   220  028E                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0297                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029C                     	;# 
   236  029E                     	;# 
   237  029F                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  0315                     	;# 
   242  0316                     	;# 
   243  0317                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031B                     	;# 
   247  031C                     	;# 
   248  031D                     	;# 
   249  031E                     	;# 
   250  031F                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0390                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  0393                     	;# 
   258  0394                     	;# 
   259  0395                     	;# 
   260  0396                     	;# 
   261  0397                     	;# 
   262  0398                     	;# 
   263  0399                     	;# 
   264  039D                     	;# 
   265  039E                     	;# 
   266  039F                     	;# 
   267  040D                     	;# 
   268  040F                     	;# 
   269  040F                     	;# 
   270  0410                     	;# 
   271  0411                     	;# 
   272  0412                     	;# 
   273  0413                     	;# 
   274  0413                     	;# 
   275  0414                     	;# 
   276  0414                     	;# 
   277  0415                     	;# 
   278  0416                     	;# 
   279  0417                     	;# 
   280  0418                     	;# 
   281  041A                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041B                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  041F                     	;# 
   289  048E                     	;# 
   290  048E                     	;# 
   291  048F                     	;# 
   292  0490                     	;# 
   293  0491                     	;# 
   294  0492                     	;# 
   295  0493                     	;# 
   296  0493                     	;# 
   297  0494                     	;# 
   298  0494                     	;# 
   299  0495                     	;# 
   300  0496                     	;# 
   301  0497                     	;# 
   302  0498                     	;# 
   303  049A                     	;# 
   304  049A                     	;# 
   305  049B                     	;# 
   306  049B                     	;# 
   307  049C                     	;# 
   308  049D                     	;# 
   309  049E                     	;# 
   310  049F                     	;# 
   311  050F                     	;# 
   312  0510                     	;# 
   313  0511                     	;# 
   314  0512                     	;# 
   315  0513                     	;# 
   316  0514                     	;# 
   317  0515                     	;# 
   318  0516                     	;# 
   319  0517                     	;# 
   320  0518                     	;# 
   321  0519                     	;# 
   322  051A                     	;# 
   323  058D                     	;# 
   324  058E                     	;# 
   325  058F                     	;# 
   326  058F                     	;# 
   327  058F                     	;# 
   328  0590                     	;# 
   329  0590                     	;# 
   330  0591                     	;# 
   331  0592                     	;# 
   332  0592                     	;# 
   333  0592                     	;# 
   334  0593                     	;# 
   335  0593                     	;# 
   336  0594                     	;# 
   337  0595                     	;# 
   338  0595                     	;# 
   339  0596                     	;# 
   340  0597                     	;# 
   341  0597                     	;# 
   342  0598                     	;# 
   343  0599                     	;# 
   344  0599                     	;# 
   345  0599                     	;# 
   346  059A                     	;# 
   347  059A                     	;# 
   348  059E                     	;# 
   349  059F                     	;# 
   350  059F                     	;# 
   351  0614                     	;# 
   352  0614                     	;# 
   353  0615                     	;# 
   354  0616                     	;# 
   355  0617                     	;# 
   356  0617                     	;# 
   357  0618                     	;# 
   358  0619                     	;# 
   359  061A                     	;# 
   360  061A                     	;# 
   361  061B                     	;# 
   362  061C                     	;# 
   363  068D                     	;# 
   364  068E                     	;# 
   365  068F                     	;# 
   366  0690                     	;# 
   367  0691                     	;# 
   368  0692                     	;# 
   369  0693                     	;# 
   370  0694                     	;# 
   371  0695                     	;# 
   372  0696                     	;# 
   373  0697                     	;# 
   374  0698                     	;# 
   375  0699                     	;# 
   376  069A                     	;# 
   377  069B                     	;# 
   378  069C                     	;# 
   379  069D                     	;# 
   380  069E                     	;# 
   381  069F                     	;# 
   382  070D                     	;# 
   383  070E                     	;# 
   384  070F                     	;# 
   385  0710                     	;# 
   386  0711                     	;# 
   387  0712                     	;# 
   388  0713                     	;# 
   389  0714                     	;# 
   390  0715                     	;# 
   391  0716                     	;# 
   392  0717                     	;# 
   393  0718                     	;# 
   394  0719                     	;# 
   395  071A                     	;# 
   396  071B                     	;# 
   397  071C                     	;# 
   398  071D                     	;# 
   399  071E                     	;# 
   400  071F                     	;# 
   401  078E                     	;# 
   402  078F                     	;# 
   403  0790                     	;# 
   404  0791                     	;# 
   405  0792                     	;# 
   406  0793                     	;# 
   407  0794                     	;# 
   408  0795                     	;# 
   409  0796                     	;# 
   410  0797                     	;# 
   411  0798                     	;# 
   412  0799                     	;# 
   413  079A                     	;# 
   414  079B                     	;# 
   415  079C                     	;# 
   416  079D                     	;# 
   417  079E                     	;# 
   418  079F                     	;# 
   419  080D                     	;# 
   420  080E                     	;# 
   421  080F                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  0815                     	;# 
   428  0816                     	;# 
   429  0817                     	;# 
   430  0818                     	;# 
   431  0819                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  090C                     	;# 
   439  090D                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  0910                     	;# 
   443  0911                     	;# 
   444  0912                     	;# 
   445  0913                     	;# 
   446  0914                     	;# 
   447  0915                     	;# 
   448  0916                     	;# 
   449  0917                     	;# 
   450  0D8E                     	;# 
   451  0D8F                     	;# 
   452  0D90                     	;# 
   453  0D91                     	;# 
   454  0D91                     	;# 
   455  0D92                     	;# 
   456  0D93                     	;# 
   457  0D93                     	;# 
   458  0D94                     	;# 
   459  0D95                     	;# 
   460  0D95                     	;# 
   461  0D96                     	;# 
   462  0D97                     	;# 
   463  0D97                     	;# 
   464  0D98                     	;# 
   465  0D99                     	;# 
   466  0D99                     	;# 
   467  0D9A                     	;# 
   468  0D9B                     	;# 
   469  0D9C                     	;# 
   470  0D9C                     	;# 
   471  0D9D                     	;# 
   472  0D9D                     	;# 
   473  0D9E                     	;# 
   474  0D9F                     	;# 
   475  0DA0                     	;# 
   476  0DA1                     	;# 
   477  0DA1                     	;# 
   478  0DA2                     	;# 
   479  0DA3                     	;# 
   480  0DA3                     	;# 
   481  0DA4                     	;# 
   482  0DA5                     	;# 
   483  0DA5                     	;# 
   484  0DA6                     	;# 
   485  0DA7                     	;# 
   486  0DA7                     	;# 
   487  0DA8                     	;# 
   488  0DA9                     	;# 
   489  0DA9                     	;# 
   490  0DAA                     	;# 
   491  0DAB                     	;# 
   492  0DAC                     	;# 
   493  0DAC                     	;# 
   494  0DAD                     	;# 
   495  0DAD                     	;# 
   496  0DAE                     	;# 
   497  0DAF                     	;# 
   498  0DB0                     	;# 
   499  0DB1                     	;# 
   500  0DB1                     	;# 
   501  0DB2                     	;# 
   502  0DB3                     	;# 
   503  0DB3                     	;# 
   504  0DB4                     	;# 
   505  0DB5                     	;# 
   506  0DB5                     	;# 
   507  0DB6                     	;# 
   508  0DB7                     	;# 
   509  0DB7                     	;# 
   510  0DB8                     	;# 
   511  0DB9                     	;# 
   512  0DB9                     	;# 
   513  0DBA                     	;# 
   514  0DBB                     	;# 
   515  0DBC                     	;# 
   516  0DBC                     	;# 
   517  0DBD                     	;# 
   518  0DBD                     	;# 
   519  0DBE                     	;# 
   520  0DBF                     	;# 
   521  0DC0                     	;# 
   522  0E0C                     	;# 
   523  0E0D                     	;# 
   524  0E0E                     	;# 
   525  0E0F                     	;# 
   526  0E10                     	;# 
   527  0E11                     	;# 
   528  0E12                     	;# 
   529  0E13                     	;# 
   530  0E14                     	;# 
   531  0E15                     	;# 
   532  0E15                     	;# 
   533  0E15                     	;# 
   534  0E16                     	;# 
   535  0E16                     	;# 
   536  0E16                     	;# 
   537  0E17                     	;# 
   538  0E17                     	;# 
   539  0E17                     	;# 
   540  0E18                     	;# 
   541  0E18                     	;# 
   542  0E18                     	;# 
   543  0E19                     	;# 
   544  0E1A                     	;# 
   545  0E1B                     	;# 
   546  0E1D                     	;# 
   547  0E1E                     	;# 
   548  0E1F                     	;# 
   549  0E21                     	;# 
   550  0E22                     	;# 
   551  0E23                     	;# 
   552  0E24                     	;# 
   553  0E25                     	;# 
   554  0E26                     	;# 
   555  0E27                     	;# 
   556  0E28                     	;# 
   557  0E29                     	;# 
   558  0E2D                     	;# 
   559  0E2E                     	;# 
   560  0E2F                     	;# 
   561  0E30                     	;# 
   562  0E31                     	;# 
   563  0E32                     	;# 
   564  0E35                     	;# 
   565  0E36                     	;# 
   566  0E37                     	;# 
   567  0E38                     	;# 
   568  0E39                     	;# 
   569  0E3A                     	;# 
   570  0E3B                     	;# 
   571  0E3C                     	;# 
   572  0E3D                     	;# 
   573  0E3E                     	;# 
   574  0E90                     	;# 
   575  0E91                     	;# 
   576  0E92                     	;# 
   577  0E93                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E98                     	;# 
   583  0E99                     	;# 
   584  0E9A                     	;# 
   585  0E9B                     	;# 
   586  0E9C                     	;# 
   587  0E9D                     	;# 
   588  0E9E                     	;# 
   589  0E9F                     	;# 
   590  0EA0                     	;# 
   591  0EA1                     	;# 
   592  0EA2                     	;# 
   593  0EA3                     	;# 
   594  0EA4                     	;# 
   595  0EA5                     	;# 
   596  0EA6                     	;# 
   597  0EA7                     	;# 
   598  0F0F                     	;# 
   599  0F10                     	;# 
   600  0F11                     	;# 
   601  0F12                     	;# 
   602  0F13                     	;# 
   603  0F14                     	;# 
   604  0F15                     	;# 
   605  0F16                     	;# 
   606  0F17                     	;# 
   607  0F18                     	;# 
   608  0F19                     	;# 
   609  0F1A                     	;# 
   610  0F1B                     	;# 
   611  0F1C                     	;# 
   612  0F1D                     	;# 
   613  0F1E                     	;# 
   614  0F1F                     	;# 
   615  0F20                     	;# 
   616  0F21                     	;# 
   617  0F22                     	;# 
   618  0F23                     	;# 
   619  0F24                     	;# 
   620  0F25                     	;# 
   621  0F26                     	;# 
   622  0F27                     	;# 
   623  0F28                     	;# 
   624  0F29                     	;# 
   625  0F2A                     	;# 
   626  0F2B                     	;# 
   627  0F2C                     	;# 
   628  0F2D                     	;# 
   629  0F2E                     	;# 
   630  0F2F                     	;# 
   631  0F30                     	;# 
   632  0F31                     	;# 
   633  0F32                     	;# 
   634  0F33                     	;# 
   635  0F34                     	;# 
   636  0F35                     	;# 
   637  0F36                     	;# 
   638  0F37                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  0010                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0014                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001B                     	;# 
   678  001C                     	;# 
   679  001C                     	;# 
   680  001D                     	;# 
   681  001E                     	;# 
   682  001F                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  009F                     	;# 
   702  010C                     	;# 
   703  010D                     	;# 
   704  010E                     	;# 
   705  0111                     	;# 
   706  0112                     	;# 
   707  0113                     	;# 
   708  0114                     	;# 
   709  0115                     	;# 
   710  0116                     	;# 
   711  0117                     	;# 
   712  0118                     	;# 
   713  0119                     	;# 
   714  011A                     	;# 
   715  011B                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  018C                     	;# 
   719  018D                     	;# 
   720  018E                     	;# 
   721  0191                     	;# 
   722  0191                     	;# 
   723  0192                     	;# 
   724  0193                     	;# 
   725  0193                     	;# 
   726  0194                     	;# 
   727  0195                     	;# 
   728  0196                     	;# 
   729  0197                     	;# 
   730  0199                     	;# 
   731  0199                     	;# 
   732  0199                     	;# 
   733  019A                     	;# 
   734  019A                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019D                     	;# 
   745  019D                     	;# 
   746  019D                     	;# 
   747  019E                     	;# 
   748  019E                     	;# 
   749  019E                     	;# 
   750  019F                     	;# 
   751  019F                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  020C                     	;# 
   756  020D                     	;# 
   757  020E                     	;# 
   758  0210                     	;# 
   759  0211                     	;# 
   760  0211                     	;# 
   761  0212                     	;# 
   762  0212                     	;# 
   763  0213                     	;# 
   764  0213                     	;# 
   765  0214                     	;# 
   766  0214                     	;# 
   767  0215                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0216                     	;# 
   772  0216                     	;# 
   773  0217                     	;# 
   774  0217                     	;# 
   775  021B                     	;# 
   776  021C                     	;# 
   777  021D                     	;# 
   778  021E                     	;# 
   779  021F                     	;# 
   780  028C                     	;# 
   781  028D                     	;# 
   782  028E                     	;# 
   783  0291                     	;# 
   784  0291                     	;# 
   785  0292                     	;# 
   786  0293                     	;# 
   787  0294                     	;# 
   788  0295                     	;# 
   789  0295                     	;# 
   790  0296                     	;# 
   791  0297                     	;# 
   792  0298                     	;# 
   793  0299                     	;# 
   794  0299                     	;# 
   795  029A                     	;# 
   796  029B                     	;# 
   797  029C                     	;# 
   798  029E                     	;# 
   799  029F                     	;# 
   800  030C                     	;# 
   801  030D                     	;# 
   802  030E                     	;# 
   803  0315                     	;# 
   804  0316                     	;# 
   805  0317                     	;# 
   806  0318                     	;# 
   807  0319                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038D                     	;# 
   815  038E                     	;# 
   816  0390                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  0393                     	;# 
   820  0394                     	;# 
   821  0395                     	;# 
   822  0396                     	;# 
   823  0397                     	;# 
   824  0398                     	;# 
   825  0399                     	;# 
   826  039D                     	;# 
   827  039E                     	;# 
   828  039F                     	;# 
   829  040D                     	;# 
   830  040F                     	;# 
   831  040F                     	;# 
   832  0410                     	;# 
   833  0411                     	;# 
   834  0412                     	;# 
   835  0413                     	;# 
   836  0413                     	;# 
   837  0414                     	;# 
   838  0414                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  0418                     	;# 
   843  041A                     	;# 
   844  041A                     	;# 
   845  041B                     	;# 
   846  041B                     	;# 
   847  041C                     	;# 
   848  041D                     	;# 
   849  041E                     	;# 
   850  041F                     	;# 
   851  048E                     	;# 
   852  048E                     	;# 
   853  048F                     	;# 
   854  0490                     	;# 
   855  0491                     	;# 
   856  0492                     	;# 
   857  0493                     	;# 
   858  0493                     	;# 
   859  0494                     	;# 
   860  0494                     	;# 
   861  0495                     	;# 
   862  0496                     	;# 
   863  0497                     	;# 
   864  0498                     	;# 
   865  049A                     	;# 
   866  049A                     	;# 
   867  049B                     	;# 
   868  049B                     	;# 
   869  049C                     	;# 
   870  049D                     	;# 
   871  049E                     	;# 
   872  049F                     	;# 
   873  050F                     	;# 
   874  0510                     	;# 
   875  0511                     	;# 
   876  0512                     	;# 
   877  0513                     	;# 
   878  0514                     	;# 
   879  0515                     	;# 
   880  0516                     	;# 
   881  0517                     	;# 
   882  0518                     	;# 
   883  0519                     	;# 
   884  051A                     	;# 
   885  058D                     	;# 
   886  058E                     	;# 
   887  058F                     	;# 
   888  058F                     	;# 
   889  058F                     	;# 
   890  0590                     	;# 
   891  0590                     	;# 
   892  0591                     	;# 
   893  0592                     	;# 
   894  0592                     	;# 
   895  0592                     	;# 
   896  0593                     	;# 
   897  0593                     	;# 
   898  0594                     	;# 
   899  0595                     	;# 
   900  0595                     	;# 
   901  0596                     	;# 
   902  0597                     	;# 
   903  0597                     	;# 
   904  0598                     	;# 
   905  0599                     	;# 
   906  0599                     	;# 
   907  0599                     	;# 
   908  059A                     	;# 
   909  059A                     	;# 
   910  059E                     	;# 
   911  059F                     	;# 
   912  059F                     	;# 
   913  0614                     	;# 
   914  0614                     	;# 
   915  0615                     	;# 
   916  0616                     	;# 
   917  0617                     	;# 
   918  0617                     	;# 
   919  0618                     	;# 
   920  0619                     	;# 
   921  061A                     	;# 
   922  061A                     	;# 
   923  061B                     	;# 
   924  061C                     	;# 
   925  068D                     	;# 
   926  068E                     	;# 
   927  068F                     	;# 
   928  0690                     	;# 
   929  0691                     	;# 
   930  0692                     	;# 
   931  0693                     	;# 
   932  0694                     	;# 
   933  0695                     	;# 
   934  0696                     	;# 
   935  0697                     	;# 
   936  0698                     	;# 
   937  0699                     	;# 
   938  069A                     	;# 
   939  069B                     	;# 
   940  069C                     	;# 
   941  069D                     	;# 
   942  069E                     	;# 
   943  069F                     	;# 
   944  070D                     	;# 
   945  070E                     	;# 
   946  070F                     	;# 
   947  0710                     	;# 
   948  0711                     	;# 
   949  0712                     	;# 
   950  0713                     	;# 
   951  0714                     	;# 
   952  0715                     	;# 
   953  0716                     	;# 
   954  0717                     	;# 
   955  0718                     	;# 
   956  0719                     	;# 
   957  071A                     	;# 
   958  071B                     	;# 
   959  071C                     	;# 
   960  071D                     	;# 
   961  071E                     	;# 
   962  071F                     	;# 
   963  078E                     	;# 
   964  078F                     	;# 
   965  0790                     	;# 
   966  0791                     	;# 
   967  0792                     	;# 
   968  0793                     	;# 
   969  0794                     	;# 
   970  0795                     	;# 
   971  0796                     	;# 
   972  0797                     	;# 
   973  0798                     	;# 
   974  0799                     	;# 
   975  079A                     	;# 
   976  079B                     	;# 
   977  079C                     	;# 
   978  079D                     	;# 
   979  079E                     	;# 
   980  079F                     	;# 
   981  080D                     	;# 
   982  080E                     	;# 
   983  080F                     	;# 
   984  0810                     	;# 
   985  0811                     	;# 
   986  0812                     	;# 
   987  0813                     	;# 
   988  0814                     	;# 
   989  0815                     	;# 
   990  0816                     	;# 
   991  0817                     	;# 
   992  0818                     	;# 
   993  0819                     	;# 
   994  081A                     	;# 
   995  081B                     	;# 
   996  081C                     	;# 
   997  081D                     	;# 
   998  081E                     	;# 
   999  081F                     	;# 
  1000  090C                     	;# 
  1001  090D                     	;# 
  1002  090E                     	;# 
  1003  090F                     	;# 
  1004  0910                     	;# 
  1005  0911                     	;# 
  1006  0912                     	;# 
  1007  0913                     	;# 
  1008  0914                     	;# 
  1009  0915                     	;# 
  1010  0916                     	;# 
  1011  0917                     	;# 
  1012  0D8E                     	;# 
  1013  0D8F                     	;# 
  1014  0D90                     	;# 
  1015  0D91                     	;# 
  1016  0D91                     	;# 
  1017  0D92                     	;# 
  1018  0D93                     	;# 
  1019  0D93                     	;# 
  1020  0D94                     	;# 
  1021  0D95                     	;# 
  1022  0D95                     	;# 
  1023  0D96                     	;# 
  1024  0D97                     	;# 
  1025  0D97                     	;# 
  1026  0D98                     	;# 
  1027  0D99                     	;# 
  1028  0D99                     	;# 
  1029  0D9A                     	;# 
  1030  0D9B                     	;# 
  1031  0D9C                     	;# 
  1032  0D9C                     	;# 
  1033  0D9D                     	;# 
  1034  0D9D                     	;# 
  1035  0D9E                     	;# 
  1036  0D9F                     	;# 
  1037  0DA0                     	;# 
  1038  0DA1                     	;# 
  1039  0DA1                     	;# 
  1040  0DA2                     	;# 
  1041  0DA3                     	;# 
  1042  0DA3                     	;# 
  1043  0DA4                     	;# 
  1044  0DA5                     	;# 
  1045  0DA5                     	;# 
  1046  0DA6                     	;# 
  1047  0DA7                     	;# 
  1048  0DA7                     	;# 
  1049  0DA8                     	;# 
  1050  0DA9                     	;# 
  1051  0DA9                     	;# 
  1052  0DAA                     	;# 
  1053  0DAB                     	;# 
  1054  0DAC                     	;# 
  1055  0DAC                     	;# 
  1056  0DAD                     	;# 
  1057  0DAD                     	;# 
  1058  0DAE                     	;# 
  1059  0DAF                     	;# 
  1060  0DB0                     	;# 
  1061  0DB1                     	;# 
  1062  0DB1                     	;# 
  1063  0DB2                     	;# 
  1064  0DB3                     	;# 
  1065  0DB3                     	;# 
  1066  0DB4                     	;# 
  1067  0DB5                     	;# 
  1068  0DB5                     	;# 
  1069  0DB6                     	;# 
  1070  0DB7                     	;# 
  1071  0DB7                     	;# 
  1072  0DB8                     	;# 
  1073  0DB9                     	;# 
  1074  0DB9                     	;# 
  1075  0DBA                     	;# 
  1076  0DBB                     	;# 
  1077  0DBC                     	;# 
  1078  0DBC                     	;# 
  1079  0DBD                     	;# 
  1080  0DBD                     	;# 
  1081  0DBE                     	;# 
  1082  0DBF                     	;# 
  1083  0DC0                     	;# 
  1084  0E0C                     	;# 
  1085  0E0D                     	;# 
  1086  0E0E                     	;# 
  1087  0E0F                     	;# 
  1088  0E10                     	;# 
  1089  0E11                     	;# 
  1090  0E12                     	;# 
  1091  0E13                     	;# 
  1092  0E14                     	;# 
  1093  0E15                     	;# 
  1094  0E15                     	;# 
  1095  0E15                     	;# 
  1096  0E16                     	;# 
  1097  0E16                     	;# 
  1098  0E16                     	;# 
  1099  0E17                     	;# 
  1100  0E17                     	;# 
  1101  0E17                     	;# 
  1102  0E18                     	;# 
  1103  0E18                     	;# 
  1104  0E18                     	;# 
  1105  0E19                     	;# 
  1106  0E1A                     	;# 
  1107  0E1B                     	;# 
  1108  0E1D                     	;# 
  1109  0E1E                     	;# 
  1110  0E1F                     	;# 
  1111  0E21                     	;# 
  1112  0E22                     	;# 
  1113  0E23                     	;# 
  1114  0E24                     	;# 
  1115  0E25                     	;# 
  1116  0E26                     	;# 
  1117  0E27                     	;# 
  1118  0E28                     	;# 
  1119  0E29                     	;# 
  1120  0E2D                     	;# 
  1121  0E2E                     	;# 
  1122  0E2F                     	;# 
  1123  0E30                     	;# 
  1124  0E31                     	;# 
  1125  0E32                     	;# 
  1126  0E35                     	;# 
  1127  0E36                     	;# 
  1128  0E37                     	;# 
  1129  0E38                     	;# 
  1130  0E39                     	;# 
  1131  0E3A                     	;# 
  1132  0E3B                     	;# 
  1133  0E3C                     	;# 
  1134  0E3D                     	;# 
  1135  0E3E                     	;# 
  1136  0E90                     	;# 
  1137  0E91                     	;# 
  1138  0E92                     	;# 
  1139  0E93                     	;# 
  1140  0E94                     	;# 
  1141  0E95                     	;# 
  1142  0E96                     	;# 
  1143  0E97                     	;# 
  1144  0E98                     	;# 
  1145  0E99                     	;# 
  1146  0E9A                     	;# 
  1147  0E9B                     	;# 
  1148  0E9C                     	;# 
  1149  0E9D                     	;# 
  1150  0E9E                     	;# 
  1151  0E9F                     	;# 
  1152  0EA0                     	;# 
  1153  0EA1                     	;# 
  1154  0EA2                     	;# 
  1155  0EA3                     	;# 
  1156  0EA4                     	;# 
  1157  0EA5                     	;# 
  1158  0EA6                     	;# 
  1159  0EA7                     	;# 
  1160  0F0F                     	;# 
  1161  0F10                     	;# 
  1162  0F11                     	;# 
  1163  0F12                     	;# 
  1164  0F13                     	;# 
  1165  0F14                     	;# 
  1166  0F15                     	;# 
  1167  0F16                     	;# 
  1168  0F17                     	;# 
  1169  0F18                     	;# 
  1170  0F19                     	;# 
  1171  0F1A                     	;# 
  1172  0F1B                     	;# 
  1173  0F1C                     	;# 
  1174  0F1D                     	;# 
  1175  0F1E                     	;# 
  1176  0F1F                     	;# 
  1177  0F20                     	;# 
  1178  0F21                     	;# 
  1179  0F22                     	;# 
  1180  0F23                     	;# 
  1181  0F24                     	;# 
  1182  0F25                     	;# 
  1183  0F26                     	;# 
  1184  0F27                     	;# 
  1185  0F28                     	;# 
  1186  0F29                     	;# 
  1187  0F2A                     	;# 
  1188  0F2B                     	;# 
  1189  0F2C                     	;# 
  1190  0F2D                     	;# 
  1191  0F2E                     	;# 
  1192  0F2F                     	;# 
  1193  0F30                     	;# 
  1194  0F31                     	;# 
  1195  0F32                     	;# 
  1196  0F33                     	;# 
  1197  0F34                     	;# 
  1198  0F35                     	;# 
  1199  0F36                     	;# 
  1200  0F37                     	;# 
  1201  0FE4                     	;# 
  1202  0FE5                     	;# 
  1203  0FE6                     	;# 
  1204  0FE7                     	;# 
  1205  0FE8                     	;# 
  1206  0FE9                     	;# 
  1207  0FEA                     	;# 
  1208  0FEB                     	;# 
  1209  0FED                     	;# 
  1210  0FEE                     	;# 
  1211  0FEF                     	;# 
  1212  0000                     	;# 
  1213  0001                     	;# 
  1214  0002                     	;# 
  1215  0003                     	;# 
  1216  0004                     	;# 
  1217  0005                     	;# 
  1218  0006                     	;# 
  1219  0007                     	;# 
  1220  0008                     	;# 
  1221  0009                     	;# 
  1222  000A                     	;# 
  1223  000B                     	;# 
  1224  000C                     	;# 
  1225  000D                     	;# 
  1226  000E                     	;# 
  1227  0010                     	;# 
  1228  0011                     	;# 
  1229  0012                     	;# 
  1230  0013                     	;# 
  1231  0014                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0018                     	;# 
  1237  0019                     	;# 
  1238  001A                     	;# 
  1239  001B                     	;# 
  1240  001C                     	;# 
  1241  001C                     	;# 
  1242  001D                     	;# 
  1243  001E                     	;# 
  1244  001F                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  0090                     	;# 
  1249  0091                     	;# 
  1250  0092                     	;# 
  1251  0093                     	;# 
  1252  0094                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009A                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  009F                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  0111                     	;# 
  1268  0112                     	;# 
  1269  0113                     	;# 
  1270  0114                     	;# 
  1271  0115                     	;# 
  1272  0116                     	;# 
  1273  0117                     	;# 
  1274  0118                     	;# 
  1275  0119                     	;# 
  1276  011A                     	;# 
  1277  011B                     	;# 
  1278  011C                     	;# 
  1279  011D                     	;# 
  1280  018C                     	;# 
  1281  018D                     	;# 
  1282  018E                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0194                     	;# 
  1289  0195                     	;# 
  1290  0196                     	;# 
  1291  0197                     	;# 
  1292  0199                     	;# 
  1293  0199                     	;# 
  1294  0199                     	;# 
  1295  019A                     	;# 
  1296  019A                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019C                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019D                     	;# 
  1307  019D                     	;# 
  1308  019D                     	;# 
  1309  019E                     	;# 
  1310  019E                     	;# 
  1311  019E                     	;# 
  1312  019F                     	;# 
  1313  019F                     	;# 
  1314  019F                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  020C                     	;# 
  1318  020D                     	;# 
  1319  020E                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0213                     	;# 
  1327  0214                     	;# 
  1328  0214                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0216                     	;# 
  1334  0216                     	;# 
  1335  0217                     	;# 
  1336  0217                     	;# 
  1337  021B                     	;# 
  1338  021C                     	;# 
  1339  021D                     	;# 
  1340  021E                     	;# 
  1341  021F                     	;# 
  1342  028C                     	;# 
  1343  028D                     	;# 
  1344  028E                     	;# 
  1345  0291                     	;# 
  1346  0291                     	;# 
  1347  0292                     	;# 
  1348  0293                     	;# 
  1349  0294                     	;# 
  1350  0295                     	;# 
  1351  0295                     	;# 
  1352  0296                     	;# 
  1353  0297                     	;# 
  1354  0298                     	;# 
  1355  0299                     	;# 
  1356  0299                     	;# 
  1357  029A                     	;# 
  1358  029B                     	;# 
  1359  029C                     	;# 
  1360  029E                     	;# 
  1361  029F                     	;# 
  1362  030C                     	;# 
  1363  030D                     	;# 
  1364  030E                     	;# 
  1365  0315                     	;# 
  1366  0316                     	;# 
  1367  0317                     	;# 
  1368  0318                     	;# 
  1369  0319                     	;# 
  1370  031B                     	;# 
  1371  031C                     	;# 
  1372  031D                     	;# 
  1373  031E                     	;# 
  1374  031F                     	;# 
  1375  038C                     	;# 
  1376  038D                     	;# 
  1377  038E                     	;# 
  1378  0390                     	;# 
  1379  0391                     	;# 
  1380  0392                     	;# 
  1381  0393                     	;# 
  1382  0394                     	;# 
  1383  0395                     	;# 
  1384  0396                     	;# 
  1385  0397                     	;# 
  1386  0398                     	;# 
  1387  0399                     	;# 
  1388  039D                     	;# 
  1389  039E                     	;# 
  1390  039F                     	;# 
  1391  040D                     	;# 
  1392  040F                     	;# 
  1393  040F                     	;# 
  1394  0410                     	;# 
  1395  0411                     	;# 
  1396  0412                     	;# 
  1397  0413                     	;# 
  1398  0413                     	;# 
  1399  0414                     	;# 
  1400  0414                     	;# 
  1401  0415                     	;# 
  1402  0416                     	;# 
  1403  0417                     	;# 
  1404  0418                     	;# 
  1405  041A                     	;# 
  1406  041A                     	;# 
  1407  041B                     	;# 
  1408  041B                     	;# 
  1409  041C                     	;# 
  1410  041D                     	;# 
  1411  041E                     	;# 
  1412  041F                     	;# 
  1413  048E                     	;# 
  1414  048E                     	;# 
  1415  048F                     	;# 
  1416  0490                     	;# 
  1417  0491                     	;# 
  1418  0492                     	;# 
  1419  0493                     	;# 
  1420  0493                     	;# 
  1421  0494                     	;# 
  1422  0494                     	;# 
  1423  0495                     	;# 
  1424  0496                     	;# 
  1425  0497                     	;# 
  1426  0498                     	;# 
  1427  049A                     	;# 
  1428  049A                     	;# 
  1429  049B                     	;# 
  1430  049B                     	;# 
  1431  049C                     	;# 
  1432  049D                     	;# 
  1433  049E                     	;# 
  1434  049F                     	;# 
  1435  050F                     	;# 
  1436  0510                     	;# 
  1437  0511                     	;# 
  1438  0512                     	;# 
  1439  0513                     	;# 
  1440  0514                     	;# 
  1441  0515                     	;# 
  1442  0516                     	;# 
  1443  0517                     	;# 
  1444  0518                     	;# 
  1445  0519                     	;# 
  1446  051A                     	;# 
  1447  058D                     	;# 
  1448  058E                     	;# 
  1449  058F                     	;# 
  1450  058F                     	;# 
  1451  058F                     	;# 
  1452  0590                     	;# 
  1453  0590                     	;# 
  1454  0591                     	;# 
  1455  0592                     	;# 
  1456  0592                     	;# 
  1457  0592                     	;# 
  1458  0593                     	;# 
  1459  0593                     	;# 
  1460  0594                     	;# 
  1461  0595                     	;# 
  1462  0595                     	;# 
  1463  0596                     	;# 
  1464  0597                     	;# 
  1465  0597                     	;# 
  1466  0598                     	;# 
  1467  0599                     	;# 
  1468  0599                     	;# 
  1469  0599                     	;# 
  1470  059A                     	;# 
  1471  059A                     	;# 
  1472  059E                     	;# 
  1473  059F                     	;# 
  1474  059F                     	;# 
  1475  0614                     	;# 
  1476  0614                     	;# 
  1477  0615                     	;# 
  1478  0616                     	;# 
  1479  0617                     	;# 
  1480  0617                     	;# 
  1481  0618                     	;# 
  1482  0619                     	;# 
  1483  061A                     	;# 
  1484  061A                     	;# 
  1485  061B                     	;# 
  1486  061C                     	;# 
  1487  068D                     	;# 
  1488  068E                     	;# 
  1489  068F                     	;# 
  1490  0690                     	;# 
  1491  0691                     	;# 
  1492  0692                     	;# 
  1493  0693                     	;# 
  1494  0694                     	;# 
  1495  0695                     	;# 
  1496  0696                     	;# 
  1497  0697                     	;# 
  1498  0698                     	;# 
  1499  0699                     	;# 
  1500  069A                     	;# 
  1501  069B                     	;# 
  1502  069C                     	;# 
  1503  069D                     	;# 
  1504  069E                     	;# 
  1505  069F                     	;# 
  1506  070D                     	;# 
  1507  070E                     	;# 
  1508  070F                     	;# 
  1509  0710                     	;# 
  1510  0711                     	;# 
  1511  0712                     	;# 
  1512  0713                     	;# 
  1513  0714                     	;# 
  1514  0715                     	;# 
  1515  0716                     	;# 
  1516  0717                     	;# 
  1517  0718                     	;# 
  1518  0719                     	;# 
  1519  071A                     	;# 
  1520  071B                     	;# 
  1521  071C                     	;# 
  1522  071D                     	;# 
  1523  071E                     	;# 
  1524  071F                     	;# 
  1525  078E                     	;# 
  1526  078F                     	;# 
  1527  0790                     	;# 
  1528  0791                     	;# 
  1529  0792                     	;# 
  1530  0793                     	;# 
  1531  0794                     	;# 
  1532  0795                     	;# 
  1533  0796                     	;# 
  1534  0797                     	;# 
  1535  0798                     	;# 
  1536  0799                     	;# 
  1537  079A                     	;# 
  1538  079B                     	;# 
  1539  079C                     	;# 
  1540  079D                     	;# 
  1541  079E                     	;# 
  1542  079F                     	;# 
  1543  080D                     	;# 
  1544  080E                     	;# 
  1545  080F                     	;# 
  1546  0810                     	;# 
  1547  0811                     	;# 
  1548  0812                     	;# 
  1549  0813                     	;# 
  1550  0814                     	;# 
  1551  0815                     	;# 
  1552  0816                     	;# 
  1553  0817                     	;# 
  1554  0818                     	;# 
  1555  0819                     	;# 
  1556  081A                     	;# 
  1557  081B                     	;# 
  1558  081C                     	;# 
  1559  081D                     	;# 
  1560  081E                     	;# 
  1561  081F                     	;# 
  1562  090C                     	;# 
  1563  090D                     	;# 
  1564  090E                     	;# 
  1565  090F                     	;# 
  1566  0910                     	;# 
  1567  0911                     	;# 
  1568  0912                     	;# 
  1569  0913                     	;# 
  1570  0914                     	;# 
  1571  0915                     	;# 
  1572  0916                     	;# 
  1573  0917                     	;# 
  1574  0D8E                     	;# 
  1575  0D8F                     	;# 
  1576  0D90                     	;# 
  1577  0D91                     	;# 
  1578  0D91                     	;# 
  1579  0D92                     	;# 
  1580  0D93                     	;# 
  1581  0D93                     	;# 
  1582  0D94                     	;# 
  1583  0D95                     	;# 
  1584  0D95                     	;# 
  1585  0D96                     	;# 
  1586  0D97                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D99                     	;# 
  1591  0D9A                     	;# 
  1592  0D9B                     	;# 
  1593  0D9C                     	;# 
  1594  0D9C                     	;# 
  1595  0D9D                     	;# 
  1596  0D9D                     	;# 
  1597  0D9E                     	;# 
  1598  0D9F                     	;# 
  1599  0DA0                     	;# 
  1600  0DA1                     	;# 
  1601  0DA1                     	;# 
  1602  0DA2                     	;# 
  1603  0DA3                     	;# 
  1604  0DA3                     	;# 
  1605  0DA4                     	;# 
  1606  0DA5                     	;# 
  1607  0DA5                     	;# 
  1608  0DA6                     	;# 
  1609  0DA7                     	;# 
  1610  0DA7                     	;# 
  1611  0DA8                     	;# 
  1612  0DA9                     	;# 
  1613  0DA9                     	;# 
  1614  0DAA                     	;# 
  1615  0DAB                     	;# 
  1616  0DAC                     	;# 
  1617  0DAC                     	;# 
  1618  0DAD                     	;# 
  1619  0DAD                     	;# 
  1620  0DAE                     	;# 
  1621  0DAF                     	;# 
  1622  0DB0                     	;# 
  1623  0DB1                     	;# 
  1624  0DB1                     	;# 
  1625  0DB2                     	;# 
  1626  0DB3                     	;# 
  1627  0DB3                     	;# 
  1628  0DB4                     	;# 
  1629  0DB5                     	;# 
  1630  0DB5                     	;# 
  1631  0DB6                     	;# 
  1632  0DB7                     	;# 
  1633  0DB7                     	;# 
  1634  0DB8                     	;# 
  1635  0DB9                     	;# 
  1636  0DB9                     	;# 
  1637  0DBA                     	;# 
  1638  0DBB                     	;# 
  1639  0DBC                     	;# 
  1640  0DBC                     	;# 
  1641  0DBD                     	;# 
  1642  0DBD                     	;# 
  1643  0DBE                     	;# 
  1644  0DBF                     	;# 
  1645  0DC0                     	;# 
  1646  0E0C                     	;# 
  1647  0E0D                     	;# 
  1648  0E0E                     	;# 
  1649  0E0F                     	;# 
  1650  0E10                     	;# 
  1651  0E11                     	;# 
  1652  0E12                     	;# 
  1653  0E13                     	;# 
  1654  0E14                     	;# 
  1655  0E15                     	;# 
  1656  0E15                     	;# 
  1657  0E15                     	;# 
  1658  0E16                     	;# 
  1659  0E16                     	;# 
  1660  0E16                     	;# 
  1661  0E17                     	;# 
  1662  0E17                     	;# 
  1663  0E17                     	;# 
  1664  0E18                     	;# 
  1665  0E18                     	;# 
  1666  0E18                     	;# 
  1667  0E19                     	;# 
  1668  0E1A                     	;# 
  1669  0E1B                     	;# 
  1670  0E1D                     	;# 
  1671  0E1E                     	;# 
  1672  0E1F                     	;# 
  1673  0E21                     	;# 
  1674  0E22                     	;# 
  1675  0E23                     	;# 
  1676  0E24                     	;# 
  1677  0E25                     	;# 
  1678  0E26                     	;# 
  1679  0E27                     	;# 
  1680  0E28                     	;# 
  1681  0E29                     	;# 
  1682  0E2D                     	;# 
  1683  0E2E                     	;# 
  1684  0E2F                     	;# 
  1685  0E30                     	;# 
  1686  0E31                     	;# 
  1687  0E32                     	;# 
  1688  0E35                     	;# 
  1689  0E36                     	;# 
  1690  0E37                     	;# 
  1691  0E38                     	;# 
  1692  0E39                     	;# 
  1693  0E3A                     	;# 
  1694  0E3B                     	;# 
  1695  0E3C                     	;# 
  1696  0E3D                     	;# 
  1697  0E3E                     	;# 
  1698  0E90                     	;# 
  1699  0E91                     	;# 
  1700  0E92                     	;# 
  1701  0E93                     	;# 
  1702  0E94                     	;# 
  1703  0E95                     	;# 
  1704  0E96                     	;# 
  1705  0E97                     	;# 
  1706  0E98                     	;# 
  1707  0E99                     	;# 
  1708  0E9A                     	;# 
  1709  0E9B                     	;# 
  1710  0E9C                     	;# 
  1711  0E9D                     	;# 
  1712  0E9E                     	;# 
  1713  0E9F                     	;# 
  1714  0EA0                     	;# 
  1715  0EA1                     	;# 
  1716  0EA2                     	;# 
  1717  0EA3                     	;# 
  1718  0EA4                     	;# 
  1719  0EA5                     	;# 
  1720  0EA6                     	;# 
  1721  0EA7                     	;# 
  1722  0F0F                     	;# 
  1723  0F10                     	;# 
  1724  0F11                     	;# 
  1725  0F12                     	;# 
  1726  0F13                     	;# 
  1727  0F14                     	;# 
  1728  0F15                     	;# 
  1729  0F16                     	;# 
  1730  0F17                     	;# 
  1731  0F18                     	;# 
  1732  0F19                     	;# 
  1733  0F1A                     	;# 
  1734  0F1B                     	;# 
  1735  0F1C                     	;# 
  1736  0F1D                     	;# 
  1737  0F1E                     	;# 
  1738  0F1F                     	;# 
  1739  0F20                     	;# 
  1740  0F21                     	;# 
  1741  0F22                     	;# 
  1742  0F23                     	;# 
  1743  0F24                     	;# 
  1744  0F25                     	;# 
  1745  0F26                     	;# 
  1746  0F27                     	;# 
  1747  0F28                     	;# 
  1748  0F29                     	;# 
  1749  0F2A                     	;# 
  1750  0F2B                     	;# 
  1751  0F2C                     	;# 
  1752  0F2D                     	;# 
  1753  0F2E                     	;# 
  1754  0F2F                     	;# 
  1755  0F30                     	;# 
  1756  0F31                     	;# 
  1757  0F32                     	;# 
  1758  0F33                     	;# 
  1759  0F34                     	;# 
  1760  0F35                     	;# 
  1761  0F36                     	;# 
  1762  0F37                     	;# 
  1763  0FE4                     	;# 
  1764  0FE5                     	;# 
  1765  0FE6                     	;# 
  1766  0FE7                     	;# 
  1767  0FE8                     	;# 
  1768  0FE9                     	;# 
  1769  0FEA                     	;# 
  1770  0FEB                     	;# 
  1771  0FED                     	;# 
  1772  0FEE                     	;# 
  1773  0FEF                     	;_GLBL_ReadBuffer
  1774                           
  1775                           	psect	idataBANK0
  1776  0054                     __pidataBANK0:	
  1777                           
  1778                           ;initializer for _GLBL_Resp40
  1779  0054  34FF               	retlw	255
  1780  0055  34FF               	retlw	255
  1781  0056  34FF               	retlw	255
  1782  0057  34FF               	retlw	255
  1783  0058  34FF               	retlw	255
  1784                           
  1785                           ;initializer for _us_min
  1786  0059  3417               	retlw	23
  1787  005A  3400               	retlw	0
  1788                           
  1789                           ;initializer for _us_hour
  1790  005B  3409               	retlw	9
  1791  005C  3400               	retlw	0
  1792                           
  1793                           ;initializer for _GLBL_Resp8
  1794  005D  34FF               	retlw	255
  1795                           
  1796                           	psect	idataBANK1
  1797  0155                     __pidataBANK1:	
  1798                           
  1799                           ;initializer for _start_addresses
  1800  0155  3400               	retlw	0
  1801  0156  3400               	retlw	0
  1802  0157  3417               	retlw	23
  1803  0158  3400               	retlw	0
  1804  0159  3436               	retlw	54
  1805  015A  3400               	retlw	0
  1806  015B  345A               	retlw	90
  1807  015C  3400               	retlw	0
  1808  015D  347C               	retlw	124
  1809  015E  3400               	retlw	0
  1810  015F  34B0               	retlw	176
  1811  0160  3403               	retlw	3
  1812  0161  34AE               	retlw	174
  1813  0162  3400               	retlw	0
  1814  0163  34C2               	retlw	194
  1815  0164  3400               	retlw	0
  1816  0165  34D8               	retlw	216
  1817  0166  3400               	retlw	0
  1818  0167  34FC               	retlw	252
  1819  0168  3400               	retlw	0
  1820  0169  340C               	retlw	12
  1821  016A  3401               	retlw	1
  1822  016B  3422               	retlw	34
  1823  016C  3401               	retlw	1
  1824  016D  344F               	retlw	79
  1825  016E  3401               	retlw	1
  1826  016F  3468               	retlw	104
  1827  0170  3401               	retlw	1
  1828  0171  348C               	retlw	140
  1829  0172  3401               	retlw	1
  1830  0173  34AC               	retlw	172
  1831  0174  3401               	retlw	1
  1832  0175  34C1               	retlw	193
  1833  0176  3401               	retlw	1
  1834  0177  34DC               	retlw	220
  1835  0178  3401               	retlw	1
  1836  0179  34F7               	retlw	247
  1837  017A  3401               	retlw	1
  1838  017B  3415               	retlw	21
  1839  017C  3402               	retlw	2
  1840  017D  3434               	retlw	52
  1841  017E  3402               	retlw	2
  1842  017F  3450               	retlw	80
  1843  0180  3402               	retlw	2
  1844  0181  346F               	retlw	111
  1845  0182  3402               	retlw	2
  1846  0183  3489               	retlw	137
  1847  0184  3402               	retlw	2
  1848  0185  349C               	retlw	156
  1849  0186  3402               	retlw	2
  1850  0187  34C1               	retlw	193
  1851  0188  3402               	retlw	2
  1852  0189  34D6               	retlw	214
  1853  018A  3402               	retlw	2
  1854  018B  34FD               	retlw	253
  1855  018C  3402               	retlw	2
  1856  018D  3419               	retlw	25
  1857  018E  3403               	retlw	3
  1858  018F  343A               	retlw	58
  1859  0190  3403               	retlw	3
  1860  0191  344E               	retlw	78
  1861  0192  3403               	retlw	3
  1862  0193  3460               	retlw	96
  1863  0194  3403               	retlw	3
  1864  0195  3484               	retlw	132
  1865  0196  3403               	retlw	3
  1866  0197  349C               	retlw	156
  1867  0198  3403               	retlw	3
  1868                           
  1869                           	psect	idataBANK2
  1870  0111                     __pidataBANK2:	
  1871                           
  1872                           ;initializer for _end_addresses
  1873  0111  3417               	retlw	23
  1874  0112  3400               	retlw	0
  1875  0113  3436               	retlw	54
  1876  0114  3400               	retlw	0
  1877  0115  345A               	retlw	90
  1878  0116  3400               	retlw	0
  1879  0117  347C               	retlw	124
  1880  0118  3400               	retlw	0
  1881  0119  34A0               	retlw	160
  1882  011A  3400               	retlw	0
  1883  011B  34CB               	retlw	203
  1884  011C  3403               	retlw	3
  1885  011D  34C2               	retlw	194
  1886  011E  3400               	retlw	0
  1887  011F  34D8               	retlw	216
  1888  0120  3400               	retlw	0
  1889  0121  34FC               	retlw	252
  1890  0122  3400               	retlw	0
  1891  0123  340C               	retlw	12
  1892  0124  3401               	retlw	1
  1893  0125  3422               	retlw	34
  1894  0126  3401               	retlw	1
  1895  0127  344F               	retlw	79
  1896  0128  3401               	retlw	1
  1897  0129  3468               	retlw	104
  1898  012A  3401               	retlw	1
  1899  012B  348C               	retlw	140
  1900  012C  3401               	retlw	1
  1901  012D  34AC               	retlw	172
  1902  012E  3401               	retlw	1
  1903  012F  34C1               	retlw	193
  1904  0130  3401               	retlw	1
  1905  0131  34DC               	retlw	220
  1906  0132  3401               	retlw	1
  1907  0133  34F7               	retlw	247
  1908  0134  3401               	retlw	1
  1909  0135  3415               	retlw	21
  1910  0136  3402               	retlw	2
  1911  0137  3434               	retlw	52
  1912  0138  3402               	retlw	2
  1913  0139  3450               	retlw	80
  1914  013A  3402               	retlw	2
  1915  013B  346F               	retlw	111
  1916  013C  3402               	retlw	2
  1917  013D  3489               	retlw	137
  1918  013E  3402               	retlw	2
  1919  013F  349C               	retlw	156
  1920  0140  3402               	retlw	2
  1921  0141  34C1               	retlw	193
  1922  0142  3402               	retlw	2
  1923  0143  34D6               	retlw	214
  1924  0144  3402               	retlw	2
  1925  0145  34FD               	retlw	253
  1926  0146  3402               	retlw	2
  1927  0147  3419               	retlw	25
  1928  0148  3403               	retlw	3
  1929  0149  343A               	retlw	58
  1930  014A  3403               	retlw	3
  1931  014B  344E               	retlw	78
  1932  014C  3403               	retlw	3
  1933  014D  3460               	retlw	96
  1934  014E  3403               	retlw	3
  1935  014F  3484               	retlw	132
  1936  0150  3403               	retlw	3
  1937  0151  349C               	retlw	156
  1938  0152  3403               	retlw	3
  1939  0153  34B0               	retlw	176
  1940  0154  3403               	retlw	3
  1941                           
  1942                           	psect	stringtext1
  1943  0800                     __pstringtext1:	
  1944  0800                     _CRCTable:	
  1945  0800  3400               	retlw	0
  1946  0801  3409               	retlw	9
  1947  0802  3412               	retlw	18
  1948  0803  341B               	retlw	27
  1949  0804  3424               	retlw	36
  1950  0805  342D               	retlw	45
  1951  0806  3436               	retlw	54
  1952  0807  343F               	retlw	63
  1953  0808  3448               	retlw	72
  1954  0809  3441               	retlw	65
  1955  080A  345A               	retlw	90
  1956  080B  3453               	retlw	83
  1957  080C  346C               	retlw	108
  1958  080D  3465               	retlw	101
  1959  080E  347E               	retlw	126
  1960  080F  3477               	retlw	119
  1961  0810  3419               	retlw	25
  1962  0811  3410               	retlw	16
  1963  0812  340B               	retlw	11
  1964  0813  3402               	retlw	2
  1965  0814  343D               	retlw	61
  1966  0815  3434               	retlw	52
  1967  0816  342F               	retlw	47
  1968  0817  3426               	retlw	38
  1969  0818  3451               	retlw	81
  1970  0819  3458               	retlw	88
  1971  081A  3443               	retlw	67
  1972  081B  344A               	retlw	74
  1973  081C  3475               	retlw	117
  1974  081D  347C               	retlw	124
  1975  081E  3467               	retlw	103
  1976  081F  346E               	retlw	110
  1977  0820  3432               	retlw	50
  1978  0821  343B               	retlw	59
  1979  0822  3420               	retlw	32
  1980  0823  3429               	retlw	41
  1981  0824  3416               	retlw	22
  1982  0825  341F               	retlw	31
  1983  0826  3404               	retlw	4
  1984  0827  340D               	retlw	13
  1985  0828  347A               	retlw	122
  1986  0829  3473               	retlw	115
  1987  082A  3468               	retlw	104
  1988  082B  3461               	retlw	97
  1989  082C  345E               	retlw	94
  1990  082D  3457               	retlw	87
  1991  082E  344C               	retlw	76
  1992  082F  3445               	retlw	69
  1993  0830  342B               	retlw	43
  1994  0831  3422               	retlw	34
  1995  0832  3439               	retlw	57
  1996  0833  3430               	retlw	48
  1997  0834  340F               	retlw	15
  1998  0835  3406               	retlw	6
  1999  0836  341D               	retlw	29
  2000  0837  3414               	retlw	20
  2001  0838  3463               	retlw	99
  2002  0839  346A               	retlw	106
  2003  083A  3471               	retlw	113
  2004  083B  3478               	retlw	120
  2005  083C  3447               	retlw	71
  2006  083D  344E               	retlw	78
  2007  083E  3455               	retlw	85
  2008  083F  345C               	retlw	92
  2009  0840  3464               	retlw	100
  2010  0841  346D               	retlw	109
  2011  0842  3476               	retlw	118
  2012  0843  347F               	retlw	127
  2013  0844  3440               	retlw	64
  2014  0845  3449               	retlw	73
  2015  0846  3452               	retlw	82
  2016  0847  345B               	retlw	91
  2017  0848  342C               	retlw	44
  2018  0849  3425               	retlw	37
  2019  084A  343E               	retlw	62
  2020  084B  3437               	retlw	55
  2021  084C  3408               	retlw	8
  2022  084D  3401               	retlw	1
  2023  084E  341A               	retlw	26
  2024  084F  3413               	retlw	19
  2025  0850  347D               	retlw	125
  2026  0851  3474               	retlw	116
  2027  0852  346F               	retlw	111
  2028  0853  3466               	retlw	102
  2029  0854  3459               	retlw	89
  2030  0855  3450               	retlw	80
  2031  0856  344B               	retlw	75
  2032  0857  3442               	retlw	66
  2033  0858  3435               	retlw	53
  2034  0859  343C               	retlw	60
  2035  085A  3427               	retlw	39
  2036  085B  342E               	retlw	46
  2037  085C  3411               	retlw	17
  2038  085D  3418               	retlw	24
  2039  085E  3403               	retlw	3
  2040  085F  340A               	retlw	10
  2041  0860  3456               	retlw	86
  2042  0861  345F               	retlw	95
  2043  0862  3444               	retlw	68
  2044  0863  344D               	retlw	77
  2045  0864  3472               	retlw	114
  2046  0865  347B               	retlw	123
  2047  0866  3460               	retlw	96
  2048  0867  3469               	retlw	105
  2049  0868  341E               	retlw	30
  2050  0869  3417               	retlw	23
  2051  086A  340C               	retlw	12
  2052  086B  3405               	retlw	5
  2053  086C  343A               	retlw	58
  2054  086D  3433               	retlw	51
  2055  086E  3428               	retlw	40
  2056  086F  3421               	retlw	33
  2057  0870  344F               	retlw	79
  2058  0871  3446               	retlw	70
  2059  0872  345D               	retlw	93
  2060  0873  3454               	retlw	84
  2061  0874  346B               	retlw	107
  2062  0875  3462               	retlw	98
  2063  0876  3479               	retlw	121
  2064  0877  3470               	retlw	112
  2065  0878  3407               	retlw	7
  2066  0879  340E               	retlw	14
  2067  087A  3415               	retlw	21
  2068  087B  341C               	retlw	28
  2069  087C  3423               	retlw	35
  2070  087D  342A               	retlw	42
  2071  087E  3431               	retlw	49
  2072  087F  3438               	retlw	56
  2073  0880  3441               	retlw	65
  2074  0881  3448               	retlw	72
  2075  0882  3453               	retlw	83
  2076  0883  345A               	retlw	90
  2077  0884  3465               	retlw	101
  2078  0885  346C               	retlw	108
  2079  0886  3477               	retlw	119
  2080  0887  347E               	retlw	126
  2081  0888  3409               	retlw	9
  2082  0889  3400               	retlw	0
  2083  088A  341B               	retlw	27
  2084  088B  3412               	retlw	18
  2085  088C  342D               	retlw	45
  2086  088D  3424               	retlw	36
  2087  088E  343F               	retlw	63
  2088  088F  3436               	retlw	54
  2089  0890  3458               	retlw	88
  2090  0891  3451               	retlw	81
  2091  0892  344A               	retlw	74
  2092  0893  3443               	retlw	67
  2093  0894  347C               	retlw	124
  2094  0895  3475               	retlw	117
  2095  0896  346E               	retlw	110
  2096  0897  3467               	retlw	103
  2097  0898  3410               	retlw	16
  2098  0899  3419               	retlw	25
  2099  089A  3402               	retlw	2
  2100  089B  340B               	retlw	11
  2101  089C  3434               	retlw	52
  2102  089D  343D               	retlw	61
  2103  089E  3426               	retlw	38
  2104  089F  342F               	retlw	47
  2105  08A0  3473               	retlw	115
  2106  08A1  347A               	retlw	122
  2107  08A2  3461               	retlw	97
  2108  08A3  3468               	retlw	104
  2109  08A4  3457               	retlw	87
  2110  08A5  345E               	retlw	94
  2111  08A6  3445               	retlw	69
  2112  08A7  344C               	retlw	76
  2113  08A8  343B               	retlw	59
  2114  08A9  3432               	retlw	50
  2115  08AA  3429               	retlw	41
  2116  08AB  3420               	retlw	32
  2117  08AC  341F               	retlw	31
  2118  08AD  3416               	retlw	22
  2119  08AE  340D               	retlw	13
  2120  08AF  3404               	retlw	4
  2121  08B0  346A               	retlw	106
  2122  08B1  3463               	retlw	99
  2123  08B2  3478               	retlw	120
  2124  08B3  3471               	retlw	113
  2125  08B4  344E               	retlw	78
  2126  08B5  3447               	retlw	71
  2127  08B6  345C               	retlw	92
  2128  08B7  3455               	retlw	85
  2129  08B8  3422               	retlw	34
  2130  08B9  342B               	retlw	43
  2131  08BA  3430               	retlw	48
  2132  08BB  3439               	retlw	57
  2133  08BC  3406               	retlw	6
  2134  08BD  340F               	retlw	15
  2135  08BE  3414               	retlw	20
  2136  08BF  341D               	retlw	29
  2137  08C0  3425               	retlw	37
  2138  08C1  342C               	retlw	44
  2139  08C2  3437               	retlw	55
  2140  08C3  343E               	retlw	62
  2141  08C4  3401               	retlw	1
  2142  08C5  3408               	retlw	8
  2143  08C6  3413               	retlw	19
  2144  08C7  341A               	retlw	26
  2145  08C8  346D               	retlw	109
  2146  08C9  3464               	retlw	100
  2147  08CA  347F               	retlw	127
  2148  08CB  3476               	retlw	118
  2149  08CC  3449               	retlw	73
  2150  08CD  3440               	retlw	64
  2151  08CE  345B               	retlw	91
  2152  08CF  3452               	retlw	82
  2153  08D0  343C               	retlw	60
  2154  08D1  3435               	retlw	53
  2155  08D2  342E               	retlw	46
  2156  08D3  3427               	retlw	39
  2157  08D4  3418               	retlw	24
  2158  08D5  3411               	retlw	17
  2159  08D6  340A               	retlw	10
  2160  08D7  3403               	retlw	3
  2161  08D8  3474               	retlw	116
  2162  08D9  347D               	retlw	125
  2163  08DA  3466               	retlw	102
  2164  08DB  346F               	retlw	111
  2165  08DC  3450               	retlw	80
  2166  08DD  3459               	retlw	89
  2167  08DE  3442               	retlw	66
  2168  08DF  344B               	retlw	75
  2169  08E0  3417               	retlw	23
  2170  08E1  341E               	retlw	30
  2171  08E2  3405               	retlw	5
  2172  08E3  340C               	retlw	12
  2173  08E4  3433               	retlw	51
  2174  08E5  343A               	retlw	58
  2175  08E6  3421               	retlw	33
  2176  08E7  3428               	retlw	40
  2177  08E8  345F               	retlw	95
  2178  08E9  3456               	retlw	86
  2179  08EA  344D               	retlw	77
  2180  08EB  3444               	retlw	68
  2181  08EC  347B               	retlw	123
  2182  08ED  3472               	retlw	114
  2183  08EE  3469               	retlw	105
  2184  08EF  3460               	retlw	96
  2185  08F0  340E               	retlw	14
  2186  08F1  3407               	retlw	7
  2187  08F2  341C               	retlw	28
  2188  08F3  3415               	retlw	21
  2189  08F4  342A               	retlw	42
  2190  08F5  3423               	retlw	35
  2191  08F6  3438               	retlw	56
  2192  08F7  3431               	retlw	49
  2193  08F8  3446               	retlw	70
  2194  08F9  344F               	retlw	79
  2195  08FA  3454               	retlw	84
  2196  08FB  345D               	retlw	93
  2197  08FC  3462               	retlw	98
  2198  08FD  346B               	retlw	107
  2199  08FE  3470               	retlw	112
  2200  08FF  3479               	retlw	121
  2201  0900                     __end_of_CRCTable:	
  2202  0011                     _PIR1bits	set	17
  2203  000D                     _PORTBbits	set	13
  2204  000E                     _PORTCbits	set	14
  2205  008D                     _TRISBbits	set	141
  2206  009C                     _OSCSTATbits	set	156
  2207  009B                     _OSCCON	set	155
  2208  0477                     _TRISC7	set	1143
  2209  0474                     _TRISC4	set	1140
  2210  0473                     _TRISC3	set	1139
  2211  0472                     _TRISC2	set	1138
  2212  018D                     _ANSELBbits	set	397
  2213  0C73                     _ANSC3	set	3187
  2214  0214                     _SSP1STATbits	set	532
  2215  0211                     _SSP1BUF	set	529
  2216  0212                     _SSP1ADD	set	530
  2217  0215                     _SSP1CON1	set	533
  2218  0214                     _SSP1STAT	set	532
  2219  0215                     _SSP1CON1bits	set	533
  2220  0495                     _T2CON	set	1173
  2221  0494                     _T2PR	set	1172
  2222  0497                     _T2CLKCON	set	1175
  2223  058F                     _DAC1REF	set	1423
  2224  058E                     _DAC1CON0	set	1422
  2225  2C68                     _DAC1LD	set	11368
  2226  0E3B                     _SSPDATPPS	set	3643
  2227  0E3A                     _SSPCLKPPS	set	3642
  2228  0EA4                     _RC4PPS	set	3748
  2229  0EA2                     _RC2PPS	set	3746
  2230                           
  2231                           ; #config settings
  2232  0000                     
  2233                           	psect	cinit
  2234  07B2                     start_initialization:	
  2235  07B2                     __initialization:		;BIGRAM
  2236                           
  2237                           ; Initialize objects allocated to BANK0
  2238  07B2  3054               	movlw	low __pidataBANK0
  2239  07B3  0084               	movwf	4
  2240  07B4  3080               	movlw	(high __pidataBANK0)| (0+128)
  2241  07B5  0085               	movwf	5
  2242  07B6  303F               	movlw	low __pdataBANK0
  2243  07B7  0086               	movwf	6
  2244  07B8  3000               	movlw	high __pdataBANK0
  2245  07B9  0087               	movwf	7
  2246  07BA  3000               	movlw	0
  2247  07BB  00FF               	movwf	btemp+1
  2248  07BC  300A               	movlw	10
  2249  07BD  3180  2075  3187   	fcall	init_ram
  2250                           
  2251                           ; Initialize objects allocated to BANK1
  2252  07C0  3055               	movlw	low __pidataBANK1
  2253  07C1  0084               	movwf	4
  2254  07C2  3081               	movlw	(high __pidataBANK1)| (0+128)
  2255  07C3  0085               	movwf	5
  2256  07C4  30A0               	movlw	low __pdataBANK1
  2257  07C5  0086               	movwf	6
  2258  07C6  3000               	movlw	high __pdataBANK1
  2259  07C7  0087               	movwf	7
  2260  07C8  3000               	movlw	0
  2261  07C9  00FF               	movwf	btemp+1
  2262  07CA  3044               	movlw	68
  2263  07CB  3180  2075  3187   	fcall	init_ram
  2264                           
  2265                           ; Initialize objects allocated to BANK2
  2266  07CE  3011               	movlw	low __pidataBANK2
  2267  07CF  0084               	movwf	4
  2268  07D0  3081               	movlw	(high __pidataBANK2)| (0+128)
  2269  07D1  0085               	movwf	5
  2270  07D2  3020               	movlw	low __pdataBANK2
  2271  07D3  0086               	movwf	6
  2272  07D4  3001               	movlw	high __pdataBANK2
  2273  07D5  0087               	movwf	7
  2274  07D6  3000               	movlw	0
  2275  07D7  00FF               	movwf	btemp+1
  2276  07D8  3044               	movlw	68
  2277  07D9  3180  2075  3187   	fcall	init_ram
  2278                           
  2279                           ; Clear objects allocated to BIGRAM_1
  2280  07DC  30F0               	movlw	low (0+9712)
  2281  07DD  0084               	movwf	4
  2282  07DE  3025               	movlw	high (0+9712)
  2283  07DF  0085               	movwf	5
  2284  07E0  3000               	movlw	0
  2285  07E1  00FE               	movwf	btemp
  2286  07E2  3002               	movlw	2
  2287  07E3  00FF               	movwf	btemp+1
  2288  07E4  3180  2069  3187   	fcall	clear_ram0
  2289                           
  2290                           ; Clear objects allocated to BIGRAM
  2291  07E7  30F0               	movlw	low (0+8688)
  2292  07E8  0084               	movwf	4
  2293  07E9  3021               	movlw	high (0+8688)
  2294  07EA  0085               	movwf	5
  2295  07EB  3000               	movlw	0
  2296  07EC  00FE               	movwf	btemp
  2297  07ED  3002               	movlw	2
  2298  07EE  00FF               	movwf	btemp+1
  2299  07EF  3180  2069  3187   	fcall	clear_ram0
  2300                           
  2301                           ; Clear objects allocated to COMMON
  2302  07F2  01FD               	clrf	__pbssCOMMON& (0+127)
  2303                           
  2304                           ; Clear objects allocated to BANK0
  2305  07F3  3020               	movlw	low __pbssBANK0
  2306  07F4  0084               	movwf	4
  2307  07F5  3000               	movlw	high __pbssBANK0
  2308  07F6  0085               	movwf	5
  2309  07F7  3013               	movlw	19
  2310  07F8  00FE               	movwf	btemp
  2311  07F9  3000               	movlw	0
  2312  07FA  00FF               	movwf	btemp+1
  2313  07FB  3180  2069         	fcall	clear_ram0
  2314  07FD                     end_of_initialization:	
  2315                           ;End of C runtime variable initialization code
  2316                           
  2317  07FD                     __end_of__initialization:	
  2318  07FD  0020               	movlb	0
  2319  07FE  3182  2A40         	ljmp	_main	;jump to C main() function
  2320                           
  2321                           	psect	bssCOMMON
  2322  007D                     __pbssCOMMON:	
  2323  007D                     _charPointer:	
  2324  007D                     	ds	1
  2325                           
  2326                           	psect	bssBANK0
  2327  0020                     __pbssBANK0:	
  2328  0020                     _timeTrack:	
  2329  0020                     	ds	4
  2330  0024                     _us_EndAddress:	
  2331  0024                     	ds	2
  2332  0026                     _sh_counter:	
  2333  0026                     	ds	2
  2334  0028                     _skipap:	
  2335  0028                     	ds	1
  2336  0029                     _skipm:	
  2337  0029                     	ds	1
  2338  002A                     _skipm10:	
  2339  002A                     	ds	1
  2340  002B                     _skiph:	
  2341  002B                     	ds	1
  2342  002C                     _pressed:	
  2343  002C                     	ds	1
  2344  002D                     _timeSaid:	
  2345  002D                     	ds	1
  2346  002E                     _hasAddress:	
  2347  002E                     	ds	1
  2348  002F                     _ch_sendbyte:	
  2349  002F                     	ds	1
  2350  0030                     _uc_play:	
  2351  0030                     	ds	1
  2352  0031                     _us_Address:	
  2353  0031                     	ds	2
  2354                           
  2355                           	psect	dataBANK0
  2356  003F                     __pdataBANK0:	
  2357  003F                     _GLBL_Resp40:	
  2358  003F                     	ds	5
  2359  0044                     _us_min:	
  2360  0044                     	ds	2
  2361  0046                     _us_hour:	
  2362  0046                     	ds	2
  2363  0048                     _GLBL_Resp8:	
  2364  0048                     	ds	1
  2365                           
  2366                           	psect	dataBANK1
  2367  00A0                     __pdataBANK1:	
  2368  00A0                     _start_addresses:	
  2369  00A0                     	ds	68
  2370                           
  2371                           	psect	dataBANK2
  2372  0120                     __pdataBANK2:	
  2373  0120                     _end_addresses:	
  2374  0120                     	ds	68
  2375                           
  2376                           	psect	inittext
  2377  0075                     init_ram:	
  2378  0075  00FE               	movwf	126
  2379  0076                     initloop:	
  2380  0076  0012               	moviw fsr0++
  2381  0077  001E               	movwi fsr1++
  2382  0078  3001               	movlw	1
  2383  0079  02FE               	subwf	126,f
  2384  007A  3000               	movlw	0
  2385  007B  3BFF               	subwfb	127,f
  2386  007C  087F               	movf	127,w
  2387  007D  047E               	iorwf	126,w
  2388  007E  1903               	btfsc	3,2
  2389  007F  3400               	retlw	0
  2390  0080  2876               	goto	initloop
  2391                           
  2392                           	psect	clrtext
  2393  0069                     clear_ram0:	
  2394                           ;	Called with FSR0 containing the base address, and
  2395                           ;	btemp/btemp+1 has the size to clear
  2396                           
  2397  0069  0064               	clrwdt	;clear the watchdog before getting into this loop
  2398  006A                     clrloop0:	
  2399  006A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2400  006B  3101               	addfsr 0,1
  2401  006C  3001               	movlw	1
  2402  006D  02FE               	subwf	126,f
  2403  006E  3000               	movlw	0
  2404  006F  3BFF               	subwfb	127,f
  2405  0070  087F               	movf	127,w
  2406  0071  047E               	iorwf	126,w
  2407  0072  1903               	btfsc	3,2
  2408  0073  3400               	retlw	0	;all done for this memory range, return
  2409  0074  286A               	goto	clrloop0	;have we reached the end yet?
  2410                           
  2411                           	psect	cstackCOMMON
  2412  0070                     __pcstackCOMMON:	
  2413  0070                     ?_SPI_Write:	
  2414  0070                     ??_SPI_Write:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_SD_Read8bitResponse:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ??_SD_Read8bitResponse:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_SD_Check8bitResponse:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ??_SD_Check8bitResponse:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_SD_Read40bitResponse:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ??_SD_Read40bitResponse:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_SD_Check40bitResponse:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_SPI_Read:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ??_SPI_Read:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_active:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_Lab3_DAQ:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ??_Lab3_DAQ:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_SD_Init:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_SPI_Init:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ??_SPI_Init:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_main:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?___awdiv:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     SD_Check8bitResponse@Byte:	
  2469                           ; 2 bytes @ 0x0
  2470                           
  2471  0070                     SD_Check40bitResponse@Byte3:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     SPI_Write@Data_8bit:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ___awdiv@divisor:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480                           
  2481                           ; 2 bytes @ 0x0
  2482  0070                     	ds	1
  2483  0071                     ?_SD_SendCommand:	
  2484  0071                     SD_SendCommand@ARG3:	
  2485                           ; 1 bytes @ 0x1
  2486                           
  2487  0071                     SD_Read8bitResponse@readMessage:	
  2488                           ; 1 bytes @ 0x1
  2489                           
  2490  0071                     SD_Check8bitResponse@match:	
  2491                           ; 1 bytes @ 0x1
  2492                           
  2493  0071                     SD_Read40bitResponse@readMessage:	
  2494                           ; 1 bytes @ 0x1
  2495                           
  2496  0071                     SD_Check40bitResponse@Byte2:	
  2497                           ; 1 bytes @ 0x1
  2498                           
  2499                           
  2500                           ; 1 bytes @ 0x1
  2501  0071                     	ds	1
  2502  0072                     SD_SendCommand@ARG2:	
  2503  0072                     SD_Check40bitResponse@Byte1:	
  2504                           ; 1 bytes @ 0x2
  2505                           
  2506  0072                     Lab3_DAQ@writevalue:	
  2507                           ; 1 bytes @ 0x2
  2508                           
  2509  0072                     ___awdiv@dividend:	
  2510                           ; 1 bytes @ 0x2
  2511                           
  2512                           
  2513                           ; 2 bytes @ 0x2
  2514  0072                     	ds	1
  2515  0073                     SD_SendCommand@ARG1:	
  2516  0073                     SD_Check40bitResponse@Byte0:	
  2517                           ; 1 bytes @ 0x3
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0x3
  2521  0073                     	ds	1
  2522  0074                     ??_SD_Check40bitResponse:	
  2523  0074                     ??___awdiv:	
  2524                           ; 1 bytes @ 0x4
  2525                           
  2526  0074                     SD_SendCommand@ARG0:	
  2527                           ; 1 bytes @ 0x4
  2528                           
  2529  0074                     SD_Check40bitResponse@Byte4:	
  2530                           ; 1 bytes @ 0x4
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x4
  2534  0074                     	ds	1
  2535  0075                     ??_SD_SendCommand:	
  2536  0075                     SD_Check40bitResponse@match:	
  2537                           ; 1 bytes @ 0x5
  2538                           
  2539  0075                     ___awdiv@counter:	
  2540                           ; 1 bytes @ 0x5
  2541                           
  2542                           
  2543                           ; 1 bytes @ 0x5
  2544  0075                     	ds	1
  2545  0076                     SD_SendCommand@CMD_6bit:	
  2546  0076                     ___awdiv@sign:	
  2547                           ; 1 bytes @ 0x6
  2548                           
  2549                           
  2550                           ; 1 bytes @ 0x6
  2551  0076                     	ds	1
  2552  0077                     SD_SendCommand@ByteToSend:	
  2553  0077                     ___awdiv@quotient:	
  2554                           ; 1 bytes @ 0x7
  2555                           
  2556                           
  2557                           ; 2 bytes @ 0x7
  2558  0077                     	ds	1
  2559  0078                     SD_SendCommand@Checksum:	
  2560                           
  2561                           ; 1 bytes @ 0x8
  2562  0078                     	ds	1
  2563  0079                     ??_active:	
  2564  0079                     ??_SD_Init:	
  2565                           ; 1 bytes @ 0x9
  2566                           
  2567                           
  2568                           ; 1 bytes @ 0x9
  2569  0079                     	ds	1
  2570  007A                     active@readMessage:	
  2571                           
  2572                           ; 1 bytes @ 0xA
  2573  007A                     	ds	1
  2574  007B                     ??_playAudio:	
  2575                           
  2576                           ; 1 bytes @ 0xB
  2577  007B                     	ds	1
  2578  007C                     ??_readTime:	
  2579  007C                     ??_playHour:	
  2580                           ; 1 bytes @ 0xC
  2581                           
  2582  007C                     ??_playMinute10:	
  2583                           ; 1 bytes @ 0xC
  2584                           
  2585  007C                     ??_playMinute:	
  2586                           ; 1 bytes @ 0xC
  2587                           
  2588                           
  2589                           ; 1 bytes @ 0xC
  2590  007C                     	ds	1
  2591  007D                     ??_main:	
  2592                           
  2593                           	psect	cstackBANK0
  2594  0033                     __pcstackBANK0:	
  2595                           ; 1 bytes @ 0xD
  2596                           
  2597  0033                     ?_playAudio:	
  2598  0033                     playAudio@startAddress:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601                           
  2602                           ; 2 bytes @ 0x0
  2603  0033                     	ds	2
  2604  0035                     playAudio@endAddress:	
  2605                           
  2606                           ; 2 bytes @ 0x2
  2607  0035                     	ds	2
  2608  0037                     ?_playHour:	
  2609  0037                     ?_playMinute10:	
  2610                           ; 1 bytes @ 0x4
  2611                           
  2612  0037                     ?_playMinute:	
  2613                           ; 1 bytes @ 0x4
  2614                           
  2615  0037                     playHour@hour:	
  2616                           ; 1 bytes @ 0x4
  2617                           
  2618  0037                     playMinute10@minute:	
  2619                           ; 2 bytes @ 0x4
  2620                           
  2621  0037                     playMinute@minute:	
  2622                           ; 2 bytes @ 0x4
  2623                           
  2624                           
  2625                           ; 2 bytes @ 0x4
  2626  0037                     	ds	2
  2627  0039                     ?_readTime:	
  2628  0039                     readTime@hour:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631                           
  2632                           ; 2 bytes @ 0x6
  2633  0039                     	ds	2
  2634  003B                     readTime@minute:	
  2635                           
  2636                           ; 2 bytes @ 0x8
  2637  003B                     	ds	2
  2638  003D                     readTime@temphour:	
  2639                           
  2640                           ; 2 bytes @ 0xA
  2641  003D                     	ds	2
  2642                           
  2643                           	psect	maintext
  2644  0240                     __pmaintext:	
  2645 ;;
  2646 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2647 ;;
  2648 ;; *************** function _main *****************
  2649 ;; Defined at:
  2650 ;;		line 45 in file "Lab3_Main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : B1F/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels required when called:    6
  2670 ;; This function calls:
  2671 ;;		_SD_Init
  2672 ;;		_SPI_Init
  2673 ;;		_readTime
  2674 ;; This function is called by:
  2675 ;;		Startup code after reset
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _main
  2681  0240                     _main:	
  2682                           
  2683                           ;Lab3_Main.c: 48:     OSCCON = 0xF4;
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2687  0240  30F4               	movlw	244
  2688  0241  0021               	movlb	1	; select bank1
  2689  0242  009B               	movwf	27	;volatile
  2690  0243                     l220:	
  2691                           ;Lab3_Main.c: 49:     while(OSCSTATbits.HFIOFR == 0);
  2692                           
  2693  0243  1E1C               	btfss	28,4	;volatile
  2694  0244  2A43               	goto	l220
  2695                           
  2696                           ;Lab3_Main.c: 51:     TRISBbits.TRISB4 = 1;
  2697  0245  160D               	bsf	13,4	;volatile
  2698                           
  2699                           ;Lab3_Main.c: 52:     ANSELBbits.ANSB4 = 0;
  2700  0246  0023               	movlb	3	; select bank3
  2701  0247  120D               	bcf	13,4	;volatile
  2702                           
  2703                           ;Lab3_Main.c: 55:     SPI_Init();
  2704  0248  3180  20C7  3182   	fcall	_SPI_Init
  2705                           
  2706                           ;Lab3_Main.c: 56:     SD_Init();
  2707  024B  3183  230C  3182   	fcall	_SD_Init
  2708                           
  2709                           ;Lab3_Main.c: 58:     DAC1CON0 = 0xA0;
  2710  024E  30A0               	movlw	160
  2711  024F  002B               	movlb	11	; select bank11
  2712  0250  008E               	movwf	14	;volatile
  2713                           
  2714                           ;Lab3_Main.c: 59:     T2CLKCON = 0x05;
  2715  0251  3005               	movlw	5
  2716  0252  0029               	movlb	9	; select bank9
  2717  0253  0097               	movwf	23	;volatile
  2718                           
  2719                           ;Lab3_Main.c: 60:     T2PR = 0x1f;
  2720  0254  301F               	movlw	31
  2721  0255  0094               	movwf	20	;volatile
  2722                           
  2723                           ;Lab3_Main.c: 61:     T2CON = 0x80;
  2724  0256  3080               	movlw	128
  2725  0257  0095               	movwf	21	;volatile
  2726  0258                     l1931:	
  2727                           
  2728                           ;Lab3_Main.c: 68:     {;Lab3_Main.c: 71:         timeTrack++;
  2729  0258  3001               	movlw	1
  2730  0259  0020               	movlb	0	; select bank0
  2731  025A  07A0               	addwf	_timeTrack,f
  2732  025B  3000               	movlw	0
  2733  025C  3DA1               	addwfc	_timeTrack+1,f
  2734  025D  3000               	movlw	0
  2735  025E  3DA2               	addwfc	_timeTrack+2,f
  2736  025F  3000               	movlw	0
  2737  0260  3DA3               	addwfc	_timeTrack+3,f
  2738                           
  2739                           ;Lab3_Main.c: 73:         if(timeTrack == 16129)
  2740  0261  0320               	decf	_timeTrack,w
  2741  0262  303F               	movlw	63
  2742  0263  1903               	skipnz
  2743  0264  0621               	xorwf	_timeTrack+1,w
  2744  0265  0422               	iorwf	_timeTrack+2,w
  2745  0266  0423               	iorwf	_timeTrack+3,w
  2746  0267  1D03               	btfss	3,2
  2747  0268  2A87               	goto	l1947
  2748                           
  2749                           ;Lab3_Main.c: 74:         {;Lab3_Main.c: 75:                     timeTrack = 0;
  2750  0269  3000               	movlw	0
  2751  026A  00A3               	movwf	_timeTrack+3
  2752  026B  3000               	movlw	0
  2753  026C  00A2               	movwf	_timeTrack+2
  2754  026D  3000               	movlw	0
  2755  026E  00A1               	movwf	_timeTrack+1
  2756  026F  3000               	movlw	0
  2757  0270  00A0               	movwf	_timeTrack
  2758                           
  2759                           ;Lab3_Main.c: 76:                     us_min++;
  2760  0271  3001               	movlw	1
  2761  0272  07C4               	addwf	_us_min,f
  2762  0273  3000               	movlw	0
  2763  0274  3DC5               	addwfc	_us_min+1,f
  2764                           
  2765                           ;Lab3_Main.c: 77:                     if (us_min == 60)
  2766  0275  303C               	movlw	60
  2767  0276  0644               	xorwf	_us_min,w
  2768  0277  0445               	iorwf	_us_min+1,w
  2769  0278  1D03               	btfss	3,2
  2770  0279  2A87               	goto	l1947
  2771                           
  2772                           ;Lab3_Main.c: 78:                     {;Lab3_Main.c: 79:                         us_min 
      +                          = 0;
  2773  027A  01C4               	clrf	_us_min
  2774  027B  01C5               	clrf	_us_min+1
  2775                           
  2776                           ;Lab3_Main.c: 80:                         us_hour++;
  2777  027C  3001               	movlw	1
  2778  027D  07C6               	addwf	_us_hour,f
  2779  027E  3000               	movlw	0
  2780  027F  3DC7               	addwfc	_us_hour+1,f
  2781                           
  2782                           ;Lab3_Main.c: 81:                         if (us_hour == 24)
  2783  0280  3018               	movlw	24
  2784  0281  0646               	xorwf	_us_hour,w
  2785  0282  0447               	iorwf	_us_hour+1,w
  2786  0283  1D03               	btfss	3,2
  2787  0284  2A87               	goto	l1947
  2788                           
  2789                           ;Lab3_Main.c: 82:                         {;Lab3_Main.c: 83:                            
      +                           us_hour = 0;
  2790  0285  01C6               	clrf	_us_hour
  2791  0286  01C7               	clrf	_us_hour+1
  2792  0287                     l1947:	
  2793                           
  2794                           ;Lab3_Main.c: 89:         readTime(us_hour, us_min);
  2795  0287  0847               	movf	_us_hour+1,w
  2796  0288  00BA               	movwf	readTime@hour+1
  2797  0289  0846               	movf	_us_hour,w
  2798  028A  00B9               	movwf	readTime@hour
  2799  028B  0845               	movf	_us_min+1,w
  2800  028C  00BC               	movwf	readTime@minute+1
  2801  028D  0844               	movf	_us_min,w
  2802  028E  00BB               	movwf	readTime@minute
  2803  028F  3182  22A3  3182   	fcall	_readTime
  2804                           
  2805                           ;Lab3_Main.c: 91:         if (PORTBbits.RB4 == 1 && !pressed)
  2806  0292  0020               	movlb	0	; select bank0
  2807  0293  1E0D               	btfss	13,4	;volatile
  2808  0294  2A9A               	goto	l227
  2809  0295  082C               	movf	_pressed,w
  2810  0296  1D03               	btfss	3,2
  2811  0297  2A9A               	goto	l227
  2812                           
  2813                           ;Lab3_Main.c: 92:         {;Lab3_Main.c: 93:             pressed = 1;
  2814  0298  01AC               	clrf	_pressed
  2815  0299  0AAC               	incf	_pressed,f
  2816  029A                     l227:	
  2817                           ;Lab3_Main.c: 94:         }
  2818                           
  2819                           
  2820                           ;Lab3_Main.c: 95:         if (PORTBbits.RB4 == 0 && pressed)
  2821  029A  1A0D               	btfsc	13,4	;volatile
  2822  029B  2A58               	goto	l1931
  2823  029C  082C               	movf	_pressed,w
  2824  029D  1903               	btfsc	3,2
  2825  029E  2A58               	goto	l1931
  2826                           
  2827                           ;Lab3_Main.c: 96:         {;Lab3_Main.c: 97:             pressed = 0;
  2828  029F  01AC               	clrf	_pressed
  2829                           
  2830                           ;Lab3_Main.c: 98:             timeSaid = 1;
  2831  02A0  01AD               	clrf	_timeSaid
  2832  02A1  0AAD               	incf	_timeSaid,f
  2833  02A2  2A58               	goto	l1931
  2834  02A3                     __end_of_main:	
  2835                           
  2836                           	psect	text1
  2837  02A3                     __ptext1:	
  2838 ;; *************** function _readTime *****************
  2839 ;; Defined at:
  2840 ;;		line 154 in file "Lab3_Main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  hour            2    6[BANK0 ] short 
  2843 ;;  minute          2    8[BANK0 ] short 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  temphour        2   10[BANK0 ] unsigned short 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2858 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2859 ;;Total ram usage:        7 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    5
  2862 ;; This function calls:
  2863 ;;		_playAudio
  2864 ;;		_playHour
  2865 ;;		_playMinute
  2866 ;;		_playMinute10
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _readTime
  2874  02A3                     _readTime:	
  2875                           
  2876                           ;Lab3_Main.c: 154: void readTime (short hour, short minute);Lab3_Main.c: 155: {;Lab3_Mai
      +                          n.c: 156:     if (timeSaid == 1)
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _readTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2880  02A3  0020               	movlb	0	; select bank0
  2881  02A4  032D               	decf	_timeSaid,w
  2882  02A5  1D03               	btfss	3,2
  2883  02A6  0008               	return
  2884                           
  2885                           ;Lab3_Main.c: 157:     {;Lab3_Main.c: 158:         if (hour < 12)
  2886  02A7  083A               	movf	readTime@hour+1,w
  2887  02A8  3A80               	xorlw	128
  2888  02A9  00FC               	movwf	??_readTime
  2889  02AA  3080               	movlw	128
  2890  02AB  027C               	subwf	??_readTime,w
  2891  02AC  1D03               	skipz
  2892  02AD  2AB0               	goto	u1545
  2893  02AE  300C               	movlw	12
  2894  02AF  0239               	subwf	readTime@hour,w
  2895  02B0                     u1545:	
  2896  02B0  1803               	skipnc
  2897  02B1  2AD9               	goto	l1841
  2898                           
  2899                           ;Lab3_Main.c: 159:         {;Lab3_Main.c: 160:             playHour(hour);
  2900  02B2  0020               	movlb	0	; select bank0
  2901  02B3  083A               	movf	readTime@hour+1,w
  2902  02B4  00B8               	movwf	playHour@hour+1
  2903  02B5  0839               	movf	readTime@hour,w
  2904  02B6  00B7               	movwf	playHour@hour
  2905  02B7  3184  24C1  3182   	fcall	_playHour
  2906                           
  2907                           ;Lab3_Main.c: 161:             playMinute10(minute);
  2908  02BA  0020               	movlb	0	; select bank0
  2909  02BB  083C               	movf	readTime@minute+1,w
  2910  02BC  00B8               	movwf	playMinute10@minute+1
  2911  02BD  083B               	movf	readTime@minute,w
  2912  02BE  00B7               	movwf	playMinute10@minute
  2913  02BF  3183  2398  3182   	fcall	_playMinute10
  2914                           
  2915                           ;Lab3_Main.c: 162:             playMinute(minute);
  2916  02C2  0020               	movlb	0	; select bank0
  2917  02C3  083C               	movf	readTime@minute+1,w
  2918  02C4  00B8               	movwf	playMinute@minute+1
  2919  02C5  083B               	movf	readTime@minute,w
  2920  02C6  00B7               	movwf	playMinute@minute
  2921  02C7  3185  25E0  3182   	fcall	_playMinute
  2922                           
  2923                           ;Lab3_Main.c: 163:             playAudio(start_addresses[0], end_addresses[0]);
  2924  02CA  0021               	movlb	1	; select bank1
  2925  02CB  0821               	movf	(_start_addresses+1)^(0+128),w
  2926  02CC  0020               	movlb	0	; select bank0
  2927  02CD  00B4               	movwf	playAudio@startAddress+1
  2928  02CE  0021               	movlb	1	; select bank1
  2929  02CF  0820               	movf	_start_addresses^(0+128),w
  2930  02D0  0020               	movlb	0	; select bank0
  2931  02D1  00B3               	movwf	playAudio@startAddress
  2932  02D2  0022               	movlb	2	; select bank2
  2933  02D3  0821               	movf	(_end_addresses+1)^(0+256),w
  2934  02D4  0020               	movlb	0	; select bank0
  2935  02D5  00B6               	movwf	playAudio@endAddress+1
  2936  02D6  0022               	movlb	2	; select bank2
  2937  02D7  0820               	movf	_end_addresses^(0+256),w
  2938  02D8  2B05               	goto	L1
  2939  02D9                     l1841:	
  2940                           ;Lab3_Main.c: 164:         } else
  2941                           
  2942                           
  2943                           ;Lab3_Main.c: 165:         {;Lab3_Main.c: 166:             unsigned short temphour = hou
      +                          r - 12;
  2944  02D9  0020               	movlb	0	; select bank0
  2945  02DA  0839               	movf	readTime@hour,w
  2946  02DB  3EF4               	addlw	244
  2947  02DC  00BD               	movwf	readTime@temphour
  2948  02DD  30FF               	movlw	255
  2949  02DE  3D3A               	addwfc	readTime@hour+1,w
  2950  02DF  00BE               	movwf	readTime@temphour+1
  2951                           
  2952                           ;Lab3_Main.c: 167:             playHour(temphour);
  2953  02E0  083E               	movf	readTime@temphour+1,w
  2954  02E1  00B8               	movwf	playHour@hour+1
  2955  02E2  083D               	movf	readTime@temphour,w
  2956  02E3  00B7               	movwf	playHour@hour
  2957  02E4  3184  24C1  3182   	fcall	_playHour
  2958                           
  2959                           ;Lab3_Main.c: 168:             playMinute10(minute);
  2960  02E7  0020               	movlb	0	; select bank0
  2961  02E8  083C               	movf	readTime@minute+1,w
  2962  02E9  00B8               	movwf	playMinute10@minute+1
  2963  02EA  083B               	movf	readTime@minute,w
  2964  02EB  00B7               	movwf	playMinute10@minute
  2965  02EC  3183  2398  3182   	fcall	_playMinute10
  2966                           
  2967                           ;Lab3_Main.c: 169:             playMinute(minute);
  2968  02EF  0020               	movlb	0	; select bank0
  2969  02F0  083C               	movf	readTime@minute+1,w
  2970  02F1  00B8               	movwf	playMinute@minute+1
  2971  02F2  083B               	movf	readTime@minute,w
  2972  02F3  00B7               	movwf	playMinute@minute
  2973  02F4  3185  25E0  3182   	fcall	_playMinute
  2974                           
  2975                           ;Lab3_Main.c: 170:             playAudio(start_addresses[22], end_addresses[22]);
  2976  02F7  0021               	movlb	1	; select bank1
  2977  02F8  084D               	movf	((_start_addresses+1)^(0+128)+44),w
  2978  02F9  0020               	movlb	0	; select bank0
  2979  02FA  00B4               	movwf	playAudio@startAddress+1
  2980  02FB  0021               	movlb	1	; select bank1
  2981  02FC  084C               	movf	(_start_addresses^(0+128)+44),w
  2982  02FD  0020               	movlb	0	; select bank0
  2983  02FE  00B3               	movwf	playAudio@startAddress
  2984  02FF  0022               	movlb	2	; select bank2
  2985  0300  084D               	movf	((_end_addresses+1)^(0+256)+44),w
  2986  0301  0020               	movlb	0	; select bank0
  2987  0302  00B6               	movwf	playAudio@endAddress+1
  2988  0303  0022               	movlb	2	; select bank2
  2989  0304  084C               	movf	(_end_addresses^(0+256)+44),w
  2990  0305                     L1:	
  2991  0305  0020               	movlb	0	; select bank0
  2992  0306  00B5               	movwf	playAudio@endAddress
  2993  0307  3180  20AC         	fcall	_playAudio
  2994                           
  2995                           ;Lab3_Main.c: 172:         timeSaid = 0;
  2996  0309  0020               	movlb	0	; select bank0
  2997  030A  01AD               	clrf	_timeSaid
  2998  030B  0008               	return
  2999  030C                     __end_of_readTime:	
  3000                           
  3001                           	psect	text2
  3002  0398                     __ptext2:	
  3003 ;; *************** function _playMinute10 *****************
  3004 ;; Defined at:
  3005 ;;		line 206 in file "Lab3_Main.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  minute          2    4[BANK0 ] short 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3019 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    4
  3026 ;; This function calls:
  3027 ;;		___awdiv
  3028 ;;		_playAudio
  3029 ;; This function is called by:
  3030 ;;		_readTime
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _playMinute10
  3036  0398                     _playMinute10:	
  3037                           
  3038                           ;Lab3_Main.c: 206: void playMinute10 (short minute);Lab3_Main.c: 207: {;Lab3_Main.c: 208
      +                          :     if (minute/10 == 2){
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _playMinute10: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3042  0398  300A               	movlw	10
  3043  0399  00F0               	movwf	___awdiv@divisor
  3044  039A  3000               	movlw	0
  3045  039B  00F1               	movwf	___awdiv@divisor+1
  3046  039C  0020               	movlb	0	; select bank0
  3047  039D  0838               	movf	playMinute10@minute+1,w
  3048  039E  00F3               	movwf	___awdiv@dividend+1
  3049  039F  0837               	movf	playMinute10@minute,w
  3050  03A0  00F2               	movwf	___awdiv@dividend
  3051  03A1  3181  2199  3183   	fcall	___awdiv
  3052  03A4  3002               	movlw	2
  3053  03A5  0670               	xorwf	?___awdiv,w
  3054  03A6  0471               	iorwf	?___awdiv+1,w
  3055  03A7  1D03               	btfss	3,2
  3056  03A8  2BBC               	goto	l1695
  3057                           
  3058                           ;Lab3_Main.c: 209:            playAudio(start_addresses[32], end_addresses[32]);
  3059  03A9  0021               	movlb	1	; select bank1
  3060  03AA  0861               	movf	((_start_addresses+1)^(0+128)+64),w
  3061  03AB  0020               	movlb	0	; select bank0
  3062  03AC  00B4               	movwf	playAudio@startAddress+1
  3063  03AD  0021               	movlb	1	; select bank1
  3064  03AE  0860               	movf	(_start_addresses^(0+128)+64),w
  3065  03AF  0020               	movlb	0	; select bank0
  3066  03B0  00B3               	movwf	playAudio@startAddress
  3067  03B1  0022               	movlb	2	; select bank2
  3068  03B2  0861               	movf	((_end_addresses+1)^(0+256)+64),w
  3069  03B3  0020               	movlb	0	; select bank0
  3070  03B4  00B6               	movwf	playAudio@endAddress+1
  3071  03B5  0022               	movlb	2	; select bank2
  3072  03B6  0860               	movf	(_end_addresses^(0+256)+64),w
  3073  03B7  0020               	movlb	0	; select bank0
  3074  03B8  00B5               	movwf	playAudio@endAddress
  3075  03B9  3180  20AC         	fcall	_playAudio
  3076                           
  3077                           ;Lab3_Main.c: 210:     } else if (minute/10 == 3){
  3078  03BB  0008               	return
  3079  03BC                     l1695:	
  3080  03BC  300A               	movlw	10
  3081  03BD  00F0               	movwf	___awdiv@divisor
  3082  03BE  3000               	movlw	0
  3083  03BF  00F1               	movwf	___awdiv@divisor+1
  3084  03C0  0020               	movlb	0	; select bank0
  3085  03C1  0838               	movf	playMinute10@minute+1,w
  3086  03C2  00F3               	movwf	___awdiv@dividend+1
  3087  03C3  0837               	movf	playMinute10@minute,w
  3088  03C4  00F2               	movwf	___awdiv@dividend
  3089  03C5  3181  2199  3183   	fcall	___awdiv
  3090  03C8  3003               	movlw	3
  3091  03C9  0670               	xorwf	?___awdiv,w
  3092  03CA  0471               	iorwf	?___awdiv+1,w
  3093  03CB  1D03               	btfss	3,2
  3094  03CC  2BE0               	goto	l1699
  3095                           
  3096                           ;Lab3_Main.c: 211:            playAudio(start_addresses[29], end_addresses[29]);
  3097  03CD  0021               	movlb	1	; select bank1
  3098  03CE  085B               	movf	((_start_addresses+1)^(0+128)+58),w
  3099  03CF  0020               	movlb	0	; select bank0
  3100  03D0  00B4               	movwf	playAudio@startAddress+1
  3101  03D1  0021               	movlb	1	; select bank1
  3102  03D2  085A               	movf	(_start_addresses^(0+128)+58),w
  3103  03D3  0020               	movlb	0	; select bank0
  3104  03D4  00B3               	movwf	playAudio@startAddress
  3105  03D5  0022               	movlb	2	; select bank2
  3106  03D6  085B               	movf	((_end_addresses+1)^(0+256)+58),w
  3107  03D7  0020               	movlb	0	; select bank0
  3108  03D8  00B6               	movwf	playAudio@endAddress+1
  3109  03D9  0022               	movlb	2	; select bank2
  3110  03DA  085A               	movf	(_end_addresses^(0+256)+58),w
  3111  03DB  0020               	movlb	0	; select bank0
  3112  03DC  00B5               	movwf	playAudio@endAddress
  3113  03DD  3180  20AC         	fcall	_playAudio
  3114                           
  3115                           ;Lab3_Main.c: 212:     } else if (minute/10 == 4){
  3116  03DF  0008               	return
  3117  03E0                     l1699:	
  3118  03E0  300A               	movlw	10
  3119  03E1  00F0               	movwf	___awdiv@divisor
  3120  03E2  3000               	movlw	0
  3121  03E3  00F1               	movwf	___awdiv@divisor+1
  3122  03E4  0020               	movlb	0	; select bank0
  3123  03E5  0838               	movf	playMinute10@minute+1,w
  3124  03E6  00F3               	movwf	___awdiv@dividend+1
  3125  03E7  0837               	movf	playMinute10@minute,w
  3126  03E8  00F2               	movwf	___awdiv@dividend
  3127  03E9  3181  2199  3183   	fcall	___awdiv
  3128  03EC  3004               	movlw	4
  3129  03ED  0670               	xorwf	?___awdiv,w
  3130  03EE  0471               	iorwf	?___awdiv+1,w
  3131  03EF  1D03               	btfss	3,2
  3132  03F0  2C04               	goto	l1703
  3133                           
  3134                           ;Lab3_Main.c: 213:            playAudio(start_addresses[9], end_addresses[9]);
  3135  03F1  0021               	movlb	1	; select bank1
  3136  03F2  0833               	movf	((_start_addresses+1)^(0+128)+18),w
  3137  03F3  0020               	movlb	0	; select bank0
  3138  03F4  00B4               	movwf	playAudio@startAddress+1
  3139  03F5  0021               	movlb	1	; select bank1
  3140  03F6  0832               	movf	(_start_addresses^(0+128)+18),w
  3141  03F7  0020               	movlb	0	; select bank0
  3142  03F8  00B3               	movwf	playAudio@startAddress
  3143  03F9  0022               	movlb	2	; select bank2
  3144  03FA  0833               	movf	((_end_addresses+1)^(0+256)+18),w
  3145  03FB  0020               	movlb	0	; select bank0
  3146  03FC  00B6               	movwf	playAudio@endAddress+1
  3147  03FD  0022               	movlb	2	; select bank2
  3148  03FE  0832               	movf	(_end_addresses^(0+256)+18),w
  3149  03FF  0020               	movlb	0	; select bank0
  3150  0400  00B5               	movwf	playAudio@endAddress
  3151  0401  3180  20AC         	fcall	_playAudio
  3152                           
  3153                           ;Lab3_Main.c: 214:     } else if (minute/10 == 5){
  3154  0403  0008               	return
  3155  0404                     l1703:	
  3156  0404  300A               	movlw	10
  3157  0405  00F0               	movwf	___awdiv@divisor
  3158  0406  3000               	movlw	0
  3159  0407  00F1               	movwf	___awdiv@divisor+1
  3160  0408  0020               	movlb	0	; select bank0
  3161  0409  0838               	movf	playMinute10@minute+1,w
  3162  040A  00F3               	movwf	___awdiv@dividend+1
  3163  040B  0837               	movf	playMinute10@minute,w
  3164  040C  00F2               	movwf	___awdiv@dividend
  3165  040D  3181  2199  3183   	fcall	___awdiv
  3166  0410  3005               	movlw	5
  3167  0411  0670               	xorwf	?___awdiv,w
  3168  0412  0471               	iorwf	?___awdiv+1,w
  3169  0413  1D03               	btfss	3,2
  3170  0414  0008               	return
  3171                           
  3172                           ;Lab3_Main.c: 215:            playAudio(start_addresses[5], end_addresses[5]);
  3173  0415  0021               	movlb	1	; select bank1
  3174  0416  082B               	movf	((_start_addresses+1)^(0+128)+10),w
  3175  0417  0020               	movlb	0	; select bank0
  3176  0418  00B4               	movwf	playAudio@startAddress+1
  3177  0419  0021               	movlb	1	; select bank1
  3178  041A  082A               	movf	(_start_addresses^(0+128)+10),w
  3179  041B  0020               	movlb	0	; select bank0
  3180  041C  00B3               	movwf	playAudio@startAddress
  3181  041D  0022               	movlb	2	; select bank2
  3182  041E  082B               	movf	((_end_addresses+1)^(0+256)+10),w
  3183  041F  0020               	movlb	0	; select bank0
  3184  0420  00B6               	movwf	playAudio@endAddress+1
  3185  0421  0022               	movlb	2	; select bank2
  3186  0422  082A               	movf	(_end_addresses^(0+256)+10),w
  3187  0423  0020               	movlb	0	; select bank0
  3188  0424  00B5               	movwf	playAudio@endAddress
  3189  0425  3180  20AC         	fcall	_playAudio
  3190  0427  0008               	return
  3191  0428                     __end_of_playMinute10:	
  3192                           
  3193                           	psect	text3
  3194  05E0                     __ptext3:	
  3195 ;; *************** function _playMinute *****************
  3196 ;; Defined at:
  3197 ;;		line 220 in file "Lab3_Main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  minute          2    4[BANK0 ] short 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        2 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    4
  3218 ;; This function calls:
  3219 ;;		___awdiv
  3220 ;;		_playAudio
  3221 ;; This function is called by:
  3222 ;;		_readTime
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _playMinute
  3228  05E0                     _playMinute:	
  3229                           
  3230                           ;Lab3_Main.c: 220: void playMinute (short minute);Lab3_Main.c: 221: {;Lab3_Main.c: 222: 
      +                              if (minute/10 == 1) {
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _playMinute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3234  05E0  300A               	movlw	10
  3235  05E1  00F0               	movwf	___awdiv@divisor
  3236  05E2  3000               	movlw	0
  3237  05E3  00F1               	movwf	___awdiv@divisor+1
  3238  05E4  0020               	movlb	0	; select bank0
  3239  05E5  0838               	movf	playMinute@minute+1,w
  3240  05E6  00F3               	movwf	___awdiv@dividend+1
  3241  05E7  0837               	movf	playMinute@minute,w
  3242  05E8  00F2               	movwf	___awdiv@dividend
  3243  05E9  3181  2199  3185   	fcall	___awdiv
  3244  05EC  0370               	decf	?___awdiv,w
  3245  05ED  0471               	iorwf	?___awdiv+1,w
  3246  05EE  1D03               	btfss	3,2
  3247  05EF  2EDA               	goto	l1751
  3248                           
  3249                           ;Lab3_Main.c: 223:         if (minute == 10) {
  3250  05F0  300A               	movlw	10
  3251  05F1  0020               	movlb	0	; select bank0
  3252  05F2  0637               	xorwf	playMinute@minute,w
  3253  05F3  0438               	iorwf	playMinute@minute+1,w
  3254  05F4  1D03               	btfss	3,2
  3255  05F5  2E09               	goto	l1715
  3256                           
  3257                           ;Lab3_Main.c: 224:             playAudio(start_addresses[27], end_addresses[27]);
  3258  05F6  0021               	movlb	1	; select bank1
  3259  05F7  0857               	movf	((_start_addresses+1)^(0+128)+54),w
  3260  05F8  0020               	movlb	0	; select bank0
  3261  05F9  00B4               	movwf	playAudio@startAddress+1
  3262  05FA  0021               	movlb	1	; select bank1
  3263  05FB  0856               	movf	(_start_addresses^(0+128)+54),w
  3264  05FC  0020               	movlb	0	; select bank0
  3265  05FD  00B3               	movwf	playAudio@startAddress
  3266  05FE  0022               	movlb	2	; select bank2
  3267  05FF  0857               	movf	((_end_addresses+1)^(0+256)+54),w
  3268  0600  0020               	movlb	0	; select bank0
  3269  0601  00B6               	movwf	playAudio@endAddress+1
  3270  0602  0022               	movlb	2	; select bank2
  3271  0603  0856               	movf	(_end_addresses^(0+256)+54),w
  3272  0604  0020               	movlb	0	; select bank0
  3273  0605  00B5               	movwf	playAudio@endAddress
  3274  0606  3180  20AC         	fcall	_playAudio
  3275                           
  3276                           ;Lab3_Main.c: 225:         } else if (minute == 11) {
  3277  0608  0008               	return
  3278  0609                     l1715:	
  3279  0609  300B               	movlw	11
  3280  060A  0637               	xorwf	playMinute@minute,w
  3281  060B  0438               	iorwf	playMinute@minute+1,w
  3282  060C  1D03               	btfss	3,2
  3283  060D  2E21               	goto	l1719
  3284                           
  3285                           ;Lab3_Main.c: 226:             playAudio(start_addresses[3], end_addresses[3]);
  3286  060E  0021               	movlb	1	; select bank1
  3287  060F  0827               	movf	((_start_addresses+1)^(0+128)+6),w
  3288  0610  0020               	movlb	0	; select bank0
  3289  0611  00B4               	movwf	playAudio@startAddress+1
  3290  0612  0021               	movlb	1	; select bank1
  3291  0613  0826               	movf	(_start_addresses^(0+128)+6),w
  3292  0614  0020               	movlb	0	; select bank0
  3293  0615  00B3               	movwf	playAudio@startAddress
  3294  0616  0022               	movlb	2	; select bank2
  3295  0617  0827               	movf	((_end_addresses+1)^(0+256)+6),w
  3296  0618  0020               	movlb	0	; select bank0
  3297  0619  00B6               	movwf	playAudio@endAddress+1
  3298  061A  0022               	movlb	2	; select bank2
  3299  061B  0826               	movf	(_end_addresses^(0+256)+6),w
  3300  061C  0020               	movlb	0	; select bank0
  3301  061D  00B5               	movwf	playAudio@endAddress
  3302  061E  3180  20AC         	fcall	_playAudio
  3303                           
  3304                           ;Lab3_Main.c: 227:         } else if (minute == 12) {
  3305  0620  0008               	return
  3306  0621                     l1719:	
  3307  0621  300C               	movlw	12
  3308  0622  0637               	xorwf	playMinute@minute,w
  3309  0623  0438               	iorwf	playMinute@minute+1,w
  3310  0624  1D03               	btfss	3,2
  3311  0625  2E39               	goto	l1723
  3312                           
  3313                           ;Lab3_Main.c: 228:             playAudio(start_addresses[31], end_addresses[31]);
  3314  0626  0021               	movlb	1	; select bank1
  3315  0627  085F               	movf	((_start_addresses+1)^(0+128)+62),w
  3316  0628  0020               	movlb	0	; select bank0
  3317  0629  00B4               	movwf	playAudio@startAddress+1
  3318  062A  0021               	movlb	1	; select bank1
  3319  062B  085E               	movf	(_start_addresses^(0+128)+62),w
  3320  062C  0020               	movlb	0	; select bank0
  3321  062D  00B3               	movwf	playAudio@startAddress
  3322  062E  0022               	movlb	2	; select bank2
  3323  062F  085F               	movf	((_end_addresses+1)^(0+256)+62),w
  3324  0630  0020               	movlb	0	; select bank0
  3325  0631  00B6               	movwf	playAudio@endAddress+1
  3326  0632  0022               	movlb	2	; select bank2
  3327  0633  085E               	movf	(_end_addresses^(0+256)+62),w
  3328  0634  0020               	movlb	0	; select bank0
  3329  0635  00B5               	movwf	playAudio@endAddress
  3330  0636  3180  20AC         	fcall	_playAudio
  3331                           
  3332                           ;Lab3_Main.c: 229:         } else if (minute == 0) {
  3333  0638  0008               	return
  3334  0639                     l1723:	
  3335  0639  0837               	movf	playMinute@minute,w
  3336  063A  0438               	iorwf	playMinute@minute+1,w
  3337  063B  1D03               	btfss	3,2
  3338  063C  2E50               	goto	l1727
  3339                           
  3340                           ;Lab3_Main.c: 230:             playAudio(start_addresses[28], end_addresses[28]);
  3341  063D  0021               	movlb	1	; select bank1
  3342  063E  0859               	movf	((_start_addresses+1)^(0+128)+56),w
  3343  063F  0020               	movlb	0	; select bank0
  3344  0640  00B4               	movwf	playAudio@startAddress+1
  3345  0641  0021               	movlb	1	; select bank1
  3346  0642  0858               	movf	(_start_addresses^(0+128)+56),w
  3347  0643  0020               	movlb	0	; select bank0
  3348  0644  00B3               	movwf	playAudio@startAddress
  3349  0645  0022               	movlb	2	; select bank2
  3350  0646  0859               	movf	((_end_addresses+1)^(0+256)+56),w
  3351  0647  0020               	movlb	0	; select bank0
  3352  0648  00B6               	movwf	playAudio@endAddress+1
  3353  0649  0022               	movlb	2	; select bank2
  3354  064A  0858               	movf	(_end_addresses^(0+256)+56),w
  3355  064B  0020               	movlb	0	; select bank0
  3356  064C  00B5               	movwf	playAudio@endAddress
  3357  064D  3180  20AC         	fcall	_playAudio
  3358                           
  3359                           ;Lab3_Main.c: 231:         } else if (minute == 0) {
  3360  064F  0008               	return
  3361  0650                     l1727:	
  3362  0650  0837               	movf	playMinute@minute,w
  3363  0651  0438               	iorwf	playMinute@minute+1,w
  3364  0652  1D03               	btfss	3,2
  3365  0653  2E67               	goto	l1731
  3366                           
  3367                           ;Lab3_Main.c: 232:             playAudio(start_addresses[8], end_addresses[8]);
  3368  0654  0021               	movlb	1	; select bank1
  3369  0655  0831               	movf	((_start_addresses+1)^(0+128)+16),w
  3370  0656  0020               	movlb	0	; select bank0
  3371  0657  00B4               	movwf	playAudio@startAddress+1
  3372  0658  0021               	movlb	1	; select bank1
  3373  0659  0830               	movf	(_start_addresses^(0+128)+16),w
  3374  065A  0020               	movlb	0	; select bank0
  3375  065B  00B3               	movwf	playAudio@startAddress
  3376  065C  0022               	movlb	2	; select bank2
  3377  065D  0831               	movf	((_end_addresses+1)^(0+256)+16),w
  3378  065E  0020               	movlb	0	; select bank0
  3379  065F  00B6               	movwf	playAudio@endAddress+1
  3380  0660  0022               	movlb	2	; select bank2
  3381  0661  0830               	movf	(_end_addresses^(0+256)+16),w
  3382  0662  0020               	movlb	0	; select bank0
  3383  0663  00B5               	movwf	playAudio@endAddress
  3384  0664  3180  20AC         	fcall	_playAudio
  3385                           
  3386                           ;Lab3_Main.c: 233:         } else if (minute == 0) {
  3387  0666  0008               	return
  3388  0667                     l1731:	
  3389  0667  0837               	movf	playMinute@minute,w
  3390  0668  0438               	iorwf	playMinute@minute+1,w
  3391  0669  1D03               	btfss	3,2
  3392  066A  2E7E               	goto	l1735
  3393                           
  3394                           ;Lab3_Main.c: 234:             playAudio(start_addresses[4], end_addresses[4]);
  3395  066B  0021               	movlb	1	; select bank1
  3396  066C  0829               	movf	((_start_addresses+1)^(0+128)+8),w
  3397  066D  0020               	movlb	0	; select bank0
  3398  066E  00B4               	movwf	playAudio@startAddress+1
  3399  066F  0021               	movlb	1	; select bank1
  3400  0670  0828               	movf	(_start_addresses^(0+128)+8),w
  3401  0671  0020               	movlb	0	; select bank0
  3402  0672  00B3               	movwf	playAudio@startAddress
  3403  0673  0022               	movlb	2	; select bank2
  3404  0674  0829               	movf	((_end_addresses+1)^(0+256)+8),w
  3405  0675  0020               	movlb	0	; select bank0
  3406  0676  00B6               	movwf	playAudio@endAddress+1
  3407  0677  0022               	movlb	2	; select bank2
  3408  0678  0828               	movf	(_end_addresses^(0+256)+8),w
  3409  0679  0020               	movlb	0	; select bank0
  3410  067A  00B5               	movwf	playAudio@endAddress
  3411  067B  3180  20AC         	fcall	_playAudio
  3412                           
  3413                           ;Lab3_Main.c: 235:         } else if (minute == 0) {
  3414  067D  0008               	return
  3415  067E                     l1735:	
  3416  067E  0837               	movf	playMinute@minute,w
  3417  067F  0438               	iorwf	playMinute@minute+1,w
  3418  0680  1D03               	btfss	3,2
  3419  0681  2E95               	goto	l1739
  3420                           
  3421                           ;Lab3_Main.c: 236:             playAudio(start_addresses[26], end_addresses[26]);
  3422  0682  0021               	movlb	1	; select bank1
  3423  0683  0855               	movf	((_start_addresses+1)^(0+128)+52),w
  3424  0684  0020               	movlb	0	; select bank0
  3425  0685  00B4               	movwf	playAudio@startAddress+1
  3426  0686  0021               	movlb	1	; select bank1
  3427  0687  0854               	movf	(_start_addresses^(0+128)+52),w
  3428  0688  0020               	movlb	0	; select bank0
  3429  0689  00B3               	movwf	playAudio@startAddress
  3430  068A  0022               	movlb	2	; select bank2
  3431  068B  0855               	movf	((_end_addresses+1)^(0+256)+52),w
  3432  068C  0020               	movlb	0	; select bank0
  3433  068D  00B6               	movwf	playAudio@endAddress+1
  3434  068E  0022               	movlb	2	; select bank2
  3435  068F  0854               	movf	(_end_addresses^(0+256)+52),w
  3436  0690  0020               	movlb	0	; select bank0
  3437  0691  00B5               	movwf	playAudio@endAddress
  3438  0692  3180  20AC         	fcall	_playAudio
  3439                           
  3440                           ;Lab3_Main.c: 237:         } else if (minute == 0) {
  3441  0694  0008               	return
  3442  0695                     l1739:	
  3443  0695  0837               	movf	playMinute@minute,w
  3444  0696  0438               	iorwf	playMinute@minute+1,w
  3445  0697  1D03               	btfss	3,2
  3446  0698  2EAC               	goto	l1743
  3447                           
  3448                           ;Lab3_Main.c: 238:             playAudio(start_addresses[24], end_addresses[24]);
  3449  0699  0021               	movlb	1	; select bank1
  3450  069A  0851               	movf	((_start_addresses+1)^(0+128)+48),w
  3451  069B  0020               	movlb	0	; select bank0
  3452  069C  00B4               	movwf	playAudio@startAddress+1
  3453  069D  0021               	movlb	1	; select bank1
  3454  069E  0850               	movf	(_start_addresses^(0+128)+48),w
  3455  069F  0020               	movlb	0	; select bank0
  3456  06A0  00B3               	movwf	playAudio@startAddress
  3457  06A1  0022               	movlb	2	; select bank2
  3458  06A2  0851               	movf	((_end_addresses+1)^(0+256)+48),w
  3459  06A3  0020               	movlb	0	; select bank0
  3460  06A4  00B6               	movwf	playAudio@endAddress+1
  3461  06A5  0022               	movlb	2	; select bank2
  3462  06A6  0850               	movf	(_end_addresses^(0+256)+48),w
  3463  06A7  0020               	movlb	0	; select bank0
  3464  06A8  00B5               	movwf	playAudio@endAddress
  3465  06A9  3180  20AC         	fcall	_playAudio
  3466                           
  3467                           ;Lab3_Main.c: 239:         } else if (minute == 0) {
  3468  06AB  0008               	return
  3469  06AC                     l1743:	
  3470  06AC  0837               	movf	playMinute@minute,w
  3471  06AD  0438               	iorwf	playMinute@minute+1,w
  3472  06AE  1D03               	btfss	3,2
  3473  06AF  2EC3               	goto	l1747
  3474                           
  3475                           ;Lab3_Main.c: 240:             playAudio(start_addresses[2], end_addresses[2]);
  3476  06B0  0021               	movlb	1	; select bank1
  3477  06B1  0825               	movf	((_start_addresses+1)^(0+128)+4),w
  3478  06B2  0020               	movlb	0	; select bank0
  3479  06B3  00B4               	movwf	playAudio@startAddress+1
  3480  06B4  0021               	movlb	1	; select bank1
  3481  06B5  0824               	movf	(_start_addresses^(0+128)+4),w
  3482  06B6  0020               	movlb	0	; select bank0
  3483  06B7  00B3               	movwf	playAudio@startAddress
  3484  06B8  0022               	movlb	2	; select bank2
  3485  06B9  0825               	movf	((_end_addresses+1)^(0+256)+4),w
  3486  06BA  0020               	movlb	0	; select bank0
  3487  06BB  00B6               	movwf	playAudio@endAddress+1
  3488  06BC  0022               	movlb	2	; select bank2
  3489  06BD  0824               	movf	(_end_addresses^(0+256)+4),w
  3490  06BE  0020               	movlb	0	; select bank0
  3491  06BF  00B5               	movwf	playAudio@endAddress
  3492  06C0  3180  20AC         	fcall	_playAudio
  3493                           
  3494                           ;Lab3_Main.c: 241:         } else if (minute == 0) {
  3495  06C2  0008               	return
  3496  06C3                     l1747:	
  3497  06C3  0837               	movf	playMinute@minute,w
  3498  06C4  0438               	iorwf	playMinute@minute+1,w
  3499  06C5  1D03               	btfss	3,2
  3500  06C6  0008               	return
  3501                           
  3502                           ;Lab3_Main.c: 242:             playAudio(start_addresses[11], end_addresses[11]);
  3503  06C7  0021               	movlb	1	; select bank1
  3504  06C8  0837               	movf	((_start_addresses+1)^(0+128)+22),w
  3505  06C9  0020               	movlb	0	; select bank0
  3506  06CA  00B4               	movwf	playAudio@startAddress+1
  3507  06CB  0021               	movlb	1	; select bank1
  3508  06CC  0836               	movf	(_start_addresses^(0+128)+22),w
  3509  06CD  0020               	movlb	0	; select bank0
  3510  06CE  00B3               	movwf	playAudio@startAddress
  3511  06CF  0022               	movlb	2	; select bank2
  3512  06D0  0837               	movf	((_end_addresses+1)^(0+256)+22),w
  3513  06D1  0020               	movlb	0	; select bank0
  3514  06D2  00B6               	movwf	playAudio@endAddress+1
  3515  06D3  0022               	movlb	2	; select bank2
  3516  06D4  0836               	movf	(_end_addresses^(0+256)+22),w
  3517  06D5  0020               	movlb	0	; select bank0
  3518  06D6  00B5               	movwf	playAudio@endAddress
  3519  06D7  3180  20AC         	fcall	_playAudio
  3520  06D9  0008               	return
  3521  06DA                     l1751:	
  3522                           
  3523                           ;Lab3_Main.c: 245:         if (minute == 9) {
  3524  06DA  3009               	movlw	9
  3525  06DB  0020               	movlb	0	; select bank0
  3526  06DC  0637               	xorwf	playMinute@minute,w
  3527  06DD  0438               	iorwf	playMinute@minute+1,w
  3528  06DE  1D03               	btfss	3,2
  3529  06DF  2EF3               	goto	l1755
  3530                           
  3531                           ;Lab3_Main.c: 246:             playAudio(start_addresses[10], end_addresses[10]);
  3532  06E0  0021               	movlb	1	; select bank1
  3533  06E1  0835               	movf	((_start_addresses+1)^(0+128)+20),w
  3534  06E2  0020               	movlb	0	; select bank0
  3535  06E3  00B4               	movwf	playAudio@startAddress+1
  3536  06E4  0021               	movlb	1	; select bank1
  3537  06E5  0834               	movf	(_start_addresses^(0+128)+20),w
  3538  06E6  0020               	movlb	0	; select bank0
  3539  06E7  00B3               	movwf	playAudio@startAddress
  3540  06E8  0022               	movlb	2	; select bank2
  3541  06E9  0835               	movf	((_end_addresses+1)^(0+256)+20),w
  3542  06EA  0020               	movlb	0	; select bank0
  3543  06EB  00B6               	movwf	playAudio@endAddress+1
  3544  06EC  0022               	movlb	2	; select bank2
  3545  06ED  0834               	movf	(_end_addresses^(0+256)+20),w
  3546  06EE  0020               	movlb	0	; select bank0
  3547  06EF  00B5               	movwf	playAudio@endAddress
  3548  06F0  3180  20AC         	fcall	_playAudio
  3549                           
  3550                           ;Lab3_Main.c: 247:         } else if (minute == 8) {
  3551  06F2  0008               	return
  3552  06F3                     l1755:	
  3553  06F3  3008               	movlw	8
  3554  06F4  0637               	xorwf	playMinute@minute,w
  3555  06F5  0438               	iorwf	playMinute@minute+1,w
  3556  06F6  1D03               	btfss	3,2
  3557  06F7  2F0B               	goto	l1759
  3558                           
  3559                           ;Lab3_Main.c: 248:             playAudio(start_addresses[1], end_addresses[1]);
  3560  06F8  0021               	movlb	1	; select bank1
  3561  06F9  0823               	movf	((_start_addresses+1)^(0+128)+2),w
  3562  06FA  0020               	movlb	0	; select bank0
  3563  06FB  00B4               	movwf	playAudio@startAddress+1
  3564  06FC  0021               	movlb	1	; select bank1
  3565  06FD  0822               	movf	(_start_addresses^(0+128)+2),w
  3566  06FE  0020               	movlb	0	; select bank0
  3567  06FF  00B3               	movwf	playAudio@startAddress
  3568  0700  0022               	movlb	2	; select bank2
  3569  0701  0823               	movf	((_end_addresses+1)^(0+256)+2),w
  3570  0702  0020               	movlb	0	; select bank0
  3571  0703  00B6               	movwf	playAudio@endAddress+1
  3572  0704  0022               	movlb	2	; select bank2
  3573  0705  0822               	movf	(_end_addresses^(0+256)+2),w
  3574  0706  0020               	movlb	0	; select bank0
  3575  0707  00B5               	movwf	playAudio@endAddress
  3576  0708  3180  20AC         	fcall	_playAudio
  3577                           
  3578                           ;Lab3_Main.c: 249:         } else if (minute == 7) {
  3579  070A  0008               	return
  3580  070B                     l1759:	
  3581  070B  3007               	movlw	7
  3582  070C  0637               	xorwf	playMinute@minute,w
  3583  070D  0438               	iorwf	playMinute@minute+1,w
  3584  070E  1D03               	btfss	3,2
  3585  070F  2F23               	goto	l1763
  3586                           
  3587                           ;Lab3_Main.c: 250:             playAudio(start_addresses[23], end_addresses[23]);
  3588  0710  0021               	movlb	1	; select bank1
  3589  0711  084F               	movf	((_start_addresses+1)^(0+128)+46),w
  3590  0712  0020               	movlb	0	; select bank0
  3591  0713  00B4               	movwf	playAudio@startAddress+1
  3592  0714  0021               	movlb	1	; select bank1
  3593  0715  084E               	movf	(_start_addresses^(0+128)+46),w
  3594  0716  0020               	movlb	0	; select bank0
  3595  0717  00B3               	movwf	playAudio@startAddress
  3596  0718  0022               	movlb	2	; select bank2
  3597  0719  084F               	movf	((_end_addresses+1)^(0+256)+46),w
  3598  071A  0020               	movlb	0	; select bank0
  3599  071B  00B6               	movwf	playAudio@endAddress+1
  3600  071C  0022               	movlb	2	; select bank2
  3601  071D  084E               	movf	(_end_addresses^(0+256)+46),w
  3602  071E  0020               	movlb	0	; select bank0
  3603  071F  00B5               	movwf	playAudio@endAddress
  3604  0720  3180  20AC         	fcall	_playAudio
  3605                           
  3606                           ;Lab3_Main.c: 251:         } else if (minute == 6) {
  3607  0722  0008               	return
  3608  0723                     l1763:	
  3609  0723  3006               	movlw	6
  3610  0724  0637               	xorwf	playMinute@minute,w
  3611  0725  0438               	iorwf	playMinute@minute+1,w
  3612  0726  1D03               	btfss	3,2
  3613  0727  2F3B               	goto	l1767
  3614                           
  3615                           ;Lab3_Main.c: 252:             playAudio(start_addresses[25], end_addresses[25]);
  3616  0728  0021               	movlb	1	; select bank1
  3617  0729  0853               	movf	((_start_addresses+1)^(0+128)+50),w
  3618  072A  0020               	movlb	0	; select bank0
  3619  072B  00B4               	movwf	playAudio@startAddress+1
  3620  072C  0021               	movlb	1	; select bank1
  3621  072D  0852               	movf	(_start_addresses^(0+128)+50),w
  3622  072E  0020               	movlb	0	; select bank0
  3623  072F  00B3               	movwf	playAudio@startAddress
  3624  0730  0022               	movlb	2	; select bank2
  3625  0731  0853               	movf	((_end_addresses+1)^(0+256)+50),w
  3626  0732  0020               	movlb	0	; select bank0
  3627  0733  00B6               	movwf	playAudio@endAddress+1
  3628  0734  0022               	movlb	2	; select bank2
  3629  0735  0852               	movf	(_end_addresses^(0+256)+50),w
  3630  0736  0020               	movlb	0	; select bank0
  3631  0737  00B5               	movwf	playAudio@endAddress
  3632  0738  3180  20AC         	fcall	_playAudio
  3633                           
  3634                           ;Lab3_Main.c: 253:         } else if (minute == 5) {
  3635  073A  0008               	return
  3636  073B                     l1767:	
  3637  073B  3005               	movlw	5
  3638  073C  0637               	xorwf	playMinute@minute,w
  3639  073D  0438               	iorwf	playMinute@minute+1,w
  3640  073E  1D03               	btfss	3,2
  3641  073F  2F53               	goto	l1771
  3642                           
  3643                           ;Lab3_Main.c: 254:             playAudio(start_addresses[6], end_addresses[6]);
  3644  0740  0021               	movlb	1	; select bank1
  3645  0741  082D               	movf	((_start_addresses+1)^(0+128)+12),w
  3646  0742  0020               	movlb	0	; select bank0
  3647  0743  00B4               	movwf	playAudio@startAddress+1
  3648  0744  0021               	movlb	1	; select bank1
  3649  0745  082C               	movf	(_start_addresses^(0+128)+12),w
  3650  0746  0020               	movlb	0	; select bank0
  3651  0747  00B3               	movwf	playAudio@startAddress
  3652  0748  0022               	movlb	2	; select bank2
  3653  0749  082D               	movf	((_end_addresses+1)^(0+256)+12),w
  3654  074A  0020               	movlb	0	; select bank0
  3655  074B  00B6               	movwf	playAudio@endAddress+1
  3656  074C  0022               	movlb	2	; select bank2
  3657  074D  082C               	movf	(_end_addresses^(0+256)+12),w
  3658  074E  0020               	movlb	0	; select bank0
  3659  074F  00B5               	movwf	playAudio@endAddress
  3660  0750  3180  20AC         	fcall	_playAudio
  3661                           
  3662                           ;Lab3_Main.c: 255:         } else if (minute == 4) {
  3663  0752  0008               	return
  3664  0753                     l1771:	
  3665  0753  3004               	movlw	4
  3666  0754  0637               	xorwf	playMinute@minute,w
  3667  0755  0438               	iorwf	playMinute@minute+1,w
  3668  0756  1D03               	btfss	3,2
  3669  0757  2F6B               	goto	l1775
  3670                           
  3671                           ;Lab3_Main.c: 256:             playAudio(start_addresses[7], end_addresses[7]);
  3672  0758  0021               	movlb	1	; select bank1
  3673  0759  082F               	movf	((_start_addresses+1)^(0+128)+14),w
  3674  075A  0020               	movlb	0	; select bank0
  3675  075B  00B4               	movwf	playAudio@startAddress+1
  3676  075C  0021               	movlb	1	; select bank1
  3677  075D  082E               	movf	(_start_addresses^(0+128)+14),w
  3678  075E  0020               	movlb	0	; select bank0
  3679  075F  00B3               	movwf	playAudio@startAddress
  3680  0760  0022               	movlb	2	; select bank2
  3681  0761  082F               	movf	((_end_addresses+1)^(0+256)+14),w
  3682  0762  0020               	movlb	0	; select bank0
  3683  0763  00B6               	movwf	playAudio@endAddress+1
  3684  0764  0022               	movlb	2	; select bank2
  3685  0765  082E               	movf	(_end_addresses^(0+256)+14),w
  3686  0766  0020               	movlb	0	; select bank0
  3687  0767  00B5               	movwf	playAudio@endAddress
  3688  0768  3180  20AC         	fcall	_playAudio
  3689                           
  3690                           ;Lab3_Main.c: 257:         } else if (minute == 3) {
  3691  076A  0008               	return
  3692  076B                     l1775:	
  3693  076B  3003               	movlw	3
  3694  076C  0637               	xorwf	playMinute@minute,w
  3695  076D  0438               	iorwf	playMinute@minute+1,w
  3696  076E  1D03               	btfss	3,2
  3697  076F  2F83               	goto	l1779
  3698                           
  3699                           ;Lab3_Main.c: 258:             playAudio(start_addresses[30], end_addresses[30]);
  3700  0770  0021               	movlb	1	; select bank1
  3701  0771  085D               	movf	((_start_addresses+1)^(0+128)+60),w
  3702  0772  0020               	movlb	0	; select bank0
  3703  0773  00B4               	movwf	playAudio@startAddress+1
  3704  0774  0021               	movlb	1	; select bank1
  3705  0775  085C               	movf	(_start_addresses^(0+128)+60),w
  3706  0776  0020               	movlb	0	; select bank0
  3707  0777  00B3               	movwf	playAudio@startAddress
  3708  0778  0022               	movlb	2	; select bank2
  3709  0779  085D               	movf	((_end_addresses+1)^(0+256)+60),w
  3710  077A  0020               	movlb	0	; select bank0
  3711  077B  00B6               	movwf	playAudio@endAddress+1
  3712  077C  0022               	movlb	2	; select bank2
  3713  077D  085C               	movf	(_end_addresses^(0+256)+60),w
  3714  077E  0020               	movlb	0	; select bank0
  3715  077F  00B5               	movwf	playAudio@endAddress
  3716  0780  3180  20AC         	fcall	_playAudio
  3717                           
  3718                           ;Lab3_Main.c: 259:         } else if (minute == 2) {
  3719  0782  0008               	return
  3720  0783                     l1779:	
  3721  0783  3002               	movlw	2
  3722  0784  0637               	xorwf	playMinute@minute,w
  3723  0785  0438               	iorwf	playMinute@minute+1,w
  3724  0786  1D03               	btfss	3,2
  3725  0787  2F9B               	goto	l1783
  3726                           
  3727                           ;Lab3_Main.c: 260:             playAudio(start_addresses[33], end_addresses[33]);
  3728  0788  0021               	movlb	1	; select bank1
  3729  0789  0863               	movf	((_start_addresses+1)^(0+128)+66),w
  3730  078A  0020               	movlb	0	; select bank0
  3731  078B  00B4               	movwf	playAudio@startAddress+1
  3732  078C  0021               	movlb	1	; select bank1
  3733  078D  0862               	movf	(_start_addresses^(0+128)+66),w
  3734  078E  0020               	movlb	0	; select bank0
  3735  078F  00B3               	movwf	playAudio@startAddress
  3736  0790  0022               	movlb	2	; select bank2
  3737  0791  0863               	movf	((_end_addresses+1)^(0+256)+66),w
  3738  0792  0020               	movlb	0	; select bank0
  3739  0793  00B6               	movwf	playAudio@endAddress+1
  3740  0794  0022               	movlb	2	; select bank2
  3741  0795  0862               	movf	(_end_addresses^(0+256)+66),w
  3742  0796  0020               	movlb	0	; select bank0
  3743  0797  00B5               	movwf	playAudio@endAddress
  3744  0798  3180  20AC         	fcall	_playAudio
  3745                           
  3746                           ;Lab3_Main.c: 261:         } else if (minute == 1) {
  3747  079A  0008               	return
  3748  079B                     l1783:	
  3749  079B  0337               	decf	playMinute@minute,w
  3750  079C  0438               	iorwf	playMinute@minute+1,w
  3751  079D  1D03               	btfss	3,2
  3752  079E  0008               	return
  3753                           
  3754                           ;Lab3_Main.c: 262:             playAudio(start_addresses[15], end_addresses[15]);
  3755  079F  0021               	movlb	1	; select bank1
  3756  07A0  083F               	movf	((_start_addresses+1)^(0+128)+30),w
  3757  07A1  0020               	movlb	0	; select bank0
  3758  07A2  00B4               	movwf	playAudio@startAddress+1
  3759  07A3  0021               	movlb	1	; select bank1
  3760  07A4  083E               	movf	(_start_addresses^(0+128)+30),w
  3761  07A5  0020               	movlb	0	; select bank0
  3762  07A6  00B3               	movwf	playAudio@startAddress
  3763  07A7  0022               	movlb	2	; select bank2
  3764  07A8  083F               	movf	((_end_addresses+1)^(0+256)+30),w
  3765  07A9  0020               	movlb	0	; select bank0
  3766  07AA  00B6               	movwf	playAudio@endAddress+1
  3767  07AB  0022               	movlb	2	; select bank2
  3768  07AC  083E               	movf	(_end_addresses^(0+256)+30),w
  3769  07AD  0020               	movlb	0	; select bank0
  3770  07AE  00B5               	movwf	playAudio@endAddress
  3771  07AF  3180  20AC         	fcall	_playAudio
  3772  07B1  0008               	return
  3773  07B2                     __end_of_playMinute:	
  3774                           
  3775                           	psect	text4
  3776  0199                     __ptext4:	
  3777 ;; *************** function ___awdiv *****************
  3778 ;; Defined at:
  3779 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  divisor         2    0[COMMON] int 
  3782 ;;  dividend        2    2[COMMON] int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  quotient        2    7[COMMON] int 
  3785 ;;  sign            1    6[COMMON] unsigned char 
  3786 ;;  counter         1    5[COMMON] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2    0[COMMON] int 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        9 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_playMinute10
  3806 ;;		_playMinute
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function ___awdiv
  3812  0199                     ___awdiv:	
  3813                           
  3814                           ;incstack = 0
  3815                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3816  0199  01F6               	clrf	___awdiv@sign
  3817  019A  1FF1               	btfss	___awdiv@divisor+1,7
  3818  019B  29A3               	goto	l1549
  3819  019C  09F0               	comf	___awdiv@divisor,f
  3820  019D  09F1               	comf	___awdiv@divisor+1,f
  3821  019E  0AF0               	incf	___awdiv@divisor,f
  3822  019F  1903               	skipnz
  3823  01A0  0AF1               	incf	___awdiv@divisor+1,f
  3824  01A1  01F6               	clrf	___awdiv@sign
  3825  01A2  0AF6               	incf	___awdiv@sign,f
  3826  01A3                     l1549:	
  3827  01A3  1FF3               	btfss	___awdiv@dividend+1,7
  3828  01A4  29AE               	goto	l1555
  3829  01A5  09F2               	comf	___awdiv@dividend,f
  3830  01A6  09F3               	comf	___awdiv@dividend+1,f
  3831  01A7  0AF2               	incf	___awdiv@dividend,f
  3832  01A8  1903               	skipnz
  3833  01A9  0AF3               	incf	___awdiv@dividend+1,f
  3834  01AA  3001               	movlw	1
  3835  01AB  00F4               	movwf	??___awdiv
  3836  01AC  0874               	movf	??___awdiv,w
  3837  01AD  06F6               	xorwf	___awdiv@sign,f
  3838  01AE                     l1555:	
  3839  01AE  01F7               	clrf	___awdiv@quotient
  3840  01AF  01F8               	clrf	___awdiv@quotient+1
  3841  01B0  0870               	movf	___awdiv@divisor,w
  3842  01B1  0471               	iorwf	___awdiv@divisor+1,w
  3843  01B2  1903               	btfsc	3,2
  3844  01B3  29DD               	goto	l1577
  3845  01B4  01F5               	clrf	___awdiv@counter
  3846  01B5  0AF5               	incf	___awdiv@counter,f
  3847  01B6                     l1565:	
  3848  01B6  1BF1               	btfsc	___awdiv@divisor+1,7
  3849  01B7  29C2               	goto	l1567
  3850  01B8  3001               	movlw	1
  3851  01B9                     u995:	
  3852  01B9  35F0               	lslf	___awdiv@divisor,f
  3853  01BA  0DF1               	rlf	___awdiv@divisor+1,f
  3854  01BB  0B89               	decfsz	9,f
  3855  01BC  29B9               	goto	u995
  3856  01BD  3001               	movlw	1
  3857  01BE  00F4               	movwf	??___awdiv
  3858  01BF  0874               	movf	??___awdiv,w
  3859  01C0  07F5               	addwf	___awdiv@counter,f
  3860  01C1  29B6               	goto	l1565
  3861  01C2                     l1567:	
  3862  01C2  3001               	movlw	1
  3863  01C3                     u1015:	
  3864  01C3  35F7               	lslf	___awdiv@quotient,f
  3865  01C4  0DF8               	rlf	___awdiv@quotient+1,f
  3866  01C5  0B89               	decfsz	9,f
  3867  01C6  29C3               	goto	u1015
  3868  01C7  0871               	movf	___awdiv@divisor+1,w
  3869  01C8  0273               	subwf	___awdiv@dividend+1,w
  3870  01C9  1D03               	skipz
  3871  01CA  29CD               	goto	u1025
  3872  01CB  0870               	movf	___awdiv@divisor,w
  3873  01CC  0272               	subwf	___awdiv@dividend,w
  3874  01CD                     u1025:	
  3875  01CD  1C03               	skipc
  3876  01CE  29D4               	goto	l1573
  3877  01CF  0870               	movf	___awdiv@divisor,w
  3878  01D0  02F2               	subwf	___awdiv@dividend,f
  3879  01D1  0871               	movf	___awdiv@divisor+1,w
  3880  01D2  3BF3               	subwfb	___awdiv@dividend+1,f
  3881  01D3  1477               	bsf	___awdiv@quotient,0
  3882  01D4                     l1573:	
  3883  01D4  3001               	movlw	1
  3884  01D5                     u1035:	
  3885  01D5  36F1               	lsrf	___awdiv@divisor+1,f
  3886  01D6  0CF0               	rrf	___awdiv@divisor,f
  3887  01D7  0B89               	decfsz	9,f
  3888  01D8  29D5               	goto	u1035
  3889  01D9  3001               	movlw	1
  3890  01DA  02F5               	subwf	___awdiv@counter,f
  3891  01DB  1D03               	btfss	3,2
  3892  01DC  29C2               	goto	l1567
  3893  01DD                     l1577:	
  3894  01DD  0876               	movf	___awdiv@sign,w
  3895  01DE  1903               	btfsc	3,2
  3896  01DF  29E5               	goto	l1581
  3897  01E0  09F7               	comf	___awdiv@quotient,f
  3898  01E1  09F8               	comf	___awdiv@quotient+1,f
  3899  01E2  0AF7               	incf	___awdiv@quotient,f
  3900  01E3  1903               	skipnz
  3901  01E4  0AF8               	incf	___awdiv@quotient+1,f
  3902  01E5                     l1581:	
  3903  01E5  0878               	movf	___awdiv@quotient+1,w
  3904  01E6  00F1               	movwf	?___awdiv+1
  3905  01E7  0877               	movf	___awdiv@quotient,w
  3906  01E8  00F0               	movwf	?___awdiv
  3907  01E9  0008               	return
  3908  01EA                     __end_of___awdiv:	
  3909                           
  3910                           	psect	text5
  3911  04C1                     __ptext5:	
  3912 ;; *************** function _playHour *****************
  3913 ;; Defined at:
  3914 ;;		line 177 in file "Lab3_Main.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  hour            2    4[BANK0 ] short 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    4
  3935 ;; This function calls:
  3936 ;;		_playAudio
  3937 ;; This function is called by:
  3938 ;;		_readTime
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _playHour
  3944  04C1                     _playHour:	
  3945                           
  3946                           ;Lab3_Main.c: 178:         if (hour == 0) {
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _playHour: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3950  04C1  0020               	movlb	0	; select bank0
  3951  04C2  0837               	movf	playHour@hour,w
  3952  04C3  0438               	iorwf	playHour@hour+1,w
  3953  04C4  1D03               	btfss	3,2
  3954  04C5  2CD9               	goto	l1645
  3955                           
  3956                           ;Lab3_Main.c: 179:             playAudio(start_addresses[31], end_addresses[31]);
  3957  04C6  0021               	movlb	1	; select bank1
  3958  04C7  085F               	movf	((_start_addresses+1)^(0+128)+62),w
  3959  04C8  0020               	movlb	0	; select bank0
  3960  04C9  00B4               	movwf	playAudio@startAddress+1
  3961  04CA  0021               	movlb	1	; select bank1
  3962  04CB  085E               	movf	(_start_addresses^(0+128)+62),w
  3963  04CC  0020               	movlb	0	; select bank0
  3964  04CD  00B3               	movwf	playAudio@startAddress
  3965  04CE  0022               	movlb	2	; select bank2
  3966  04CF  085F               	movf	((_end_addresses+1)^(0+256)+62),w
  3967  04D0  0020               	movlb	0	; select bank0
  3968  04D1  00B6               	movwf	playAudio@endAddress+1
  3969  04D2  0022               	movlb	2	; select bank2
  3970  04D3  085E               	movf	(_end_addresses^(0+256)+62),w
  3971  04D4  0020               	movlb	0	; select bank0
  3972  04D5  00B5               	movwf	playAudio@endAddress
  3973  04D6  3180  20AC         	fcall	_playAudio
  3974                           
  3975                           ;Lab3_Main.c: 180:         } else if (hour == 11) {
  3976  04D8  0008               	return
  3977  04D9                     l1645:	
  3978  04D9  300B               	movlw	11
  3979  04DA  0637               	xorwf	playHour@hour,w
  3980  04DB  0438               	iorwf	playHour@hour+1,w
  3981  04DC  1D03               	btfss	3,2
  3982  04DD  2CF1               	goto	l1649
  3983                           
  3984                           ;Lab3_Main.c: 181:             playAudio(start_addresses[3], end_addresses[3]);
  3985  04DE  0021               	movlb	1	; select bank1
  3986  04DF  0827               	movf	((_start_addresses+1)^(0+128)+6),w
  3987  04E0  0020               	movlb	0	; select bank0
  3988  04E1  00B4               	movwf	playAudio@startAddress+1
  3989  04E2  0021               	movlb	1	; select bank1
  3990  04E3  0826               	movf	(_start_addresses^(0+128)+6),w
  3991  04E4  0020               	movlb	0	; select bank0
  3992  04E5  00B3               	movwf	playAudio@startAddress
  3993  04E6  0022               	movlb	2	; select bank2
  3994  04E7  0827               	movf	((_end_addresses+1)^(0+256)+6),w
  3995  04E8  0020               	movlb	0	; select bank0
  3996  04E9  00B6               	movwf	playAudio@endAddress+1
  3997  04EA  0022               	movlb	2	; select bank2
  3998  04EB  0826               	movf	(_end_addresses^(0+256)+6),w
  3999  04EC  0020               	movlb	0	; select bank0
  4000  04ED  00B5               	movwf	playAudio@endAddress
  4001  04EE  3180  20AC         	fcall	_playAudio
  4002                           
  4003                           ;Lab3_Main.c: 182:         } else if (hour == 10) {
  4004  04F0  0008               	return
  4005  04F1                     l1649:	
  4006  04F1  300A               	movlw	10
  4007  04F2  0637               	xorwf	playHour@hour,w
  4008  04F3  0438               	iorwf	playHour@hour+1,w
  4009  04F4  1D03               	btfss	3,2
  4010  04F5  2D09               	goto	l1653
  4011                           
  4012                           ;Lab3_Main.c: 183:             playAudio(start_addresses[27], end_addresses[27]);
  4013  04F6  0021               	movlb	1	; select bank1
  4014  04F7  0857               	movf	((_start_addresses+1)^(0+128)+54),w
  4015  04F8  0020               	movlb	0	; select bank0
  4016  04F9  00B4               	movwf	playAudio@startAddress+1
  4017  04FA  0021               	movlb	1	; select bank1
  4018  04FB  0856               	movf	(_start_addresses^(0+128)+54),w
  4019  04FC  0020               	movlb	0	; select bank0
  4020  04FD  00B3               	movwf	playAudio@startAddress
  4021  04FE  0022               	movlb	2	; select bank2
  4022  04FF  0857               	movf	((_end_addresses+1)^(0+256)+54),w
  4023  0500  0020               	movlb	0	; select bank0
  4024  0501  00B6               	movwf	playAudio@endAddress+1
  4025  0502  0022               	movlb	2	; select bank2
  4026  0503  0856               	movf	(_end_addresses^(0+256)+54),w
  4027  0504  0020               	movlb	0	; select bank0
  4028  0505  00B5               	movwf	playAudio@endAddress
  4029  0506  3180  20AC         	fcall	_playAudio
  4030                           
  4031                           ;Lab3_Main.c: 184:         } else if (hour == 9) {
  4032  0508  0008               	return
  4033  0509                     l1653:	
  4034  0509  3009               	movlw	9
  4035  050A  0637               	xorwf	playHour@hour,w
  4036  050B  0438               	iorwf	playHour@hour+1,w
  4037  050C  1D03               	btfss	3,2
  4038  050D  2D21               	goto	l1657
  4039                           
  4040                           ;Lab3_Main.c: 185:             playAudio(start_addresses[10], end_addresses[10]);
  4041  050E  0021               	movlb	1	; select bank1
  4042  050F  0835               	movf	((_start_addresses+1)^(0+128)+20),w
  4043  0510  0020               	movlb	0	; select bank0
  4044  0511  00B4               	movwf	playAudio@startAddress+1
  4045  0512  0021               	movlb	1	; select bank1
  4046  0513  0834               	movf	(_start_addresses^(0+128)+20),w
  4047  0514  0020               	movlb	0	; select bank0
  4048  0515  00B3               	movwf	playAudio@startAddress
  4049  0516  0022               	movlb	2	; select bank2
  4050  0517  0835               	movf	((_end_addresses+1)^(0+256)+20),w
  4051  0518  0020               	movlb	0	; select bank0
  4052  0519  00B6               	movwf	playAudio@endAddress+1
  4053  051A  0022               	movlb	2	; select bank2
  4054  051B  0834               	movf	(_end_addresses^(0+256)+20),w
  4055  051C  0020               	movlb	0	; select bank0
  4056  051D  00B5               	movwf	playAudio@endAddress
  4057  051E  3180  20AC         	fcall	_playAudio
  4058                           
  4059                           ;Lab3_Main.c: 186:         } else if (hour == 8) {
  4060  0520  0008               	return
  4061  0521                     l1657:	
  4062  0521  3008               	movlw	8
  4063  0522  0637               	xorwf	playHour@hour,w
  4064  0523  0438               	iorwf	playHour@hour+1,w
  4065  0524  1D03               	btfss	3,2
  4066  0525  2D39               	goto	l1661
  4067                           
  4068                           ;Lab3_Main.c: 187:             playAudio(start_addresses[1], end_addresses[1]);
  4069  0526  0021               	movlb	1	; select bank1
  4070  0527  0823               	movf	((_start_addresses+1)^(0+128)+2),w
  4071  0528  0020               	movlb	0	; select bank0
  4072  0529  00B4               	movwf	playAudio@startAddress+1
  4073  052A  0021               	movlb	1	; select bank1
  4074  052B  0822               	movf	(_start_addresses^(0+128)+2),w
  4075  052C  0020               	movlb	0	; select bank0
  4076  052D  00B3               	movwf	playAudio@startAddress
  4077  052E  0022               	movlb	2	; select bank2
  4078  052F  0823               	movf	((_end_addresses+1)^(0+256)+2),w
  4079  0530  0020               	movlb	0	; select bank0
  4080  0531  00B6               	movwf	playAudio@endAddress+1
  4081  0532  0022               	movlb	2	; select bank2
  4082  0533  0822               	movf	(_end_addresses^(0+256)+2),w
  4083  0534  0020               	movlb	0	; select bank0
  4084  0535  00B5               	movwf	playAudio@endAddress
  4085  0536  3180  20AC         	fcall	_playAudio
  4086                           
  4087                           ;Lab3_Main.c: 188:         } else if (hour == 7) {
  4088  0538  0008               	return
  4089  0539                     l1661:	
  4090  0539  3007               	movlw	7
  4091  053A  0637               	xorwf	playHour@hour,w
  4092  053B  0438               	iorwf	playHour@hour+1,w
  4093  053C  1D03               	btfss	3,2
  4094  053D  2D51               	goto	l1665
  4095                           
  4096                           ;Lab3_Main.c: 189:             playAudio(start_addresses[23], end_addresses[23]);
  4097  053E  0021               	movlb	1	; select bank1
  4098  053F  084F               	movf	((_start_addresses+1)^(0+128)+46),w
  4099  0540  0020               	movlb	0	; select bank0
  4100  0541  00B4               	movwf	playAudio@startAddress+1
  4101  0542  0021               	movlb	1	; select bank1
  4102  0543  084E               	movf	(_start_addresses^(0+128)+46),w
  4103  0544  0020               	movlb	0	; select bank0
  4104  0545  00B3               	movwf	playAudio@startAddress
  4105  0546  0022               	movlb	2	; select bank2
  4106  0547  084F               	movf	((_end_addresses+1)^(0+256)+46),w
  4107  0548  0020               	movlb	0	; select bank0
  4108  0549  00B6               	movwf	playAudio@endAddress+1
  4109  054A  0022               	movlb	2	; select bank2
  4110  054B  084E               	movf	(_end_addresses^(0+256)+46),w
  4111  054C  0020               	movlb	0	; select bank0
  4112  054D  00B5               	movwf	playAudio@endAddress
  4113  054E  3180  20AC         	fcall	_playAudio
  4114                           
  4115                           ;Lab3_Main.c: 190:         } else if (hour == 6) {
  4116  0550  0008               	return
  4117  0551                     l1665:	
  4118  0551  3006               	movlw	6
  4119  0552  0637               	xorwf	playHour@hour,w
  4120  0553  0438               	iorwf	playHour@hour+1,w
  4121  0554  1D03               	btfss	3,2
  4122  0555  2D69               	goto	l1669
  4123                           
  4124                           ;Lab3_Main.c: 191:             playAudio(start_addresses[25], end_addresses[25]);
  4125  0556  0021               	movlb	1	; select bank1
  4126  0557  0853               	movf	((_start_addresses+1)^(0+128)+50),w
  4127  0558  0020               	movlb	0	; select bank0
  4128  0559  00B4               	movwf	playAudio@startAddress+1
  4129  055A  0021               	movlb	1	; select bank1
  4130  055B  0852               	movf	(_start_addresses^(0+128)+50),w
  4131  055C  0020               	movlb	0	; select bank0
  4132  055D  00B3               	movwf	playAudio@startAddress
  4133  055E  0022               	movlb	2	; select bank2
  4134  055F  0853               	movf	((_end_addresses+1)^(0+256)+50),w
  4135  0560  0020               	movlb	0	; select bank0
  4136  0561  00B6               	movwf	playAudio@endAddress+1
  4137  0562  0022               	movlb	2	; select bank2
  4138  0563  0852               	movf	(_end_addresses^(0+256)+50),w
  4139  0564  0020               	movlb	0	; select bank0
  4140  0565  00B5               	movwf	playAudio@endAddress
  4141  0566  3180  20AC         	fcall	_playAudio
  4142                           
  4143                           ;Lab3_Main.c: 192:         } else if (hour == 5) {
  4144  0568  0008               	return
  4145  0569                     l1669:	
  4146  0569  3005               	movlw	5
  4147  056A  0637               	xorwf	playHour@hour,w
  4148  056B  0438               	iorwf	playHour@hour+1,w
  4149  056C  1D03               	btfss	3,2
  4150  056D  2D81               	goto	l1673
  4151                           
  4152                           ;Lab3_Main.c: 193:             playAudio(start_addresses[6], end_addresses[6]);
  4153  056E  0021               	movlb	1	; select bank1
  4154  056F  082D               	movf	((_start_addresses+1)^(0+128)+12),w
  4155  0570  0020               	movlb	0	; select bank0
  4156  0571  00B4               	movwf	playAudio@startAddress+1
  4157  0572  0021               	movlb	1	; select bank1
  4158  0573  082C               	movf	(_start_addresses^(0+128)+12),w
  4159  0574  0020               	movlb	0	; select bank0
  4160  0575  00B3               	movwf	playAudio@startAddress
  4161  0576  0022               	movlb	2	; select bank2
  4162  0577  082D               	movf	((_end_addresses+1)^(0+256)+12),w
  4163  0578  0020               	movlb	0	; select bank0
  4164  0579  00B6               	movwf	playAudio@endAddress+1
  4165  057A  0022               	movlb	2	; select bank2
  4166  057B  082C               	movf	(_end_addresses^(0+256)+12),w
  4167  057C  0020               	movlb	0	; select bank0
  4168  057D  00B5               	movwf	playAudio@endAddress
  4169  057E  3180  20AC         	fcall	_playAudio
  4170                           
  4171                           ;Lab3_Main.c: 194:         } else if (hour == 4) {
  4172  0580  0008               	return
  4173  0581                     l1673:	
  4174  0581  3004               	movlw	4
  4175  0582  0637               	xorwf	playHour@hour,w
  4176  0583  0438               	iorwf	playHour@hour+1,w
  4177  0584  1D03               	btfss	3,2
  4178  0585  2D99               	goto	l1677
  4179                           
  4180                           ;Lab3_Main.c: 195:             playAudio(start_addresses[7], end_addresses[7]);
  4181  0586  0021               	movlb	1	; select bank1
  4182  0587  082F               	movf	((_start_addresses+1)^(0+128)+14),w
  4183  0588  0020               	movlb	0	; select bank0
  4184  0589  00B4               	movwf	playAudio@startAddress+1
  4185  058A  0021               	movlb	1	; select bank1
  4186  058B  082E               	movf	(_start_addresses^(0+128)+14),w
  4187  058C  0020               	movlb	0	; select bank0
  4188  058D  00B3               	movwf	playAudio@startAddress
  4189  058E  0022               	movlb	2	; select bank2
  4190  058F  082F               	movf	((_end_addresses+1)^(0+256)+14),w
  4191  0590  0020               	movlb	0	; select bank0
  4192  0591  00B6               	movwf	playAudio@endAddress+1
  4193  0592  0022               	movlb	2	; select bank2
  4194  0593  082E               	movf	(_end_addresses^(0+256)+14),w
  4195  0594  0020               	movlb	0	; select bank0
  4196  0595  00B5               	movwf	playAudio@endAddress
  4197  0596  3180  20AC         	fcall	_playAudio
  4198                           
  4199                           ;Lab3_Main.c: 196:         } else if (hour == 3) {
  4200  0598  0008               	return
  4201  0599                     l1677:	
  4202  0599  3003               	movlw	3
  4203  059A  0637               	xorwf	playHour@hour,w
  4204  059B  0438               	iorwf	playHour@hour+1,w
  4205  059C  1D03               	btfss	3,2
  4206  059D  2DB1               	goto	l1681
  4207                           
  4208                           ;Lab3_Main.c: 197:             playAudio(start_addresses[30], end_addresses[30]);
  4209  059E  0021               	movlb	1	; select bank1
  4210  059F  085D               	movf	((_start_addresses+1)^(0+128)+60),w
  4211  05A0  0020               	movlb	0	; select bank0
  4212  05A1  00B4               	movwf	playAudio@startAddress+1
  4213  05A2  0021               	movlb	1	; select bank1
  4214  05A3  085C               	movf	(_start_addresses^(0+128)+60),w
  4215  05A4  0020               	movlb	0	; select bank0
  4216  05A5  00B3               	movwf	playAudio@startAddress
  4217  05A6  0022               	movlb	2	; select bank2
  4218  05A7  085D               	movf	((_end_addresses+1)^(0+256)+60),w
  4219  05A8  0020               	movlb	0	; select bank0
  4220  05A9  00B6               	movwf	playAudio@endAddress+1
  4221  05AA  0022               	movlb	2	; select bank2
  4222  05AB  085C               	movf	(_end_addresses^(0+256)+60),w
  4223  05AC  0020               	movlb	0	; select bank0
  4224  05AD  00B5               	movwf	playAudio@endAddress
  4225  05AE  3180  20AC         	fcall	_playAudio
  4226                           
  4227                           ;Lab3_Main.c: 198:         } else if (hour == 2) {
  4228  05B0  0008               	return
  4229  05B1                     l1681:	
  4230  05B1  3002               	movlw	2
  4231  05B2  0637               	xorwf	playHour@hour,w
  4232  05B3  0438               	iorwf	playHour@hour+1,w
  4233  05B4  1D03               	btfss	3,2
  4234  05B5  2DC9               	goto	l1685
  4235                           
  4236                           ;Lab3_Main.c: 199:             playAudio(start_addresses[33], end_addresses[33]);
  4237  05B6  0021               	movlb	1	; select bank1
  4238  05B7  0863               	movf	((_start_addresses+1)^(0+128)+66),w
  4239  05B8  0020               	movlb	0	; select bank0
  4240  05B9  00B4               	movwf	playAudio@startAddress+1
  4241  05BA  0021               	movlb	1	; select bank1
  4242  05BB  0862               	movf	(_start_addresses^(0+128)+66),w
  4243  05BC  0020               	movlb	0	; select bank0
  4244  05BD  00B3               	movwf	playAudio@startAddress
  4245  05BE  0022               	movlb	2	; select bank2
  4246  05BF  0863               	movf	((_end_addresses+1)^(0+256)+66),w
  4247  05C0  0020               	movlb	0	; select bank0
  4248  05C1  00B6               	movwf	playAudio@endAddress+1
  4249  05C2  0022               	movlb	2	; select bank2
  4250  05C3  0862               	movf	(_end_addresses^(0+256)+66),w
  4251  05C4  0020               	movlb	0	; select bank0
  4252  05C5  00B5               	movwf	playAudio@endAddress
  4253  05C6  3180  20AC         	fcall	_playAudio
  4254                           
  4255                           ;Lab3_Main.c: 200:         } else if (hour == 1) {
  4256  05C8  0008               	return
  4257  05C9                     l1685:	
  4258  05C9  0337               	decf	playHour@hour,w
  4259  05CA  0438               	iorwf	playHour@hour+1,w
  4260  05CB  1D03               	btfss	3,2
  4261  05CC  0008               	return
  4262                           
  4263                           ;Lab3_Main.c: 201:             playAudio(start_addresses[15], end_addresses[15]);
  4264  05CD  0021               	movlb	1	; select bank1
  4265  05CE  083F               	movf	((_start_addresses+1)^(0+128)+30),w
  4266  05CF  0020               	movlb	0	; select bank0
  4267  05D0  00B4               	movwf	playAudio@startAddress+1
  4268  05D1  0021               	movlb	1	; select bank1
  4269  05D2  083E               	movf	(_start_addresses^(0+128)+30),w
  4270  05D3  0020               	movlb	0	; select bank0
  4271  05D4  00B3               	movwf	playAudio@startAddress
  4272  05D5  0022               	movlb	2	; select bank2
  4273  05D6  083F               	movf	((_end_addresses+1)^(0+256)+30),w
  4274  05D7  0020               	movlb	0	; select bank0
  4275  05D8  00B6               	movwf	playAudio@endAddress+1
  4276  05D9  0022               	movlb	2	; select bank2
  4277  05DA  083E               	movf	(_end_addresses^(0+256)+30),w
  4278  05DB  0020               	movlb	0	; select bank0
  4279  05DC  00B5               	movwf	playAudio@endAddress
  4280  05DD  3180  20AC         	fcall	_playAudio
  4281  05DF  0008               	return
  4282  05E0                     __end_of_playHour:	
  4283                           
  4284                           	psect	text6
  4285  00AC                     __ptext6:	
  4286 ;; *************** function _playAudio *****************
  4287 ;; Defined at:
  4288 ;;		line 108 in file "Lab3_Main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  startAddress    2    0[BANK0 ] short 
  4291 ;;  endAddress      2    2[BANK0 ] short 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4306 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4307 ;;Total ram usage:        5 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    3
  4310 ;; This function calls:
  4311 ;;		_active
  4312 ;; This function is called by:
  4313 ;;		_readTime
  4314 ;;		_playHour
  4315 ;;		_playMinute10
  4316 ;;		_playMinute
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _playAudio
  4322  00AC                     _playAudio:	
  4323                           
  4324                           ;Lab3_Main.c: 108: void playAudio(short startAddress, short endAddress);Lab3_Main.c: 109
      +                          : {;Lab3_Main.c: 110:     if (hasAddress == 0 && timeSaid)
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _playAudio: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4328  00AC  0020               	movlb	0	; select bank0
  4329  00AD  082E               	movf	_hasAddress,w
  4330  00AE  1D03               	btfss	3,2
  4331  00AF  28C1               	goto	l1535
  4332  00B0  082D               	movf	_timeSaid,w
  4333  00B1  1903               	btfsc	3,2
  4334  00B2  28C1               	goto	l1535
  4335                           
  4336                           ;Lab3_Main.c: 111:     {;Lab3_Main.c: 112:     us_Address = startAddress;
  4337  00B3  0834               	movf	playAudio@startAddress+1,w
  4338  00B4  00B2               	movwf	_us_Address+1
  4339  00B5  0833               	movf	playAudio@startAddress,w
  4340  00B6  00B1               	movwf	_us_Address
  4341                           
  4342                           ;Lab3_Main.c: 113:     charPointer = (unsigned char *) &us_Address;
  4343  00B7  3031               	movlw	(low (_us_Address| 0))& (0+255)
  4344  00B8  00FB               	movwf	??_playAudio
  4345  00B9  087B               	movf	??_playAudio,w
  4346  00BA  00FD               	movwf	_charPointer
  4347                           
  4348                           ;Lab3_Main.c: 114:     us_EndAddress = endAddress;
  4349  00BB  0836               	movf	playAudio@endAddress+1,w
  4350  00BC  00A5               	movwf	_us_EndAddress+1
  4351  00BD  0835               	movf	playAudio@endAddress,w
  4352  00BE  00A4               	movwf	_us_EndAddress
  4353                           
  4354                           ;Lab3_Main.c: 115:     hasAddress = 1;
  4355  00BF  01AE               	clrf	_hasAddress
  4356  00C0  0AAE               	incf	_hasAddress,f
  4357  00C1                     l1535:	
  4358                           
  4359                           ;Lab3_Main.c: 117:     if (timeSaid) {
  4360  00C1  082D               	movf	_timeSaid,w
  4361  00C2  1903               	btfsc	3,2
  4362  00C3  0008               	return
  4363                           
  4364                           ;Lab3_Main.c: 118:          active();
  4365  00C4  3181  21EA         	fcall	_active
  4366  00C6  0008               	return
  4367  00C7                     __end_of_playAudio:	
  4368                           
  4369                           	psect	text7
  4370  01EA                     __ptext7:	
  4371 ;; *************** function _active *****************
  4372 ;; Defined at:
  4373 ;;		line 123 in file "Lab3_Main.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  readMessage     1   10[COMMON] unsigned char 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4391 ;;Total ram usage:        2 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    2
  4394 ;; This function calls:
  4395 ;;		_Lab3_DAQ
  4396 ;;		_SD_Read8bitResponse
  4397 ;;		_SD_SendCommand
  4398 ;;		_SPI_Read
  4399 ;; This function is called by:
  4400 ;;		_playAudio
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _active
  4406  01EA                     _active:	
  4407  01EA                     l1521:	
  4408                           ;Lab3_Main.c: 125:     while (us_Address != us_EndAddress) {
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _active: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4412                           
  4413                           
  4414                           ;Lab3_Main.c: 125:     while (us_Address != us_EndAddress) {
  4415  01EA  0020               	movlb	0	; select bank0
  4416  01EB  0825               	movf	_us_EndAddress+1,w
  4417  01EC  0632               	xorwf	_us_Address+1,w
  4418  01ED  1D03               	skipz
  4419  01EE  29F1               	goto	u925
  4420  01EF  0824               	movf	_us_EndAddress,w
  4421  01F0  0631               	xorwf	_us_Address,w
  4422  01F1                     u925:	
  4423  01F1  1903               	btfsc	3,2
  4424  01F2  2A3E               	goto	l1523
  4425                           
  4426                           ;Lab3_Main.c: 126:         if (sh_counter == 0) {
  4427  01F3  0826               	movf	_sh_counter,w
  4428  01F4  0427               	iorwf	_sh_counter+1,w
  4429  01F5  1D03               	btfss	3,2
  4430  01F6  2A15               	goto	l1505
  4431                           
  4432                           ;Lab3_Main.c: 128:             SD_SendCommand(17, 0x00, 0x00, charPointer[1], charPointe
      +                          r[0]);
  4433  01F7  01F1               	clrf	SD_SendCommand@ARG3
  4434  01F8  01F2               	clrf	SD_SendCommand@ARG2
  4435  01F9  087D               	movf	_charPointer,w
  4436  01FA  0086               	movwf	6
  4437  01FB  0187               	clrf	7
  4438  01FC  3F41               	moviw [1]fsr1
  4439  01FD  00F3               	movwf	SD_SendCommand@ARG1
  4440  01FE  087D               	movf	_charPointer,w
  4441  01FF  0086               	movwf	6
  4442  0200  0187               	clrf	7
  4443  0201  0801               	movf	1,w
  4444  0202  00F9               	movwf	??_active
  4445  0203  0879               	movf	??_active,w
  4446  0204  00F4               	movwf	SD_SendCommand@ARG0
  4447  0205  3011               	movlw	17
  4448  0206  3184  2428  3181   	fcall	_SD_SendCommand
  4449                           
  4450                           ;Lab3_Main.c: 129:             SD_Read8bitResponse();
  4451  0209  3180  2081  3181   	fcall	_SD_Read8bitResponse
  4452  020C                     l1501:	
  4453  020C  3180  203C  3181   	fcall	_SPI_Read
  4454  020F  00F9               	movwf	??_active
  4455  0210  0879               	movf	??_active,w
  4456  0211  00FA               	movwf	active@readMessage
  4457  0212  0A7A               	incf	active@readMessage,w
  4458  0213  1903               	btfsc	3,2
  4459  0214  2A0C               	goto	l1501
  4460  0215                     l1505:	
  4461                           
  4462                           ;Lab3_Main.c: 134:         ch_sendbyte = SPI_Read();
  4463  0215  3180  203C  3181   	fcall	_SPI_Read
  4464  0218  00F9               	movwf	??_active
  4465  0219  0879               	movf	??_active,w
  4466  021A  0020               	movlb	0	; select bank0
  4467  021B  00AF               	movwf	_ch_sendbyte
  4468                           
  4469                           ;Lab3_Main.c: 135:         Lab3_DAQ(ch_sendbyte);
  4470  021C  082F               	movf	_ch_sendbyte,w
  4471  021D  3180  205E  3181   	fcall	_Lab3_DAQ
  4472                           
  4473                           ;Lab3_Main.c: 136:         sh_counter++;
  4474  0220  3001               	movlw	1
  4475  0221  0020               	movlb	0	; select bank0
  4476  0222  07A6               	addwf	_sh_counter,f
  4477  0223  3000               	movlw	0
  4478  0224  3DA7               	addwfc	_sh_counter+1,f
  4479                           
  4480                           ;Lab3_Main.c: 138:         if (sh_counter==512) {
  4481  0225  3002               	movlw	2
  4482  0226  0627               	xorwf	_sh_counter+1,w
  4483  0227  0426               	iorwf	_sh_counter,w
  4484  0228  1D03               	btfss	3,2
  4485  0229  2A39               	goto	l245
  4486                           
  4487                           ;Lab3_Main.c: 139:          us_Address++;
  4488  022A  3001               	movlw	1
  4489  022B  07B1               	addwf	_us_Address,f
  4490  022C  3000               	movlw	0
  4491  022D  3DB2               	addwfc	_us_Address+1,f
  4492                           
  4493                           ;Lab3_Main.c: 140:          sh_counter = 0;
  4494  022E  01A6               	clrf	_sh_counter
  4495  022F  01A7               	clrf	_sh_counter+1
  4496                           
  4497                           ;Lab3_Main.c: 141:          SPI_Read();
  4498  0230  3180  203C  3181   	fcall	_SPI_Read
  4499                           
  4500                           ;Lab3_Main.c: 142:          SPI_Read();
  4501  0233  3180  203C  3181   	fcall	_SPI_Read
  4502                           
  4503                           ;Lab3_Main.c: 143:          SPI_Read();
  4504  0236  3180  203C  3181   	fcall	_SPI_Read
  4505  0239                     l245:	
  4506  0239  0020               	movlb	0	; select bank0
  4507  023A  1C91               	btfss	17,1	;volatile
  4508  023B  2A39               	goto	l245
  4509                           
  4510                           ;Lab3_Main.c: 147:         PIR1bits.TMR2IF = 0;
  4511  023C  1091               	bcf	17,1	;volatile
  4512  023D  29EA               	goto	l1521
  4513  023E                     l1523:	
  4514                           
  4515                           ;Lab3_Main.c: 150:     hasAddress = 0;
  4516  023E  01AE               	clrf	_hasAddress
  4517  023F  0008               	return
  4518  0240                     __end_of_active:	
  4519                           
  4520                           	psect	text8
  4521  005E                     __ptext8:	
  4522 ;; *************** function _Lab3_DAQ *****************
  4523 ;; Defined at:
  4524 ;;		line 268 in file "Lab3_Main.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  writevalue      1    wreg     unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  writevalue      1    2[COMMON] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        3 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_active
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _Lab3_DAQ
  4553  005E                     _Lab3_DAQ:	
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _Lab3_DAQ: [wreg]
  4557                           ;Lab3_DAQ@writevalue stored from wreg
  4558  005E  00F2               	movwf	Lab3_DAQ@writevalue
  4559                           
  4560                           ;Lab3_Main.c: 269:   DAC1REF= writevalue;
  4561  005F  0872               	movf	Lab3_DAQ@writevalue,w
  4562  0060  00F0               	movwf	??_Lab3_DAQ
  4563  0061  01F1               	clrf	??_Lab3_DAQ+1
  4564  0062  0870               	movf	??_Lab3_DAQ,w
  4565  0063  002B               	movlb	11	; select bank11
  4566  0064  008F               	movwf	15	;volatile
  4567  0065  0871               	movf	??_Lab3_DAQ+1,w
  4568  0066  0090               	movwf	16	;volatile
  4569                           
  4570                           ;Lab3_Main.c: 271:    DAC1LD = 1;
  4571  0067  140D               	bsf	13,0	;volatile
  4572  0068  0008               	return
  4573  0069                     __end_of_Lab3_DAQ:	
  4574                           
  4575                           	psect	text9
  4576  00C7                     __ptext9:	
  4577 ;; *************** function _SPI_Init *****************
  4578 ;; Defined at:
  4579 ;;		line 7 in file "Lab3_SPI.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_main
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function _SPI_Init
  4608  00C7                     _SPI_Init:	
  4609                           
  4610                           ;Lab3_SPI.c: 10:     TRISC2 = 0;
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in _SPI_Init: [wreg+status,2]
  4614  00C7  0021               	movlb	1	; select bank1
  4615  00C8  110E               	bcf	14,2	;volatile
  4616                           
  4617                           ;Lab3_SPI.c: 11:     RC2PPS = 0x21;
  4618  00C9  3021               	movlw	33
  4619  00CA  003D               	movlb	29	; select bank29
  4620  00CB  00A2               	movwf	34	;volatile
  4621                           
  4622                           ;Lab3_SPI.c: 12:     SSPCLKPPS = 0x12;
  4623  00CC  3012               	movlw	18
  4624  00CD  003C               	movlb	28	; select bank28
  4625  00CE  00BA               	movwf	58	;volatile
  4626                           
  4627                           ;Lab3_SPI.c: 15:     TRISC3 = 1;
  4628  00CF  0021               	movlb	1	; select bank1
  4629  00D0  158E               	bsf	14,3	;volatile
  4630                           
  4631                           ;Lab3_SPI.c: 16:     ANSC3 = 0;
  4632  00D1  0023               	movlb	3	; select bank3
  4633  00D2  118E               	bcf	14,3	;volatile
  4634                           
  4635                           ;Lab3_SPI.c: 17:     SSPDATPPS = 0x13;
  4636  00D3  3013               	movlw	19
  4637  00D4  003C               	movlb	28	; select bank28
  4638  00D5  00BB               	movwf	59	;volatile
  4639                           
  4640                           ;Lab3_SPI.c: 20:     TRISC4 = 0;
  4641  00D6  0021               	movlb	1	; select bank1
  4642  00D7  120E               	bcf	14,4	;volatile
  4643                           
  4644                           ;Lab3_SPI.c: 21:     RC4PPS = 0x23;
  4645  00D8  3023               	movlw	35
  4646  00D9  003D               	movlb	29	; select bank29
  4647  00DA  00A4               	movwf	36	;volatile
  4648                           
  4649                           ;Lab3_SPI.c: 24:     TRISC7 = 0;
  4650  00DB  0021               	movlb	1	; select bank1
  4651  00DC  138E               	bcf	14,7	;volatile
  4652                           
  4653                           ;Lab3_SPI.c: 27:     SSP1STAT = 0x80;
  4654  00DD  3080               	movlw	128
  4655  00DE  0024               	movlb	4	; select bank4
  4656  00DF  0094               	movwf	20	;volatile
  4657                           
  4658                           ;Lab3_SPI.c: 30:     SSP1CON1 = 0x30;
  4659  00E0  3030               	movlw	48
  4660  00E1  0095               	movwf	21	;volatile
  4661                           
  4662                           ;Lab3_SPI.c: 33:     SSP1ADD = 0x00;
  4663  00E2  0192               	clrf	18	;volatile
  4664  00E3  0008               	return
  4665  00E4                     __end_of_SPI_Init:	
  4666                           
  4667                           	psect	text10
  4668  030C                     __ptext10:	
  4669 ;; *************** function _SD_Init *****************
  4670 ;; Defined at:
  4671 ;;		line 11 in file "Lab3_SD.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4689 ;;Total ram usage:        1 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    2
  4692 ;; This function calls:
  4693 ;;		_SD_Check40bitResponse
  4694 ;;		_SD_Check8bitResponse
  4695 ;;		_SD_Read40bitResponse
  4696 ;;		_SD_Read8bitResponse
  4697 ;;		_SD_SendCommand
  4698 ;;		_SPI_Write
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _SD_Init
  4706  030C                     _SD_Init:	
  4707                           
  4708                           ;Lab3_SD.c: 15:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4712  030C  0020               	movlb	0	; select bank0
  4713  030D  178E               	bsf	14,7	;volatile
  4714  030E  0024               	movlb	4	; select bank4
  4715  030F  1395               	bcf	21,7	;volatile
  4716                           
  4717                           ;Lab3_SD.c: 17:     SPI_Write(0xFF);
  4718  0310  30FF               	movlw	255
  4719  0311  3180  2043  3183   	fcall	_SPI_Write
  4720                           
  4721                           ;Lab3_SD.c: 18:     SPI_Write(0xFF);
  4722  0314  30FF               	movlw	255
  4723  0315  3180  2043  3183   	fcall	_SPI_Write
  4724                           
  4725                           ;Lab3_SD.c: 19:     SPI_Write(0xFF);
  4726  0318  30FF               	movlw	255
  4727  0319  3180  2043  3183   	fcall	_SPI_Write
  4728                           
  4729                           ;Lab3_SD.c: 20:     SPI_Write(0xFF);
  4730  031C  30FF               	movlw	255
  4731  031D  3180  2043  3183   	fcall	_SPI_Write
  4732                           
  4733                           ;Lab3_SD.c: 21:     SPI_Write(0xFF);
  4734  0320  30FF               	movlw	255
  4735  0321  3180  2043  3183   	fcall	_SPI_Write
  4736                           
  4737                           ;Lab3_SD.c: 22:     SPI_Write(0xFF);
  4738  0324  30FF               	movlw	255
  4739  0325  3180  2043  3183   	fcall	_SPI_Write
  4740                           
  4741                           ;Lab3_SD.c: 23:     SPI_Write(0xFF);
  4742  0328  30FF               	movlw	255
  4743  0329  3180  2043  3183   	fcall	_SPI_Write
  4744                           
  4745                           ;Lab3_SD.c: 24:     SPI_Write(0xFF);
  4746  032C  30FF               	movlw	255
  4747  032D  3180  2043  3183   	fcall	_SPI_Write
  4748                           
  4749                           ;Lab3_SD.c: 25:     SPI_Write(0xFF);
  4750  0330  30FF               	movlw	255
  4751  0331  3180  2043  3183   	fcall	_SPI_Write
  4752                           
  4753                           ;Lab3_SD.c: 26:     SPI_Write(0xFF);
  4754  0334  30FF               	movlw	255
  4755  0335  3180  2043  3183   	fcall	_SPI_Write
  4756                           
  4757                           ;Lab3_SD.c: 28:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  4758  0338  0020               	movlb	0	; select bank0
  4759  0339  138E               	bcf	14,7	;volatile
  4760  033A  0024               	movlb	4	; select bank4
  4761  033B  1395               	bcf	21,7	;volatile
  4762  033C                     l1797:	
  4763                           
  4764                           ;Lab3_SD.c: 35:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  4765  033C  01F1               	clrf	SD_SendCommand@ARG3
  4766  033D  01F2               	clrf	SD_SendCommand@ARG2
  4767  033E  01F3               	clrf	SD_SendCommand@ARG1
  4768  033F  01F4               	clrf	SD_SendCommand@ARG0
  4769  0340  3000               	movlw	0
  4770  0341  3184  2428  3183   	fcall	_SD_SendCommand
  4771                           
  4772                           ;Lab3_SD.c: 36:         SD_Read8bitResponse();
  4773  0344  3180  2081  3183   	fcall	_SD_Read8bitResponse
  4774  0347  0000               	nop	;# 
  4775                           
  4776                           ;Lab3_SD.c: 38:     } while (SD_Check8bitResponse(0x01) == 0);
  4777  0348  3001               	movlw	1
  4778  0349  3180  204A  3183   	fcall	_SD_Check8bitResponse
  4779  034C  3A00               	xorlw	0
  4780  034D  1903               	skipnz
  4781  034E  2B3C               	goto	l1797
  4782  034F                     l1803:	
  4783                           
  4784                           ;Lab3_SD.c: 45:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  4785  034F  01F1               	clrf	SD_SendCommand@ARG3
  4786  0350  01F2               	clrf	SD_SendCommand@ARG2
  4787  0351  01F3               	clrf	SD_SendCommand@ARG1
  4788  0352  0AF3               	incf	SD_SendCommand@ARG1,f
  4789  0353  30AA               	movlw	170
  4790  0354  00F9               	movwf	??_SD_Init
  4791  0355  0879               	movf	??_SD_Init,w
  4792  0356  00F4               	movwf	SD_SendCommand@ARG0
  4793  0357  3008               	movlw	8
  4794  0358  3184  2428  3183   	fcall	_SD_SendCommand
  4795                           
  4796                           ;Lab3_SD.c: 46:         SD_Read40bitResponse();
  4797  035B  3180  20E4  3183   	fcall	_SD_Read40bitResponse
  4798  035E  0000               	nop	;# 
  4799                           
  4800                           ;Lab3_SD.c: 48:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  4801  035F  01F0               	clrf	SD_Check40bitResponse@Byte3
  4802  0360  01F1               	clrf	SD_Check40bitResponse@Byte2
  4803  0361  01F2               	clrf	SD_Check40bitResponse@Byte1
  4804  0362  0AF2               	incf	SD_Check40bitResponse@Byte1,f
  4805  0363  30AA               	movlw	170
  4806  0364  00F9               	movwf	??_SD_Init
  4807  0365  0879               	movf	??_SD_Init,w
  4808  0366  00F3               	movwf	SD_Check40bitResponse@Byte0
  4809  0367  3001               	movlw	1
  4810  0368  3180  2092  3183   	fcall	_SD_Check40bitResponse
  4811  036B  3A00               	xorlw	0
  4812  036C  1903               	skipnz
  4813  036D  2B4F               	goto	l1803
  4814  036E                     l1809:	
  4815                           
  4816                           ;Lab3_SD.c: 56:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  4817  036E  01F1               	clrf	SD_SendCommand@ARG3
  4818  036F  01F2               	clrf	SD_SendCommand@ARG2
  4819  0370  01F3               	clrf	SD_SendCommand@ARG1
  4820  0371  01F4               	clrf	SD_SendCommand@ARG0
  4821  0372  3037               	movlw	55
  4822  0373  3184  2428  3183   	fcall	_SD_SendCommand
  4823                           
  4824                           ;Lab3_SD.c: 57:             SD_Read8bitResponse();
  4825  0376  3180  2081  3183   	fcall	_SD_Read8bitResponse
  4826  0379  0000               	nop	;# 
  4827                           
  4828                           ;Lab3_SD.c: 59:         } while (SD_Check8bitResponse(0x01) == 0);
  4829  037A  3001               	movlw	1
  4830  037B  3180  204A  3183   	fcall	_SD_Check8bitResponse
  4831  037E  3A00               	xorlw	0
  4832  037F  1903               	skipnz
  4833  0380  2B6E               	goto	l1809
  4834                           
  4835                           ;Lab3_SD.c: 66:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  4836  0381  3040               	movlw	64
  4837  0382  00F9               	movwf	??_SD_Init
  4838  0383  0879               	movf	??_SD_Init,w
  4839  0384  00F1               	movwf	SD_SendCommand@ARG3
  4840  0385  01F2               	clrf	SD_SendCommand@ARG2
  4841  0386  01F3               	clrf	SD_SendCommand@ARG1
  4842  0387  01F4               	clrf	SD_SendCommand@ARG0
  4843  0388  3029               	movlw	41
  4844  0389  3184  2428  3183   	fcall	_SD_SendCommand
  4845                           
  4846                           ;Lab3_SD.c: 67:         SD_Read8bitResponse();
  4847  038C  3180  2081  3183   	fcall	_SD_Read8bitResponse
  4848  038F  0000               	nop	;# 
  4849                           
  4850                           ;Lab3_SD.c: 69:     } while (SD_Check8bitResponse(0x00) == 0);
  4851  0390  3000               	movlw	0
  4852  0391  3180  204A  3183   	fcall	_SD_Check8bitResponse
  4853  0394  3A00               	xorlw	0
  4854  0395  1D03               	btfss	3,2
  4855  0396  0008               	return
  4856  0397  2B6E               	goto	l1809
  4857  0398                     __end_of_SD_Init:	
  4858                           
  4859                           	psect	text11
  4860  0428                     __ptext11:	
  4861 ;; *************** function _SD_SendCommand *****************
  4862 ;; Defined at:
  4863 ;;		line 78 in file "Lab3_SD.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  CMD_6bit        1    wreg     unsigned char 
  4866 ;;  ARG3            1    1[COMMON] unsigned char 
  4867 ;;  ARG2            1    2[COMMON] unsigned char 
  4868 ;;  ARG1            1    3[COMMON] unsigned char 
  4869 ;;  ARG0            1    4[COMMON] unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  CMD_6bit        1    6[COMMON] unsigned char 
  4872 ;;  Checksum        1    8[COMMON] unsigned char 
  4873 ;;  ByteToSend      1    7[COMMON] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        8 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    1
  4890 ;; This function calls:
  4891 ;;		_SPI_Write
  4892 ;; This function is called by:
  4893 ;;		_SD_Init
  4894 ;;		_active
  4895 ;;		_SD_WriteBlock
  4896 ;;		_SD_ReadBlock
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _SD_SendCommand
  4902  0428                     _SD_SendCommand:	
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4906                           ;SD_SendCommand@CMD_6bit stored from wreg
  4907  0428  00F6               	movwf	SD_SendCommand@CMD_6bit
  4908                           
  4909                           ;Lab3_SD.c: 81:     char Checksum = 0x00;
  4910  0429  01F8               	clrf	SD_SendCommand@Checksum
  4911                           
  4912                           ;Lab3_SD.c: 84:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  4913  042A  0876               	movf	SD_SendCommand@CMD_6bit,w
  4914  042B  393F               	andlw	63
  4915  042C  3840               	iorlw	64
  4916  042D  00F5               	movwf	??_SD_SendCommand
  4917  042E  0875               	movf	??_SD_SendCommand,w
  4918  042F  00F7               	movwf	SD_SendCommand@ByteToSend
  4919                           
  4920                           ;Lab3_SD.c: 85:     SPI_Write(ByteToSend);
  4921  0430  0877               	movf	SD_SendCommand@ByteToSend,w
  4922  0431  3180  2043  3184   	fcall	_SPI_Write
  4923                           
  4924                           ;Lab3_SD.c: 86:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checks
      +                          um = CRCTable[Checksum]; };
  4925  0434  3578               	lslf	SD_SendCommand@Checksum,w
  4926  0435  00F5               	movwf	??_SD_SendCommand
  4927  0436  0875               	movf	??_SD_SendCommand,w
  4928  0437  00F8               	movwf	SD_SendCommand@Checksum
  4929  0438  0878               	movf	SD_SendCommand@Checksum,w
  4930  0439  0677               	xorwf	SD_SendCommand@ByteToSend,w
  4931  043A  00F5               	movwf	??_SD_SendCommand
  4932  043B  0875               	movf	??_SD_SendCommand,w
  4933  043C  00F8               	movwf	SD_SendCommand@Checksum
  4934  043D  0878               	movf	SD_SendCommand@Checksum,w
  4935  043E  3E00               	addlw	low (_CRCTable| (0+32768))
  4936  043F  0084               	movwf	4
  4937  0440  3088               	movlw	high (_CRCTable| (0+32768))
  4938  0441  1803               	skipnc
  4939  0442  3E01               	addlw	1
  4940  0443  0085               	movwf	5
  4941  0444  0800               	movf	0,w	;code access
  4942  0445  00F5               	movwf	??_SD_SendCommand
  4943  0446  0875               	movf	??_SD_SendCommand,w
  4944  0447  00F8               	movwf	SD_SendCommand@Checksum
  4945                           
  4946                           ;Lab3_SD.c: 89:     ByteToSend = ARG3;
  4947  0448  0871               	movf	SD_SendCommand@ARG3,w
  4948  0449  00F5               	movwf	??_SD_SendCommand
  4949  044A  0875               	movf	??_SD_SendCommand,w
  4950  044B  00F7               	movwf	SD_SendCommand@ByteToSend
  4951                           
  4952                           ;Lab3_SD.c: 90:     SPI_Write(ByteToSend);
  4953  044C  0877               	movf	SD_SendCommand@ByteToSend,w
  4954  044D  3180  2043  3184   	fcall	_SPI_Write
  4955                           
  4956                           ;Lab3_SD.c: 91:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checks
      +                          um = CRCTable[Checksum]; };
  4957  0450  3578               	lslf	SD_SendCommand@Checksum,w
  4958  0451  00F5               	movwf	??_SD_SendCommand
  4959  0452  0875               	movf	??_SD_SendCommand,w
  4960  0453  00F8               	movwf	SD_SendCommand@Checksum
  4961  0454  0878               	movf	SD_SendCommand@Checksum,w
  4962  0455  0677               	xorwf	SD_SendCommand@ByteToSend,w
  4963  0456  00F5               	movwf	??_SD_SendCommand
  4964  0457  0875               	movf	??_SD_SendCommand,w
  4965  0458  00F8               	movwf	SD_SendCommand@Checksum
  4966  0459  0878               	movf	SD_SendCommand@Checksum,w
  4967  045A  3E00               	addlw	low (_CRCTable| (0+32768))
  4968  045B  0084               	movwf	4
  4969  045C  3088               	movlw	high (_CRCTable| (0+32768))
  4970  045D  1803               	skipnc
  4971  045E  3E01               	addlw	1
  4972  045F  0085               	movwf	5
  4973  0460  0800               	movf	0,w	;code access
  4974  0461  00F5               	movwf	??_SD_SendCommand
  4975  0462  0875               	movf	??_SD_SendCommand,w
  4976  0463  00F8               	movwf	SD_SendCommand@Checksum
  4977                           
  4978                           ;Lab3_SD.c: 93:     ByteToSend = ARG2;
  4979  0464  0872               	movf	SD_SendCommand@ARG2,w
  4980  0465  00F5               	movwf	??_SD_SendCommand
  4981  0466  0875               	movf	??_SD_SendCommand,w
  4982  0467  00F7               	movwf	SD_SendCommand@ByteToSend
  4983                           
  4984                           ;Lab3_SD.c: 94:     SPI_Write(ByteToSend);
  4985  0468  0877               	movf	SD_SendCommand@ByteToSend,w
  4986  0469  3180  2043  3184   	fcall	_SPI_Write
  4987                           
  4988                           ;Lab3_SD.c: 95:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checks
      +                          um = CRCTable[Checksum]; };
  4989  046C  3578               	lslf	SD_SendCommand@Checksum,w
  4990  046D  00F5               	movwf	??_SD_SendCommand
  4991  046E  0875               	movf	??_SD_SendCommand,w
  4992  046F  00F8               	movwf	SD_SendCommand@Checksum
  4993  0470  0878               	movf	SD_SendCommand@Checksum,w
  4994  0471  0677               	xorwf	SD_SendCommand@ByteToSend,w
  4995  0472  00F5               	movwf	??_SD_SendCommand
  4996  0473  0875               	movf	??_SD_SendCommand,w
  4997  0474  00F8               	movwf	SD_SendCommand@Checksum
  4998  0475  0878               	movf	SD_SendCommand@Checksum,w
  4999  0476  3E00               	addlw	low (_CRCTable| (0+32768))
  5000  0477  0084               	movwf	4
  5001  0478  3088               	movlw	high (_CRCTable| (0+32768))
  5002  0479  1803               	skipnc
  5003  047A  3E01               	addlw	1
  5004  047B  0085               	movwf	5
  5005  047C  0800               	movf	0,w	;code access
  5006  047D  00F5               	movwf	??_SD_SendCommand
  5007  047E  0875               	movf	??_SD_SendCommand,w
  5008  047F  00F8               	movwf	SD_SendCommand@Checksum
  5009                           
  5010                           ;Lab3_SD.c: 97:     ByteToSend = ARG1;
  5011  0480  0873               	movf	SD_SendCommand@ARG1,w
  5012  0481  00F5               	movwf	??_SD_SendCommand
  5013  0482  0875               	movf	??_SD_SendCommand,w
  5014  0483  00F7               	movwf	SD_SendCommand@ByteToSend
  5015                           
  5016                           ;Lab3_SD.c: 98:     SPI_Write(ByteToSend);
  5017  0484  0877               	movf	SD_SendCommand@ByteToSend,w
  5018  0485  3180  2043  3184   	fcall	_SPI_Write
  5019                           
  5020                           ;Lab3_SD.c: 99:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checks
      +                          um = CRCTable[Checksum]; };
  5021  0488  3578               	lslf	SD_SendCommand@Checksum,w
  5022  0489  00F5               	movwf	??_SD_SendCommand
  5023  048A  0875               	movf	??_SD_SendCommand,w
  5024  048B  00F8               	movwf	SD_SendCommand@Checksum
  5025  048C  0878               	movf	SD_SendCommand@Checksum,w
  5026  048D  0677               	xorwf	SD_SendCommand@ByteToSend,w
  5027  048E  00F5               	movwf	??_SD_SendCommand
  5028  048F  0875               	movf	??_SD_SendCommand,w
  5029  0490  00F8               	movwf	SD_SendCommand@Checksum
  5030  0491  0878               	movf	SD_SendCommand@Checksum,w
  5031  0492  3E00               	addlw	low (_CRCTable| (0+32768))
  5032  0493  0084               	movwf	4
  5033  0494  3088               	movlw	high (_CRCTable| (0+32768))
  5034  0495  1803               	skipnc
  5035  0496  3E01               	addlw	1
  5036  0497  0085               	movwf	5
  5037  0498  0800               	movf	0,w	;code access
  5038  0499  00F5               	movwf	??_SD_SendCommand
  5039  049A  0875               	movf	??_SD_SendCommand,w
  5040  049B  00F8               	movwf	SD_SendCommand@Checksum
  5041                           
  5042                           ;Lab3_SD.c: 101:     ByteToSend = ARG0;
  5043  049C  0874               	movf	SD_SendCommand@ARG0,w
  5044  049D  00F5               	movwf	??_SD_SendCommand
  5045  049E  0875               	movf	??_SD_SendCommand,w
  5046  049F  00F7               	movwf	SD_SendCommand@ByteToSend
  5047                           
  5048                           ;Lab3_SD.c: 102:     SPI_Write(ByteToSend);
  5049  04A0  0877               	movf	SD_SendCommand@ByteToSend,w
  5050  04A1  3180  2043  3184   	fcall	_SPI_Write
  5051                           
  5052                           ;Lab3_SD.c: 103:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Check
      +                          sum = CRCTable[Checksum]; };
  5053  04A4  3578               	lslf	SD_SendCommand@Checksum,w
  5054  04A5  00F5               	movwf	??_SD_SendCommand
  5055  04A6  0875               	movf	??_SD_SendCommand,w
  5056  04A7  00F8               	movwf	SD_SendCommand@Checksum
  5057  04A8  0878               	movf	SD_SendCommand@Checksum,w
  5058  04A9  0677               	xorwf	SD_SendCommand@ByteToSend,w
  5059  04AA  00F5               	movwf	??_SD_SendCommand
  5060  04AB  0875               	movf	??_SD_SendCommand,w
  5061  04AC  00F8               	movwf	SD_SendCommand@Checksum
  5062  04AD  0878               	movf	SD_SendCommand@Checksum,w
  5063  04AE  3E00               	addlw	low (_CRCTable| (0+32768))
  5064  04AF  0084               	movwf	4
  5065  04B0  3088               	movlw	high (_CRCTable| (0+32768))
  5066  04B1  1803               	skipnc
  5067  04B2  3E01               	addlw	1
  5068  04B3  0085               	movwf	5
  5069  04B4  0800               	movf	0,w	;code access
  5070  04B5  00F5               	movwf	??_SD_SendCommand
  5071  04B6  0875               	movf	??_SD_SendCommand,w
  5072  04B7  00F8               	movwf	SD_SendCommand@Checksum
  5073                           
  5074                           ;Lab3_SD.c: 106:     ByteToSend = (Checksum << 1) | 0x01;
  5075  04B8  1403               	setc
  5076  04B9  0D78               	rlf	SD_SendCommand@Checksum,w
  5077  04BA  00F5               	movwf	??_SD_SendCommand
  5078  04BB  0875               	movf	??_SD_SendCommand,w
  5079  04BC  00F7               	movwf	SD_SendCommand@ByteToSend
  5080                           
  5081                           ;Lab3_SD.c: 107:     SPI_Write(ByteToSend);
  5082  04BD  0877               	movf	SD_SendCommand@ByteToSend,w
  5083  04BE  3180  2043         	fcall	_SPI_Write
  5084  04C0  0008               	return
  5085  04C1                     __end_of_SD_SendCommand:	
  5086                           
  5087                           	psect	text12
  5088  0043                     __ptext12:	
  5089 ;; *************** function _SPI_Write *****************
  5090 ;; Defined at:
  5091 ;;		line 39 in file "Lab3_SPI.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  Data_8bit       1    wreg     unsigned char 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  Data_8bit       1    0[COMMON] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		wreg
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_SD_Init
  5115 ;;		_SD_SendCommand
  5116 ;;		_SD_WriteBlock
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _SPI_Write
  5122  0043                     _SPI_Write:	
  5123                           
  5124                           ;incstack = 0
  5125                           ; Regs used in _SPI_Write: [wreg]
  5126                           ;SPI_Write@Data_8bit stored from wreg
  5127  0043  00F0               	movwf	SPI_Write@Data_8bit
  5128                           
  5129                           ;Lab3_SPI.c: 39: void SPI_Write(char Data_8bit);Lab3_SPI.c: 40: {;Lab3_SPI.c: 41:     SS
      +                          P1BUF = Data_8bit;
  5130  0044  0870               	movf	SPI_Write@Data_8bit,w
  5131  0045  0024               	movlb	4	; select bank4
  5132  0046  0091               	movwf	17	;volatile
  5133  0047                     l114:	
  5134                           ;Lab3_SPI.c: 42:     while(SSP1STATbits.BF == 0);
  5135                           
  5136  0047  1814               	btfsc	20,0	;volatile
  5137  0048  0008               	return
  5138  0049  2847               	goto	l114
  5139  004A                     __end_of_SPI_Write:	
  5140                           
  5141                           	psect	text13
  5142  0081                     __ptext13:	
  5143 ;; *************** function _SD_Read8bitResponse *****************
  5144 ;; Defined at:
  5145 ;;		line 114 in file "Lab3_SD.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  readMessage     1    1[COMMON] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:        2 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    1
  5166 ;; This function calls:
  5167 ;;		_SPI_Read
  5168 ;; This function is called by:
  5169 ;;		_SD_Init
  5170 ;;		_active
  5171 ;;		_SD_WriteBlock
  5172 ;;		_SD_ReadBlock
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _SD_Read8bitResponse
  5178  0081                     _SD_Read8bitResponse:	
  5179  0081                     l1477:	
  5180                           ;incstack = 0
  5181                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5182                           
  5183  0081  3180  203C  3180   	fcall	_SPI_Read
  5184  0084  00F0               	movwf	??_SD_Read8bitResponse
  5185  0085  0870               	movf	??_SD_Read8bitResponse,w
  5186  0086  00F1               	movwf	SD_Read8bitResponse@readMessage
  5187  0087  0A71               	incf	SD_Read8bitResponse@readMessage,w
  5188  0088  1903               	btfsc	3,2
  5189  0089  2881               	goto	l1477
  5190                           
  5191                           ;Lab3_SD.c: 124:     GLBL_Resp8 = readMessage;
  5192  008A  0871               	movf	SD_Read8bitResponse@readMessage,w
  5193  008B  00F0               	movwf	??_SD_Read8bitResponse
  5194  008C  0870               	movf	??_SD_Read8bitResponse,w
  5195  008D  0020               	movlb	0	; select bank0
  5196  008E  00C8               	movwf	_GLBL_Resp8
  5197                           
  5198                           ;Lab3_SD.c: 127:     SPI_Read();
  5199  008F  3180  203C         	fcall	_SPI_Read
  5200  0091  0008               	return
  5201  0092                     __end_of_SD_Read8bitResponse:	
  5202                           
  5203                           	psect	text14
  5204  00E4                     __ptext14:	
  5205 ;; *************** function _SD_Read40bitResponse *****************
  5206 ;; Defined at:
  5207 ;;		line 145 in file "Lab3_SD.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  readMessage     1    1[COMMON] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0, pclath, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    1
  5228 ;; This function calls:
  5229 ;;		_SPI_Read
  5230 ;; This function is called by:
  5231 ;;		_SD_Init
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _SD_Read40bitResponse
  5237  00E4                     _SD_Read40bitResponse:	
  5238  00E4                     l1597:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5241                           
  5242  00E4  3180  203C  3180   	fcall	_SPI_Read
  5243  00E7  00F0               	movwf	??_SD_Read40bitResponse
  5244  00E8  0870               	movf	??_SD_Read40bitResponse,w
  5245  00E9  00F1               	movwf	SD_Read40bitResponse@readMessage
  5246  00EA  0A71               	incf	SD_Read40bitResponse@readMessage,w
  5247  00EB  1903               	btfsc	3,2
  5248  00EC  28E4               	goto	l1597
  5249                           
  5250                           ;Lab3_SD.c: 155:     GLBL_Resp40[0] = readMessage;
  5251  00ED  0871               	movf	SD_Read40bitResponse@readMessage,w
  5252  00EE  00F0               	movwf	??_SD_Read40bitResponse
  5253  00EF  0870               	movf	??_SD_Read40bitResponse,w
  5254  00F0  0020               	movlb	0	; select bank0
  5255  00F1  00BF               	movwf	_GLBL_Resp40
  5256                           
  5257                           ;Lab3_SD.c: 156:     GLBL_Resp40[1] = SPI_Read();
  5258  00F2  3180  203C  3180   	fcall	_SPI_Read
  5259  00F5  00F0               	movwf	??_SD_Read40bitResponse
  5260  00F6  0870               	movf	??_SD_Read40bitResponse,w
  5261  00F7  0020               	movlb	0	; select bank0
  5262  00F8  00C0               	movwf	_GLBL_Resp40+1
  5263                           
  5264                           ;Lab3_SD.c: 157:     GLBL_Resp40[2] = SPI_Read();
  5265  00F9  3180  203C  3180   	fcall	_SPI_Read
  5266  00FC  00F0               	movwf	??_SD_Read40bitResponse
  5267  00FD  0870               	movf	??_SD_Read40bitResponse,w
  5268  00FE  0020               	movlb	0	; select bank0
  5269  00FF  00C1               	movwf	_GLBL_Resp40+2
  5270                           
  5271                           ;Lab3_SD.c: 158:     GLBL_Resp40[3] = SPI_Read();
  5272  0100  3180  203C  3180   	fcall	_SPI_Read
  5273  0103  00F0               	movwf	??_SD_Read40bitResponse
  5274  0104  0870               	movf	??_SD_Read40bitResponse,w
  5275  0105  0020               	movlb	0	; select bank0
  5276  0106  00C2               	movwf	_GLBL_Resp40+3
  5277                           
  5278                           ;Lab3_SD.c: 159:     GLBL_Resp40[4] = SPI_Read();
  5279  0107  3180  203C  3180   	fcall	_SPI_Read
  5280  010A  00F0               	movwf	??_SD_Read40bitResponse
  5281  010B  0870               	movf	??_SD_Read40bitResponse,w
  5282  010C  0020               	movlb	0	; select bank0
  5283  010D  00C3               	movwf	_GLBL_Resp40+4
  5284                           
  5285                           ;Lab3_SD.c: 162:     SPI_Read();
  5286  010E  3180  203C         	fcall	_SPI_Read
  5287  0110  0008               	return
  5288  0111                     __end_of_SD_Read40bitResponse:	
  5289                           
  5290                           	psect	text15
  5291  003C                     __ptext15:	
  5292 ;; *************** function _SPI_Read *****************
  5293 ;; Defined at:
  5294 ;;		line 48 in file "Lab3_SPI.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      unsigned char 
  5301 ;; Registers used:
  5302 ;;		wreg
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_SD_Read8bitResponse
  5318 ;;		_SD_Read40bitResponse
  5319 ;;		_active
  5320 ;;		_SD_ReadBlock
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _SPI_Read
  5326  003C                     _SPI_Read:	
  5327                           
  5328                           ;Lab3_SPI.c: 50:     SSP1BUF = 0xFF;
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _SPI_Read: [wreg]
  5332  003C  30FF               	movlw	255
  5333  003D  0024               	movlb	4	; select bank4
  5334  003E  0091               	movwf	17	;volatile
  5335  003F                     l120:	
  5336                           ;Lab3_SPI.c: 51:     while(SSP1STATbits.BF == 0);
  5337                           
  5338  003F  1C14               	btfss	20,0	;volatile
  5339  0040  283F               	goto	l120
  5340                           
  5341                           ;Lab3_SPI.c: 52:     return SSP1BUF;
  5342  0041  0811               	movf	17,w	;volatile
  5343  0042  0008               	return
  5344  0043                     __end_of_SPI_Read:	
  5345                           
  5346                           	psect	text16
  5347  004A                     __ptext16:	
  5348 ;; *************** function _SD_Check8bitResponse *****************
  5349 ;; Defined at:
  5350 ;;		line 135 in file "Lab3_SD.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  Byte            1    wreg     unsigned char 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  Byte            1    0[COMMON] unsigned char 
  5355 ;;  match           1    1[COMMON] _Bool 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      _Bool 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:        2 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_SD_Init
  5375 ;;		_SD_WriteBlock
  5376 ;;		_SD_ReadBlock
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _SD_Check8bitResponse
  5382  004A                     _SD_Check8bitResponse:	
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5386                           ;SD_Check8bitResponse@Byte stored from wreg
  5387  004A  00F0               	movwf	SD_Check8bitResponse@Byte
  5388                           
  5389                           ;Lab3_SD.c: 135: _Bool SD_Check8bitResponse(char Byte);Lab3_SD.c: 136: {;Lab3_SD.c: 137:
      +                               _Bool match = 1;
  5390  004B  01F1               	clrf	SD_Check8bitResponse@match
  5391  004C  0AF1               	incf	SD_Check8bitResponse@match,f
  5392                           
  5393                           ;Lab3_SD.c: 138:     if (Byte != GLBL_Resp8) match = 0;
  5394  004D  0870               	movf	SD_Check8bitResponse@Byte,w
  5395  004E  0020               	movlb	0	; select bank0
  5396  004F  0648               	xorwf	_GLBL_Resp8,w
  5397  0050  1D03               	btfss	3,2
  5398  0051  01F1               	clrf	SD_Check8bitResponse@match
  5399                           
  5400                           ;Lab3_SD.c: 139:     return match;
  5401  0052  0871               	movf	SD_Check8bitResponse@match,w
  5402  0053  0008               	return
  5403  0054                     __end_of_SD_Check8bitResponse:	
  5404                           
  5405                           	psect	text17
  5406  0092                     __ptext17:	
  5407 ;; *************** function _SD_Check40bitResponse *****************
  5408 ;; Defined at:
  5409 ;;		line 171 in file "Lab3_SD.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  Byte4           1    wreg     unsigned char 
  5412 ;;  Byte3           1    0[COMMON] unsigned char 
  5413 ;;  Byte2           1    1[COMMON] unsigned char 
  5414 ;;  Byte1           1    2[COMMON] unsigned char 
  5415 ;;  Byte0           1    3[COMMON] unsigned char 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  Byte4           1    4[COMMON] unsigned char 
  5418 ;;  match           1    5[COMMON] _Bool 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      _Bool 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5432 ;;Total ram usage:        6 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_SD_Init
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _SD_Check40bitResponse
  5443  0092                     _SD_Check40bitResponse:	
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5447                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5448  0092  00F4               	movwf	SD_Check40bitResponse@Byte4
  5449                           
  5450                           ;Lab3_SD.c: 171: _Bool SD_Check40bitResponse(char Byte4, char Byte3, char Byte2, char By
      +                          te1, char Byte0);Lab3_SD.c: 172: {;Lab3_SD.c: 173:     _Bool match = 1;
  5451  0093  01F5               	clrf	SD_Check40bitResponse@match
  5452  0094  0AF5               	incf	SD_Check40bitResponse@match,f
  5453                           
  5454                           ;Lab3_SD.c: 174:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5455  0095  0020               	movlb	0	; select bank0
  5456  0096  083F               	movf	_GLBL_Resp40,w
  5457  0097  0674               	xorwf	SD_Check40bitResponse@Byte4,w
  5458  0098  1D03               	btfss	3,2
  5459  0099  01F5               	clrf	SD_Check40bitResponse@match
  5460                           
  5461                           ;Lab3_SD.c: 175:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5462  009A  0840               	movf	_GLBL_Resp40+1,w
  5463  009B  0670               	xorwf	SD_Check40bitResponse@Byte3,w
  5464  009C  1D03               	btfss	3,2
  5465  009D  01F5               	clrf	SD_Check40bitResponse@match
  5466                           
  5467                           ;Lab3_SD.c: 176:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5468  009E  0841               	movf	_GLBL_Resp40+2,w
  5469  009F  0671               	xorwf	SD_Check40bitResponse@Byte2,w
  5470  00A0  1D03               	btfss	3,2
  5471  00A1  01F5               	clrf	SD_Check40bitResponse@match
  5472                           
  5473                           ;Lab3_SD.c: 177:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5474  00A2  0842               	movf	_GLBL_Resp40+3,w
  5475  00A3  0672               	xorwf	SD_Check40bitResponse@Byte1,w
  5476  00A4  1D03               	btfss	3,2
  5477  00A5  01F5               	clrf	SD_Check40bitResponse@match
  5478                           
  5479                           ;Lab3_SD.c: 178:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5480  00A6  0843               	movf	_GLBL_Resp40+4,w
  5481  00A7  0673               	xorwf	SD_Check40bitResponse@Byte0,w
  5482  00A8  1D03               	btfss	3,2
  5483  00A9  01F5               	clrf	SD_Check40bitResponse@match
  5484                           
  5485                           ;Lab3_SD.c: 179:     return match;
  5486  00AA  0875               	movf	SD_Check40bitResponse@match,w
  5487  00AB  0008               	return
  5488  00AC                     __end_of_SD_Check40bitResponse:	
  5489  007E                     btemp	set	126	;btemp
  5490  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    256
    Data        146
    BSS         20
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     12      41
    BANK1            80      0      68
    BANK2            80      0      68
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    charPointer	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), us_Address(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_readTime
    _readTime->_playAudio
    _playMinute10->_playAudio
    _playMinute->_playAudio
    _playHour->_playAudio
    _playAudio->_active
    _active->_SD_SendCommand
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _main in BANK0

    _main->_readTime
    _readTime->_playHour
    _readTime->_playMinute
    _readTime->_playMinute10
    _playMinute10->_playAudio
    _playMinute->_playAudio
    _playHour->_playAudio

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41724
                            _SD_Init
                           _SPI_Init
                           _readTime
 ---------------------------------------------------------------------------------
 (1) _readTime                                             7     3      4   38245
                                             12 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _playAudio
                           _playHour
                         _playMinute
                       _playMinute10
 ---------------------------------------------------------------------------------
 (2) _playMinute10                                         2     0      2    9937
                                              4 BANK0      2     0      2
                            ___awdiv
                          _playAudio
 ---------------------------------------------------------------------------------
 (2) _playMinute                                           2     0      2   10289
                                              4 BANK0      2     0      2
                            ___awdiv
                          _playAudio
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _playHour                                             2     0      2    9053
                                              4 BANK0      2     0      2
                          _playAudio
 ---------------------------------------------------------------------------------
 (3) _playAudio                                            5     1      4    8637
                                             11 COMMON     1     1      0
                                              0 BANK0      4     0      4
                             _active
 ---------------------------------------------------------------------------------
 (4) _active                                               2     2      0    2969
                                              9 COMMON     2     2      0
                           _Lab3_DAQ
                _SD_Read8bitResponse
                     _SD_SendCommand
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (5) _Lab3_DAQ                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SD_Init                                              1     1      0    3479
                                              9 COMMON     1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (5) _SD_SendCommand                                       8     4      4    2877
                                              1 COMMON     8     4      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (6) _SPI_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _SD_Read8bitResponse                                  2     2      0      46
                                              0 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SD_Read40bitResponse                                 2     2      0      46
                                              0 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (5) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Check8bitResponse                                 2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_Check40bitResponse                                6     2      4     442
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_Init
     _SD_Check40bitResponse
     _SD_Check8bitResponse
     _SD_Read40bitResponse
       _SPI_Read
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
     _SPI_Write
   _SPI_Init
   _readTime
     _playAudio
       _active
         _Lab3_DAQ
         _SD_Read8bitResponse
           _SPI_Read
         _SD_SendCommand
           _SPI_Write
         _SPI_Read
     _playHour
       _playAudio
         _active
           _Lab3_DAQ
           _SD_Read8bitResponse
             _SPI_Read
           _SD_SendCommand
             _SPI_Write
           _SPI_Read
     _playMinute
       ___awdiv
       _playAudio
         _active
           _Lab3_DAQ
           _SD_Read8bitResponse
             _SPI_Read
           _SD_SendCommand
             _SPI_Write
           _SPI_Read
     _playMinute10
       ___awdiv
       _playAudio
         _active
           _Lab3_DAQ
           _SD_Read8bitResponse
             _SPI_Read
           _SD_SendCommand
             _SPI_Write
           _SPI_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      D       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50      C      29       5       51.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      44      10       85.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      BF      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               10      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK7                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK8                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK9                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK10               0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK11               0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      BF      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK12               0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19               0      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20               0      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21               0      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22               0      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23               0      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24               0      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25               0      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 10 12:39:17 2019

               playMinute@minute 0037                     ___awdiv@sign 0076            playAudio@startAddress 0033  
                            l120 003F                              l114 0047                              l220 0243  
                            l227 029A                              l245 0239                              u925 01F1  
                            u995 01B9                              wreg 0009           ??_SD_Check8bitResponse 0070  
                ?_SD_SendCommand 0071                             l1501 020C                             l1505 0215  
                           l1521 01EA                             l1523 023E                             l1535 00C1  
                           l1703 0404                             l1803 034F                             l1555 01AE  
                           l1731 0667                             l1723 0639                             l1715 0609  
                           l1477 0081                             l1661 0539                             l1653 0509  
                           l1645 04D9                             l1581 01E5                             l1573 01D4  
                           l1565 01B6                             l1549 01A3                             l1567 01C2  
                           l1743 06AC                             l1735 067E                             l1727 0650  
                           l1719 0621                             l1751 06DA                             l1809 036E  
                           l1681 05B1                             l1673 0581                             l1665 0551  
                           l1657 0521                             l1649 04F1                             l1577 01DD  
                           l1841 02D9                             l1771 0753                             l1763 0723  
                           l1755 06F3                             l1747 06C3                             l1739 0695  
                           l1931 0258                             l1597 00E4                             l1685 05C9  
                           l1677 0599                             l1669 0569                             l1783 079B  
                           l1775 076B                             l1767 073B                             l1759 070B  
                           l1695 03BC                             l1779 0783                             l1699 03E0  
                           l1947 0287                             l1797 033C                             u1015 01C3  
                           u1025 01CD                             u1035 01D5                             u1545 02B0  
                           _T2PR 0494                             _main 0240                  __end_of_SD_Init 0398  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002    __size_of_SD_Read40bitResponse 002D  
            playAudio@endAddress 0035     __size_of_SD_Read8bitResponse 0011                 __end_of_CRCTable 0900  
                  __CFG_PLLEN$ON 0000                            ?_main 0070                  __end_of___awdiv 01EA  
                  __CFG_WDTE$OFF 0000                            _ANSC3 0C73                  ___awdiv@divisor 0070  
                          _T2CON 0495                  ___awdiv@counter 0075                            _skiph 002B  
                          _skipm 0029                 __end_of_SPI_Init 00E4                 __end_of_SPI_Read 0043  
               __end_of_Lab3_DAQ 0069                            status 0003                            wtemp0 007E  
             __size_of_SPI_Write 0007                  __initialization 07B2                     __end_of_main 02A3  
                         ??_main 007D                  _GLBL_ReadBuffer 21F0         SD_Check8bitResponse@Byte 0070  
                         _DAC1LD 2C68                        ??_SD_Init 0079                 ___awdiv@dividend 0072  
                         _RC2PPS 0EA2                           _RC4PPS 0EA4                           _OSCCON 009B  
                         _TRISC2 0472                           _TRISC3 0473                           _TRISC4 0474  
                         _TRISC7 0477                        ??___awdiv 0074                           _active 01EA  
               __end_of_readTime 030C         SD_SendCommand@ByteToSend 0077                 ___awdiv@quotient 0077  
                         _skipap 0028                           _us_min 0044                 __end_of_playHour 05E0  
              __end_of_SPI_Write 004A          __end_of__initialization 07FD   __size_of_SD_Check40bitResponse 001A  
  __end_of_SD_Check40bitResponse 00AC                   __pcstackCOMMON 0070                     __pidataBANK0 0054  
                   __pidataBANK1 0155                     __pidataBANK2 0111                        ?_SPI_Init 0070  
                      ?_SPI_Read 0070                active@readMessage 007A                        ?_Lab3_DAQ 0070  
               ??_SD_SendCommand 0075              _SD_Read8bitResponse 0081                    ?_playMinute10 0037  
                     __pbssBANK0 0020                       _hasAddress 002E                       __pmaintext 0240  
           ?_SD_Read8bitResponse 0070               __size_of_playAudio 001B                          ?_active 0070  
                        _DAC1REF 058F                       ??_SPI_Init 0070                       ??_SPI_Read 0070  
                     ??_Lab3_DAQ 0070                  _start_addresses 00A0     __end_of_SD_Read40bitResponse 0111  
                 ??_playMinute10 007C                          _SSP1ADD 0212                          _SSP1BUF 0211  
                        _SD_Init 030C    __size_of_SD_Check8bitResponse 000A                        ?_readTime 0039  
                      ?_playHour 0037            ??_SD_Read8bitResponse 0070                          ___awdiv 0199  
                __size_of_active 0056                     readTime@hour 0039                          __ptext1 02A3  
                        __ptext2 0398                          __ptext3 05E0                          __ptext4 0199  
                        __ptext5 04C1                          __ptext6 00AC                          __ptext7 01EA  
                        __ptext8 005E                          __ptext9 00C7               Lab3_DAQ@writevalue 0072  
                        _uc_play 0030                          _skipm10 002A                          _pressed 002C  
                        _us_hour 0046                __end_of_playAudio 00C7                          clrloop0 006A  
           end_of_initialization 07FD                       _playMinute 05E0                       _sh_counter 0026  
     SD_Check40bitResponse@Byte0 0073       SD_Check40bitResponse@Byte1 0072       SD_Check40bitResponse@Byte2 0071  
     SD_Check40bitResponse@Byte3 0070       SD_Check40bitResponse@Byte4 0074                          init_ram 0075  
                     ??_readTime 007C                          initloop 0076       SD_Check40bitResponse@match 0075  
                     ??_playHour 007C                       _us_Address 0031                        _PORTBbits 000D  
                      _PORTCbits 000E                        _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A  
               __CFG_FOSC$INTOSC 0000                        _TRISBbits 008D                    __pbssBIGRAM_1 25F0  
                      _SPI_Write 0043  SD_Read40bitResponse@readMessage 0071             _SD_Read40bitResponse 00E4  
           __end_of_playMinute10 0428                   __end_of_active 0240                __size_of_SPI_Init 001D  
              __size_of_SPI_Read 0007                __size_of_Lab3_DAQ 000B              start_initialization 07B2  
             SPI_Write@Data_8bit 0070                       ?_SPI_Write 0070                      ?_playMinute 0037  
               _GLBL_WriteBuffer 25F0            ?_SD_Read40bitResponse 0070            _SD_Check40bitResponse 0092  
                       ??_active 0079                      __pdataBANK0 003F                      __pdataBANK1 00A0  
                    __pdataBANK2 0120                      _charPointer 007D                      __pbssBIGRAM 21F0  
                    __pbssCOMMON 007D                        ___latbits 0003                    __pcstackBANK0 0033  
                    _ch_sendbyte 002F                         ?_SD_Init 0070                __size_of_readTime 0069  
              __size_of_playHour 011F                         ?___awdiv 0070     __end_of_SD_Check8bitResponse 0054  
                 readTime@minute 003B                     playHour@hour 0037              __size_of_playMinute 01D2  
                       _DAC1CON0 058E                      _GLBL_Resp40 003F                      ??_SPI_Write 0070  
                       _T2CLKCON 0497                 readTime@temphour 003D                         _CRCTable 0800  
        __size_of_SD_SendCommand 0099           ??_SD_Read40bitResponse 0070                        _playAudio 00AC  
    __end_of_SD_Read8bitResponse 0092                        clear_ram0 0069            __size_of_playMinute10 0090  
                  _us_EndAddress 0024           SD_SendCommand@CMD_6bit 0076                         _PIR1bits 0011  
         ?_SD_Check40bitResponse 0070                        _timeTrack 0020                         _SSP1CON1 0215  
                       _SSP1STAT 0214                         _SPI_Init 00C7                         _SPI_Read 003C  
                       _Lab3_DAQ 005E                    _end_addresses 0120                     _playMinute10 0398  
             playMinute10@minute 0037                 __size_of_SD_Init 008C           SD_SendCommand@Checksum 0078  
                     ?_playAudio 0033                 __size_of___awdiv 0051                       _ANSELBbits 018D  
                       __ptext10 030C                         __ptext11 0428                         __ptext12 0043  
                       __ptext13 0081                         __ptext14 00E4                         __ptext15 003C  
                       __ptext16 004A                         __ptext17 0092                     _SSP1CON1bits 0215  
                   ??_playMinute 007C             _SD_Check8bitResponse 004A                       _GLBL_Resp8 0048  
                       _readTime 02A3                    __size_of_main 0063               SD_SendCommand@ARG0 0074  
             SD_SendCommand@ARG1 0073               SD_SendCommand@ARG2 0072               SD_SendCommand@ARG3 0071  
                       _playHour 04C1                         _timeSaid 002D                     _SSP1STATbits 0214  
             __end_of_playMinute 07B2                      _OSCSTATbits 009C   SD_Read8bitResponse@readMessage 0071  
          ?_SD_Check8bitResponse 0070                   _SD_SendCommand 0428        SD_Check8bitResponse@match 0071  
                    ??_playAudio 007B                    __pstringtext1 0800           __end_of_SD_SendCommand 04C1  
        ??_SD_Check40bitResponse 0074  
